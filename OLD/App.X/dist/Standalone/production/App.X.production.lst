

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Nov 17 18:24:10 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	_NVFlag_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33  0000                     
    34                           ; Version 1.44
    35                           ; Generated 14/09/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F27K40 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  00133E                     __pidataCOMRAM:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _BLUETOOTH_LED
    74  00133E  0001               	dw	1
    75  001340  01                 	db	1
    76                           
    77                           ;initializer for _MCU_LED
    78  001341  0001               	dw	1
    79  001343  00                 	db	0
    80                           
    81                           ;initializer for _TWENTY_HZ_LOG
    82  001344  00                 	db	0
    83  001345  03                 	db	3
    84                           
    85                           ;initializer for _TEN_HZ_LOG
    86  001346  00                 	db	0
    87  001347  02                 	db	2
    88  0000                     _NVFlag_absconstaddr	set	131070
    89                           
    90                           	psect	smallconst
    91  000F00                     __psmallconst:
    92                           	opt stack 0
    93  000F00  00                 	db	0
    94  000F01                     _DEFAULT_PID_CHANNEL_CONFIG:
    95                           	opt stack 0
    96  000F01  00                 	db	0
    97  000F02  00                 	db	0
    98  000F03  00                 	db	0
    99  000F04  00                 	db	0
   100  000F05  00                 	db	0
   101  000F06  00                 	db	0
   102  000F07  0000               	dw	0
   103  000F09                     __end_of_DEFAULT_PID_CHANNEL_CONFIG:
   104                           	opt stack 0
   105  000F09                     _DEFAULT_DEVICE_CONFIG:
   106                           	opt stack 0
   107  000F09  00                 	db	0
   108  000F0A  01                 	db	1
   109  000F0B  02                 	db	2
   110  000F0C                     __end_of_DEFAULT_DEVICE_CONFIG:
   111                           	opt stack 0
   112  0000                     _NVFlag_absconstaddr	set	131070
   113  000F0C  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           	psect	_NVFlag_const
   116  01FFFE                     __p_NVFlag_const:
   117                           	opt stack 0
   118  01FFFE                     _NVFlag:
   119                           	opt stack 0
   120  01FFFE  55                 	db	85
   121  01FFFF                     __end_of_NVFlag:
   122                           	opt stack 0
   123  0000                     _OSCTUNE	set	3805
   124  0000                     _OSCFRQ	set	3806
   125  0000                     _OSCEN	set	3804
   126  0000                     _OSCCON3	set	3802
   127  0000                     _OSCCON1	set	3800
   128  0000                     _ODCONC	set	3871
   129  0000                     _ODCONB	set	3863
   130  0000                     _ODCONA	set	3855
   131  0000                     _WPUC	set	3872
   132  0000                     _WPUA	set	3856
   133  0000                     _WPUB	set	3864
   134  0000                     _WPUE	set	3885
   135  0000                     _ANSELA	set	3857
   136  0000                     _ANSELB	set	3865
   137  0000                     _ANSELC	set	3873
   138  0000                     _LATAbits	set	3971
   139  0000                     _NVMCON1bits	set	3969
   140  0000                     _NVMCON2	set	3970
   141  0000                     _NVMCON1	set	3969
   142  0000                     _NVMDAT	set	3968
   143  0000                     _NVMADRH	set	3967
   144  0000                     _NVMADRL	set	3966
   145  0000                     _TRISC	set	3978
   146  0000                     _TRISB	set	3977
   147  0000                     _TRISA	set	3976
   148  0000                     _LATC	set	3973
   149  0000                     _LATB	set	3972
   150  0000                     _LATA	set	3971
   151                           
   152                           ; #config settings
   153  0000                     
   154                           	psect	cinit
   155  001202                     __pcinit:
   156                           	opt stack 0
   157  001202                     start_initialization:
   158                           	opt stack 0
   159  001202                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Initialize objects allocated to COMRAM (10 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  001202  0E3E               	movlw	low __pidataCOMRAM
   165  001204  6EF6               	movwf	tblptrl,c
   166  001206  0E13               	movlw	high __pidataCOMRAM
   167  001208  6EF7               	movwf	tblptrh,c
   168  00120A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  00120C  6EF8               	movwf	tblptru,c
   170  00120E  EE00  F03D         	lfsr	0,__pdataCOMRAM
   171  001212  EE10 F00A          	lfsr	1,10
   172  001216                     copy_data0:
   173  001216  0009               	tblrd		*+
   174  001218  CFF5 FFEE          	movff	tablat,postinc0
   175  00121C  50E5               	movf	postdec1,w,c
   176  00121E  50E1               	movf	fsr1l,w,c
   177  001220  E1FA               	bnz	copy_data0
   178                           
   179                           ; Clear objects allocated to BANK0 (160 bytes)
   180  001222  EE00  F060         	lfsr	0,__pbssBANK0
   181  001226  0EA0               	movlw	160
   182  001228                     clear_0:
   183  001228  6AEE               	clrf	postinc0,c
   184  00122A  06E8               	decf	wreg,f,c
   185  00122C  E1FD               	bnz	clear_0
   186                           
   187                           ; Clear objects allocated to COMRAM (49 bytes)
   188  00122E  EE00  F001         	lfsr	0,__pbssCOMRAM
   189  001232  0E31               	movlw	49
   190  001234                     clear_1:
   191  001234  6AEE               	clrf	postinc0,c
   192  001236  06E8               	decf	wreg,f,c
   193  001238  E1FD               	bnz	clear_1
   194  00123A                     end_of_initialization:
   195                           	opt stack 0
   196  00123A                     __end_of__initialization:
   197                           	opt stack 0
   198  00123A  0100               	movlb	0
   199  00123C  EFC0  F008         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	bssCOMRAM
   210  000001                     __pbssCOMRAM:
   211                           	opt stack 0
   212  000001                     __timer_tick:
   213                           	opt stack 0
   214  000001                     	ds	2
   215  000003                     _DEVICE_TIMEOUTS:
   216                           	opt stack 0
   217  000003                     	ds	44
   218  00002F                     _DEVICE_CONFIG:
   219                           	opt stack 0
   220  00002F                     	ds	3
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	dataCOMRAM
   231  00003D                     __pdataCOMRAM:
   232                           	opt stack 0
   233  00003D                     _BLUETOOTH_LED:
   234                           	opt stack 0
   235  00003D                     	ds	3
   236  000040                     _MCU_LED:
   237                           	opt stack 0
   238  000040                     	ds	3
   239  000043                     _TWENTY_HZ_LOG:
   240                           	opt stack 0
   241  000043                     	ds	2
   242  000045                     _TEN_HZ_LOG:
   243                           	opt stack 0
   244  000045                     	ds	2
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	bssBANK0
   255  000060                     __pbssBANK0:
   256                           	opt stack 0
   257  000060                     _PID_CHANNEL_CONFIG:
   258                           	opt stack 0
   259  000060                     	ds	160
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	cstackCOMRAM
   270  000032                     __pcstackCOMRAM:
   271                           	opt stack 0
   272  000032                     ?_absoluteTimeDifference:
   273                           	opt stack 0
   274  000032                     SetTimerStatus@enabled:
   275                           	opt stack 0
   276  000032                     SetTimerPeriodic@periodic:
   277                           	opt stack 0
   278  000032                     absoluteTimeDifference@reference:
   279                           	opt stack 0
   280  000032                     memcpy@d1:
   281                           	opt stack 0
   282  000032                     memset@p1:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x0
   286  000032                     	ds	1
   287  000033                     SetTimerStatus@handle:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x1
   291  000033                     	ds	1
   292  000034                     ??_UpdateMCU_LED:
   293  000034                     ??_UpdateBluetooth_LED:
   294  000034                     SetTimerPeriodic@handle:
   295                           	opt stack 0
   296  000034                     absoluteTimeDifference@comparand:
   297                           	opt stack 0
   298  000034                     memcpy@s1:
   299                           	opt stack 0
   300  000034                     memset@c:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x2
   304  000034                     	ds	1
   305  000035                     SetLED_State@LED:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0x3
   309  000035                     	ds	1
   310  000036                     ??_absoluteTimeDifference:
   311  000036                     memcpy@n:
   312                           	opt stack 0
   313  000036                     memset@n:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x4
   317  000036                     	ds	2
   318  000038                     SetLED_State@state:
   319                           	opt stack 0
   320  000038                     memcpy@d:
   321                           	opt stack 0
   322  000038                     memset@p:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x6
   326  000038                     	ds	2
   327  00003A                     ServiceTimers@handle:
   328                           	opt stack 0
   329  00003A                     memcpy@s:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x8
   333  00003A                     	ds	2
   334  00003C                     memcpy@tmp:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0xA
   338  00003C                     	ds	1
   339  00003D                     tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           postdec1	equ	0xFE5
   346                           fsr1l	equ	0xFE1
   347                           
   348                           ; 1 bytes @ 0xB
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 32 in file "main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels required when called:    3
   374 ;; This function calls:
   375 ;;		_InitDeviceConfig
   376 ;;		_InitTimer
   377 ;;		_SYSTEM_Initialize
   378 ;;		_ServiceTimers
   379 ;;		_SetLED_State
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386  001180                     __ptext0:
   387                           	opt stack 0
   388  001180                     _main:
   389                           	opt stack 28
   390                           
   391                           ;main.c: 35: SYSTEM_Initialize();
   392                           
   393                           ;incstack = 0
   394  001180  ECA4  F009         	call	_SYSTEM_Initialize	;wreg free
   395                           
   396                           ;main.c: 36: InitTimer();
   397  001184  EC75  F009         	call	_InitTimer	;wreg free
   398                           
   399                           ;main.c: 37: InitDeviceConfig();
   400  001188  EC84  F009         	call	_InitDeviceConfig	;wreg free
   401                           
   402                           ;main.c: 39: SetLED_State(MCU_LED, LED_ON);
   403  00118C  C040  F035         	movff	_MCU_LED,SetLED_State@LED
   404  001190  C041  F036         	movff	_MCU_LED+1,SetLED_State@LED+1
   405  001194  C042  F037         	movff	_MCU_LED+2,SetLED_State@LED+2
   406  001198  0E00               	movlw	0
   407  00119A  6E39               	movwf	SetLED_State@state+1,c
   408  00119C  0E00               	movlw	0
   409  00119E  6E38               	movwf	SetLED_State@state,c
   410  0011A0  EC64  F009         	call	_SetLED_State	;wreg free
   411                           
   412                           ;main.c: 40: SetLED_State(BLUETOOTH_LED, LED_ON);
   413  0011A4  C03D  F035         	movff	_BLUETOOTH_LED,SetLED_State@LED
   414  0011A8  C03E  F036         	movff	_BLUETOOTH_LED+1,SetLED_State@LED+1
   415  0011AC  C03F  F037         	movff	_BLUETOOTH_LED+2,SetLED_State@LED+2
   416  0011B0  0E00               	movlw	0
   417  0011B2  6E39               	movwf	SetLED_State@state+1,c
   418  0011B4  0E00               	movlw	0
   419  0011B6  6E38               	movwf	SetLED_State@state,c
   420  0011B8  EC64  F009         	call	_SetLED_State	;wreg free
   421  0011BC                     
   422                           ;main.c: 43: {
   423                           ;main.c: 44: ServiceTimers();
   424  0011BC  EC87  F007         	call	_ServiceTimers	;wreg free
   425  0011C0  D7FD               	goto	l91
   426  0011C2                     __end_of_main:
   427                           	opt stack 0
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437 ;; *************** function _SetLED_State *****************
   438 ;; Defined at:
   439 ;;		line 104 in file "LED_UI.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  LED             3    3[COMRAM] struct STATUS_LED
   442 ;;  state           2    6[COMRAM] unsigned int 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   454 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   457 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   458 ;;Total ram usage:        5 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    1
   461 ;; This function calls:
   462 ;;		_SetTimerPeriodic
   463 ;;		_SetTimerStatus
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text1
   470  0012C8                     __ptext1:
   471                           	opt stack 0
   472  0012C8                     _SetLED_State:
   473                           	opt stack 29
   474                           
   475                           ;LED_UI.c: 106: LED.LED_STATE = state;
   476                           
   477                           ;incstack = 0
   478  0012C8  C038  F035         	movff	SetLED_State@state,SetLED_State@LED
   479  0012CC  C039  F036         	movff	SetLED_State@state+1,SetLED_State@LED+1
   480                           
   481                           ;LED_UI.c: 107: SetTimerPeriodic(LED.TIMEOUT_HANDLE, state);
   482  0012D0  C038  F032         	movff	SetLED_State@state,SetTimerPeriodic@periodic
   483  0012D4  C039  F033         	movff	SetLED_State@state+1,SetTimerPeriodic@periodic+1
   484  0012D8  5037               	movf	SetLED_State@LED+2,w,c
   485  0012DA  EC52  F009         	call	_SetTimerPeriodic
   486                           
   487                           ;LED_UI.c: 108: SetTimerStatus(LED.TIMEOUT_HANDLE, 0x01);
   488  0012DE  0E01               	movlw	1
   489  0012E0  6E32               	movwf	SetTimerStatus@enabled,c
   490  0012E2  5037               	movf	SetLED_State@LED+2,w,c
   491  0012E4  EC20  F009         	call	_SetTimerStatus
   492  0012E8  0012               	return		;funcret
   493  0012EA                     __end_of_SetLED_State:
   494                           	opt stack 0
   495                           tblptru	equ	0xFF8
   496                           tblptrh	equ	0xFF7
   497                           tblptrl	equ	0xFF6
   498                           tablat	equ	0xFF5
   499                           postinc0	equ	0xFEE
   500                           wreg	equ	0xFE8
   501                           postdec1	equ	0xFE5
   502                           fsr1l	equ	0xFE1
   503                           
   504 ;; *************** function _SetTimerPeriodic *****************
   505 ;; Defined at:
   506 ;;		line 68 in file "Timeout.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  handle          1    wreg     enum E184
   509 ;;  periodic        2    0[COMRAM] unsigned int 
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  handle          1    2[COMRAM] enum E184
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   524 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   525 ;;Total ram usage:        3 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; This function calls:
   528 ;;		Nothing
   529 ;; This function is called by:
   530 ;;		_SetLED_State
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  0012A4                     __ptext2:
   536                           	opt stack 0
   537  0012A4                     _SetTimerPeriodic:
   538                           	opt stack 29
   539                           
   540                           ;incstack = 0
   541                           ;SetTimerPeriodic@handle stored from wreg
   542  0012A4  6E34               	movwf	SetTimerPeriodic@handle,c
   543                           
   544                           ;Timeout.c: 70: DEVICE_TIMEOUTS[handle].periodic = periodic;
   545  0012A6  5034               	movf	SetTimerPeriodic@handle,w,c
   546  0012A8  0D0B               	mullw	11
   547  0012AA  0E03               	movlw	3
   548  0012AC  26F3               	addwf	prodl,f,c
   549  0012AE  0E00               	movlw	0
   550  0012B0  22F4               	addwfc	prodh,f,c
   551  0012B2  0E03               	movlw	low _DEVICE_TIMEOUTS
   552  0012B4  24F3               	addwf	prodl,w,c
   553  0012B6  6ED9               	movwf	fsr2l,c
   554  0012B8  0E00               	movlw	high _DEVICE_TIMEOUTS
   555  0012BA  20F4               	addwfc	prodh,w,c
   556  0012BC  6EDA               	movwf	fsr2h,c
   557  0012BE  C032  FFDE         	movff	SetTimerPeriodic@periodic,postinc2
   558  0012C2  C033  FFDD         	movff	SetTimerPeriodic@periodic+1,postdec2
   559  0012C6  0012               	return		;funcret
   560  0012C8                     __end_of_SetTimerPeriodic:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           prodh	equ	0xFF4
   567                           prodl	equ	0xFF3
   568                           postinc0	equ	0xFEE
   569                           wreg	equ	0xFE8
   570                           postdec1	equ	0xFE5
   571                           fsr1l	equ	0xFE1
   572                           postinc2	equ	0xFDE
   573                           postdec2	equ	0xFDD
   574                           fsr2h	equ	0xFDA
   575                           fsr2l	equ	0xFD9
   576                           
   577 ;; *************** function _ServiceTimers *****************
   578 ;; Defined at:
   579 ;;		line 80 in file "Timeout.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  handle          1    8[COMRAM] enum E184
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   597 ;;Total ram usage:        3 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    2
   600 ;; This function calls:
   601 ;;		_LogTenHz
   602 ;;		_LogTwentyHz
   603 ;;		_SetTimerStatus
   604 ;;		_UpdateBluetooth_LED
   605 ;;		_UpdateMCU_LED
   606 ;;		_absoluteTimeDifference
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613  000F0E                     __ptext3:
   614                           	opt stack 0
   615  000F0E                     _ServiceTimers:
   616                           	opt stack 28
   617                           
   618                           ;Timeout.c: 82: TIMEOUT_HANDLE_t handle = 0;
   619                           
   620                           ;incstack = 0
   621  000F0E  0E00               	movlw	0
   622  000F10  6E3A               	movwf	ServiceTimers@handle,c
   623                           
   624                           ;Timeout.c: 84: for(handle=0;handle<4;handle++)
   625  000F12  0E00               	movlw	0
   626  000F14  6E3A               	movwf	ServiceTimers@handle,c
   627  000F16                     l1230:
   628  000F16  0E03               	movlw	3
   629  000F18  643A               	cpfsgt	ServiceTimers@handle,c
   630  000F1A  D001               	goto	l144
   631  000F1C  0012               	return	
   632  000F1E                     l144:
   633                           
   634                           ;Timeout.c: 85: {
   635                           ;Timeout.c: 86: if((0x01 == DEVICE_TIMEOUTS[handle].enabled) && (absoluteTimeDifference(
      +                          DEVICE_TIMEOUTS[handle].timeout_ref, _timer_tick) > DEVICE_TIMEOUTS[handle].periodic))
   636  000F1E  503A               	movf	ServiceTimers@handle,w,c
   637  000F20  0D0B               	mullw	11
   638  000F22  0E03               	movlw	low _DEVICE_TIMEOUTS
   639  000F24  24F3               	addwf	prodl,w,c
   640  000F26  6ED9               	movwf	fsr2l,c
   641  000F28  0E00               	movlw	high _DEVICE_TIMEOUTS
   642  000F2A  20F4               	addwfc	prodh,w,c
   643  000F2C  6EDA               	movwf	fsr2h,c
   644  000F2E  04DE               	decf	postinc2,w,c
   645  000F30  A4D8               	btfss	status,2,c
   646  000F32  D066               	goto	l148
   647  000F34  503A               	movf	ServiceTimers@handle,w,c
   648  000F36  0D0B               	mullw	11
   649  000F38  0E01               	movlw	1
   650  000F3A  26F3               	addwf	prodl,f,c
   651  000F3C  0E00               	movlw	0
   652  000F3E  22F4               	addwfc	prodh,f,c
   653  000F40  0E03               	movlw	low _DEVICE_TIMEOUTS
   654  000F42  24F3               	addwf	prodl,w,c
   655  000F44  6ED9               	movwf	fsr2l,c
   656  000F46  0E00               	movlw	high _DEVICE_TIMEOUTS
   657  000F48  20F4               	addwfc	prodh,w,c
   658  000F4A  6EDA               	movwf	fsr2h,c
   659  000F4C  CFDE F032          	movff	postinc2,absoluteTimeDifference@reference
   660  000F50  CFDD F033          	movff	postdec2,absoluteTimeDifference@reference+1
   661  000F54  C001  F034         	movff	__timer_tick,absoluteTimeDifference@comparand
   662  000F58  C002  F035         	movff	__timer_tick+1,absoluteTimeDifference@comparand+1
   663  000F5C  EC73  F008         	call	_absoluteTimeDifference	;wreg free
   664  000F60  503A               	movf	ServiceTimers@handle,w,c
   665  000F62  0D0B               	mullw	11
   666  000F64  0E03               	movlw	3
   667  000F66  26F3               	addwf	prodl,f,c
   668  000F68  0E00               	movlw	0
   669  000F6A  22F4               	addwfc	prodh,f,c
   670  000F6C  0E03               	movlw	low _DEVICE_TIMEOUTS
   671  000F6E  24F3               	addwf	prodl,w,c
   672  000F70  6ED9               	movwf	fsr2l,c
   673  000F72  0E00               	movlw	high _DEVICE_TIMEOUTS
   674  000F74  20F4               	addwfc	prodh,w,c
   675  000F76  6EDA               	movwf	fsr2h,c
   676  000F78  5032               	movf	?_absoluteTimeDifference,w,c
   677  000F7A  5CDE               	subwf	postinc2,w,c
   678  000F7C  5033               	movf	?_absoluteTimeDifference+1,w,c
   679  000F7E  58DE               	subwfb	postinc2,w,c
   680  000F80  B0D8               	btfsc	status,0,c
   681  000F82  D03E               	goto	l148
   682                           
   683                           ;Timeout.c: 87: {
   684                           ;Timeout.c: 88: DEVICE_TIMEOUTS[handle].callback();
   685  000F84  503A               	movf	ServiceTimers@handle,w,c
   686  000F86  0D0B               	mullw	11
   687  000F88  0E05               	movlw	5
   688  000F8A  26F3               	addwf	prodl,f,c
   689  000F8C  0E00               	movlw	0
   690  000F8E  22F4               	addwfc	prodh,f,c
   691  000F90  0E03               	movlw	low _DEVICE_TIMEOUTS
   692  000F92  24F3               	addwf	prodl,w,c
   693  000F94  6ED9               	movwf	fsr2l,c
   694  000F96  0E00               	movlw	high _DEVICE_TIMEOUTS
   695  000F98  20F4               	addwfc	prodh,w,c
   696  000F9A  6EDA               	movwf	fsr2h,c
   697  000F9C  D801               	call	u228
   698  000F9E  D00A               	goto	u229
   699  000FA0                     u228:
   700  000FA0  0005               	push	
   701  000FA2  6EFA               	movwf	pclath,c
   702  000FA4  50DE               	movf	postinc2,w,c
   703  000FA6  6EFD               	movwf	tosl,c
   704  000FA8  50DE               	movf	postinc2,w,c
   705  000FAA  6EFE               	movwf	tosh,c
   706  000FAC  50DE               	movf	postinc2,w,c
   707  000FAE  6EFF               	movwf	tosu,c
   708  000FB0  50FA               	movf	pclath,w,c
   709  000FB2  0012               	return		;indir
   710  000FB4                     u229:
   711                           
   712                           ;Timeout.c: 90: if(DEVICE_TIMEOUTS[handle].periodic > 0)
   713  000FB4  503A               	movf	ServiceTimers@handle,w,c
   714  000FB6  0D0B               	mullw	11
   715  000FB8  0E03               	movlw	3
   716  000FBA  26F3               	addwf	prodl,f,c
   717  000FBC  0E00               	movlw	0
   718  000FBE  22F4               	addwfc	prodh,f,c
   719  000FC0  0E03               	movlw	low _DEVICE_TIMEOUTS
   720  000FC2  24F3               	addwf	prodl,w,c
   721  000FC4  6ED9               	movwf	fsr2l,c
   722  000FC6  0E00               	movlw	high _DEVICE_TIMEOUTS
   723  000FC8  20F4               	addwfc	prodh,w,c
   724  000FCA  6EDA               	movwf	fsr2h,c
   725  000FCC  50DE               	movf	postinc2,w,c
   726  000FCE  10DE               	iorwf	postinc2,w,c
   727  000FD0  B4D8               	btfsc	status,2,c
   728  000FD2  D011               	goto	l147
   729                           
   730                           ;Timeout.c: 91: {
   731                           ;Timeout.c: 92: DEVICE_TIMEOUTS[handle].timeout_ref = _timer_tick;
   732  000FD4  503A               	movf	ServiceTimers@handle,w,c
   733  000FD6  0D0B               	mullw	11
   734  000FD8  0E01               	movlw	1
   735  000FDA  26F3               	addwf	prodl,f,c
   736  000FDC  0E00               	movlw	0
   737  000FDE  22F4               	addwfc	prodh,f,c
   738  000FE0  0E03               	movlw	low _DEVICE_TIMEOUTS
   739  000FE2  24F3               	addwf	prodl,w,c
   740  000FE4  6ED9               	movwf	fsr2l,c
   741  000FE6  0E00               	movlw	high _DEVICE_TIMEOUTS
   742  000FE8  20F4               	addwfc	prodh,w,c
   743  000FEA  6EDA               	movwf	fsr2h,c
   744  000FEC  C001  FFDE         	movff	__timer_tick,postinc2
   745  000FF0  C002  FFDD         	movff	__timer_tick+1,postdec2
   746                           
   747                           ;Timeout.c: 93: }
   748  000FF4  D005               	goto	l148
   749  000FF6                     l147:
   750                           
   751                           ;Timeout.c: 94: else
   752                           ;Timeout.c: 95: {
   753                           ;Timeout.c: 96: SetTimerStatus(handle, 0x00);
   754  000FF6  0E00               	movlw	0
   755  000FF8  6E32               	movwf	SetTimerStatus@enabled,c
   756  000FFA  503A               	movf	ServiceTimers@handle,w,c
   757  000FFC  EC20  F009         	call	_SetTimerStatus
   758  001000                     l148:
   759  001000  2A3A               	incf	ServiceTimers@handle,f,c
   760  001002  D789               	goto	l1230
   761  001004                     __end_of_ServiceTimers:
   762                           	opt stack 0
   763                           tosu	equ	0xFFF
   764                           tosh	equ	0xFFE
   765                           tosl	equ	0xFFD
   766                           pclath	equ	0xFFA
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           prodh	equ	0xFF4
   772                           prodl	equ	0xFF3
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           postinc2	equ	0xFDE
   778                           postdec2	equ	0xFDD
   779                           fsr2h	equ	0xFDA
   780                           fsr2l	equ	0xFD9
   781                           status	equ	0xFD8
   782                           
   783 ;; *************** function _absoluteTimeDifference *****************
   784 ;; Defined at:
   785 ;;		line 109 in file "Timeout.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  reference       2    0[COMRAM] unsigned int 
   788 ;;  comparand       2    2[COMRAM] unsigned int 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2    0[COMRAM] unsigned int 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;Total ram usage:        6 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_ServiceTimers
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text4
   814  0010E6                     __ptext4:
   815                           	opt stack 0
   816  0010E6                     _absoluteTimeDifference:
   817                           	opt stack 29
   818                           
   819                           ;Timeout.c: 111: if(comparand < reference)
   820                           
   821                           ;incstack = 0
   822  0010E6  5032               	movf	absoluteTimeDifference@reference,w,c
   823  0010E8  5C34               	subwf	absoluteTimeDifference@comparand,w,c
   824  0010EA  5033               	movf	absoluteTimeDifference@reference+1,w,c
   825  0010EC  5835               	subwfb	absoluteTimeDifference@comparand+1,w,c
   826  0010EE  B0D8               	btfsc	status,0,c
   827  0010F0  D013               	goto	l152
   828                           
   829                           ;Timeout.c: 112: {
   830                           ;Timeout.c: 113: return (60000 - reference) + comparand;
   831  0010F2  C032  F036         	movff	absoluteTimeDifference@reference,??_absoluteTimeDifference
   832  0010F6  C033  F037         	movff	absoluteTimeDifference@reference+1,??_absoluteTimeDifference+1
   833  0010FA  1E36               	comf	??_absoluteTimeDifference,f,c
   834  0010FC  1E37               	comf	??_absoluteTimeDifference+1,f,c
   835  0010FE  4A36               	infsnz	??_absoluteTimeDifference,f,c
   836  001100  2A37               	incf	??_absoluteTimeDifference+1,f,c
   837  001102  5034               	movf	absoluteTimeDifference@comparand,w,c
   838  001104  2636               	addwf	??_absoluteTimeDifference,f,c
   839  001106  5035               	movf	absoluteTimeDifference@comparand+1,w,c
   840  001108  2237               	addwfc	??_absoluteTimeDifference+1,f,c
   841  00110A  0E60               	movlw	96
   842  00110C  2436               	addwf	??_absoluteTimeDifference,w,c
   843  00110E  6E32               	movwf	?_absoluteTimeDifference,c
   844  001110  0EEA               	movlw	234
   845  001112  2037               	addwfc	??_absoluteTimeDifference+1,w,c
   846  001114  6E33               	movwf	?_absoluteTimeDifference+1,c
   847                           
   848                           ;Timeout.c: 114: }
   849  001116  0012               	return	
   850  001118                     l152:
   851                           
   852                           ;Timeout.c: 115: else
   853                           ;Timeout.c: 116: {
   854                           ;Timeout.c: 117: return comparand - reference;
   855  001118  C032  F036         	movff	absoluteTimeDifference@reference,??_absoluteTimeDifference
   856  00111C  C033  F037         	movff	absoluteTimeDifference@reference+1,??_absoluteTimeDifference+1
   857  001120  1E36               	comf	??_absoluteTimeDifference,f,c
   858  001122  1E37               	comf	??_absoluteTimeDifference+1,f,c
   859  001124  4A36               	infsnz	??_absoluteTimeDifference,f,c
   860  001126  2A37               	incf	??_absoluteTimeDifference+1,f,c
   861  001128  5034               	movf	absoluteTimeDifference@comparand,w,c
   862  00112A  2436               	addwf	??_absoluteTimeDifference,w,c
   863  00112C  6E32               	movwf	?_absoluteTimeDifference,c
   864  00112E  5035               	movf	absoluteTimeDifference@comparand+1,w,c
   865  001130  2037               	addwfc	??_absoluteTimeDifference+1,w,c
   866  001132  6E33               	movwf	?_absoluteTimeDifference+1,c
   867  001134  0012               	return	
   868  001136                     __end_of_absoluteTimeDifference:
   869                           	opt stack 0
   870                           tosu	equ	0xFFF
   871                           tosh	equ	0xFFE
   872                           tosl	equ	0xFFD
   873                           pclath	equ	0xFFA
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           prodh	equ	0xFF4
   879                           prodl	equ	0xFF3
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           postinc2	equ	0xFDE
   885                           postdec2	equ	0xFDD
   886                           fsr2h	equ	0xFDA
   887                           fsr2l	equ	0xFD9
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _LogTwentyHz *****************
   891 ;; Defined at:
   892 ;;		line 52 in file "Logger.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		None
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_InitLogger
   916 ;;		_ServiceTimers
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text5
   921  001352                     __ptext5:
   922                           	opt stack 0
   923  001352                     _LogTwentyHz:
   924                           	opt stack 29
   925                           
   926                           ;incstack = 0
   927  001352  0012               	return		;funcret
   928  001354                     __end_of_LogTwentyHz:
   929                           	opt stack 0
   930                           tosu	equ	0xFFF
   931                           tosh	equ	0xFFE
   932                           tosl	equ	0xFFD
   933                           pclath	equ	0xFFA
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           prodh	equ	0xFF4
   939                           prodl	equ	0xFF3
   940                           postinc0	equ	0xFEE
   941                           wreg	equ	0xFE8
   942                           postdec1	equ	0xFE5
   943                           fsr1l	equ	0xFE1
   944                           postinc2	equ	0xFDE
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function _LogTenHz *****************
   951 ;; Defined at:
   952 ;;		line 40 in file "Logger.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		None
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_InitLogger
   976 ;;		_ServiceTimers
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text6
   981  001354                     __ptext6:
   982                           	opt stack 0
   983  001354                     _LogTenHz:
   984                           	opt stack 29
   985                           
   986                           ;incstack = 0
   987  001354  0012               	return		;funcret
   988  001356                     __end_of_LogTenHz:
   989                           	opt stack 0
   990                           tosu	equ	0xFFF
   991                           tosh	equ	0xFFE
   992                           tosl	equ	0xFFD
   993                           pclath	equ	0xFFA
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           postinc0	equ	0xFEE
  1001                           wreg	equ	0xFE8
  1002                           postdec1	equ	0xFE5
  1003                           fsr1l	equ	0xFE1
  1004                           postinc2	equ	0xFDE
  1005                           postdec2	equ	0xFDD
  1006                           fsr2h	equ	0xFDA
  1007                           fsr2l	equ	0xFD9
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _UpdateBluetooth_LED *****************
  1011 ;; Defined at:
  1012 ;;		line 72 in file "LED_UI.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    1
  1033 ;; This function calls:
  1034 ;;		_SetTimerStatus
  1035 ;; This function is called by:
  1036 ;;		_InitLED_UI
  1037 ;;		_ServiceTimers
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text7
  1042  001004                     __ptext7:
  1043                           	opt stack 0
  1044  001004                     _UpdateBluetooth_LED:
  1045                           	opt stack 28
  1046                           
  1047                           ;LED_UI.c: 74: switch(BLUETOOTH_LED.LED_STATE)
  1048                           
  1049                           ;incstack = 0
  1050  001004  D01E               	goto	l194
  1051  001006                     
  1052                           ;LED_UI.c: 77: SetTimerStatus(BLUETOOTH_LED_TIMEOUT, 0x00);
  1053  001006  0E00               	movlw	0
  1054  001008  6E32               	movwf	SetTimerStatus@enabled,c
  1055  00100A  0E01               	movlw	1
  1056  00100C  EC20  F009         	call	_SetTimerStatus
  1057                           
  1058                           ;LED_UI.c: 78: do { LATAbits.LATA1 = 0; } while(0);
  1059  001010  9283               	bcf	3971,1,c	;volatile
  1060                           
  1061                           ;LED_UI.c: 79: break;
  1062  001012  0012               	return	
  1063  001014                     
  1064                           ;LED_UI.c: 82: SetTimerStatus(BLUETOOTH_LED_TIMEOUT, 0x00);
  1065  001014  0E00               	movlw	0
  1066  001016  6E32               	movwf	SetTimerStatus@enabled,c
  1067  001018  0E01               	movlw	1
  1068  00101A  EC20  F009         	call	_SetTimerStatus
  1069                           
  1070                           ;LED_UI.c: 83: do { LATAbits.LATA1 = 1; } while(0);
  1071  00101E  8283               	bsf	3971,1,c	;volatile
  1072                           
  1073                           ;LED_UI.c: 84: break;
  1074  001020  0012               	return	
  1075  001022                     
  1076                           ;LED_UI.c: 87: case LED_SLOW_FLASH:
  1077                           ;LED_UI.c: 88: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  1078  001022  A283               	btfss	3971,1,c	;volatile
  1079  001024  D002               	goto	u180
  1080  001026  0E01               	movlw	1
  1081  001028  D001               	goto	u186
  1082  00102A                     u180:
  1083  00102A  0E00               	movlw	0
  1084  00102C                     u186:
  1085  00102C  0AFF               	xorlw	255
  1086  00102E  6E34               	movwf	??_UpdateBluetooth_LED& (0+255),c
  1087  001030  4634               	rlncf	??_UpdateBluetooth_LED,f,c
  1088  001032  5083               	movf	3971,w,c	;volatile
  1089  001034  1834               	xorwf	??_UpdateBluetooth_LED,w,c
  1090  001036  0BFD               	andlw	-3
  1091  001038  1834               	xorwf	??_UpdateBluetooth_LED,w,c
  1092  00103A  6E83               	movwf	3971,c	;volatile
  1093                           
  1094                           ;LED_UI.c: 89: break;
  1095  00103C  0012               	return	
  1096  00103E                     
  1097                           ;LED_UI.c: 92: do { LATAbits.LATA1 = 0; } while(0);
  1098  00103E  9283               	bcf	3971,1,c	;volatile
  1099                           
  1100                           ;LED_UI.c: 94: }
  1101                           
  1102                           ;LED_UI.c: 93: break;
  1103  001040  0012               	return	
  1104  001042                     l194:
  1105  001042  C03D  F034         	movff	_BLUETOOTH_LED,??_UpdateBluetooth_LED
  1106  001046  C03E  F035         	movff	_BLUETOOTH_LED+1,??_UpdateBluetooth_LED+1
  1107                           
  1108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1109                           ; Switch size 1, requested type "space"
  1110                           ; Number of cases is 2, Range of values is 0 to 1
  1111                           ; switch strategies available:
  1112                           ; Name         Instructions Cycles
  1113                           ; simple_byte            7     4 (average)
  1114                           ;	Chosen strategy is simple_byte
  1115  00104A  5035               	movf	??_UpdateBluetooth_LED+1,w,c
  1116  00104C  0A00               	xorlw	0	; case 0
  1117  00104E  B4D8               	btfsc	status,2,c
  1118  001050  D004               	goto	l1372
  1119  001052  0A01               	xorlw	1	; case 1
  1120  001054  B4D8               	btfsc	status,2,c
  1121  001056  D00C               	goto	l1374
  1122  001058  D7F2               	goto	l206
  1123  00105A                     l1372:
  1124                           
  1125                           ; Switch size 1, requested type "space"
  1126                           ; Number of cases is 3, Range of values is 0 to 250
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte           10     6 (average)
  1130                           ;	Chosen strategy is simple_byte
  1131  00105A  5034               	movf	??_UpdateBluetooth_LED,w,c
  1132  00105C  0A00               	xorlw	0	; case 0
  1133  00105E  B4D8               	btfsc	status,2,c
  1134  001060  D7D9               	goto	l199
  1135  001062  0A01               	xorlw	1	; case 1
  1136  001064  B4D8               	btfsc	status,2,c
  1137  001066  D7CF               	goto	l195
  1138  001068  0AFB               	xorlw	251	; case 250
  1139  00106A  B4D8               	btfsc	status,2,c
  1140  00106C  D7DA               	goto	l202
  1141  00106E  D7E7               	goto	l206
  1142  001070                     l1374:
  1143                           
  1144                           ; Switch size 1, requested type "space"
  1145                           ; Number of cases is 1, Range of values is 250 to 250
  1146                           ; switch strategies available:
  1147                           ; Name         Instructions Cycles
  1148                           ; simple_byte            4     3 (average)
  1149                           ;	Chosen strategy is simple_byte
  1150  001070  5034               	movf	??_UpdateBluetooth_LED,w,c
  1151  001072  0AFA               	xorlw	250	; case 250
  1152  001074  D7FA               	goto	L1
  1153  001076                     __end_of_UpdateBluetooth_LED:
  1154                           	opt stack 0
  1155                           tosu	equ	0xFFF
  1156                           tosh	equ	0xFFE
  1157                           tosl	equ	0xFFD
  1158                           pclath	equ	0xFFA
  1159                           tblptru	equ	0xFF8
  1160                           tblptrh	equ	0xFF7
  1161                           tblptrl	equ	0xFF6
  1162                           tablat	equ	0xFF5
  1163                           prodh	equ	0xFF4
  1164                           prodl	equ	0xFF3
  1165                           postinc0	equ	0xFEE
  1166                           wreg	equ	0xFE8
  1167                           postdec1	equ	0xFE5
  1168                           fsr1l	equ	0xFE1
  1169                           postinc2	equ	0xFDE
  1170                           postdec2	equ	0xFDD
  1171                           fsr2h	equ	0xFDA
  1172                           fsr2l	equ	0xFD9
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function _UpdateMCU_LED *****************
  1176 ;; Defined at:
  1177 ;;		line 40 in file "LED_UI.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1195 ;;Total ram usage:        2 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    1
  1198 ;; This function calls:
  1199 ;;		_SetTimerStatus
  1200 ;; This function is called by:
  1201 ;;		_InitLED_UI
  1202 ;;		_ServiceTimers
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text8
  1207  001076                     __ptext8:
  1208                           	opt stack 0
  1209  001076                     _UpdateMCU_LED:
  1210                           	opt stack 28
  1211                           
  1212                           ;LED_UI.c: 42: switch(MCU_LED.LED_STATE)
  1213                           
  1214                           ;incstack = 0
  1215  001076  D01D               	goto	l176
  1216  001078                     
  1217                           ;LED_UI.c: 45: SetTimerStatus(MCU_LED_TIMEOUT, 0x00);
  1218  001078  0E00               	movlw	0
  1219  00107A  6E32               	movwf	SetTimerStatus@enabled,c
  1220  00107C  0E00               	movlw	0
  1221  00107E  EC20  F009         	call	_SetTimerStatus
  1222                           
  1223                           ;LED_UI.c: 46: do { LATAbits.LATA0 = 0; } while(0);
  1224  001082  9083               	bcf	3971,0,c	;volatile
  1225                           
  1226                           ;LED_UI.c: 47: break;
  1227  001084  0012               	return	
  1228  001086                     
  1229                           ;LED_UI.c: 50: SetTimerStatus(MCU_LED_TIMEOUT, 0x00);
  1230  001086  0E00               	movlw	0
  1231  001088  6E32               	movwf	SetTimerStatus@enabled,c
  1232  00108A  0E00               	movlw	0
  1233  00108C  EC20  F009         	call	_SetTimerStatus
  1234                           
  1235                           ;LED_UI.c: 51: do { LATAbits.LATA0 = 1; } while(0);
  1236  001090  8083               	bsf	3971,0,c	;volatile
  1237                           
  1238                           ;LED_UI.c: 52: break;
  1239  001092  0012               	return	
  1240  001094                     
  1241                           ;LED_UI.c: 55: case LED_SLOW_FLASH:
  1242                           ;LED_UI.c: 56: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  1243  001094  A083               	btfss	3971,0,c	;volatile
  1244  001096  D002               	goto	u170
  1245  001098  0E01               	movlw	1
  1246  00109A  D001               	goto	u176
  1247  00109C                     u170:
  1248  00109C  0E00               	movlw	0
  1249  00109E                     u176:
  1250  00109E  0AFF               	xorlw	255
  1251  0010A0  6E34               	movwf	??_UpdateMCU_LED& (0+255),c
  1252  0010A2  5083               	movf	3971,w,c	;volatile
  1253  0010A4  1834               	xorwf	??_UpdateMCU_LED,w,c
  1254  0010A6  0BFE               	andlw	-2
  1255  0010A8  1834               	xorwf	??_UpdateMCU_LED,w,c
  1256  0010AA  6E83               	movwf	3971,c	;volatile
  1257                           
  1258                           ;LED_UI.c: 57: break;
  1259  0010AC  0012               	return	
  1260  0010AE                     
  1261                           ;LED_UI.c: 60: do { LATAbits.LATA0 = 0; } while(0);
  1262  0010AE  9083               	bcf	3971,0,c	;volatile
  1263                           
  1264                           ;LED_UI.c: 62: }
  1265                           
  1266                           ;LED_UI.c: 61: break;
  1267  0010B0  0012               	return	
  1268  0010B2                     l176:
  1269  0010B2  C040  F034         	movff	_MCU_LED,??_UpdateMCU_LED
  1270  0010B6  C041  F035         	movff	_MCU_LED+1,??_UpdateMCU_LED+1
  1271                           
  1272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1273                           ; Switch size 1, requested type "space"
  1274                           ; Number of cases is 2, Range of values is 0 to 1
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            7     4 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279  0010BA  5035               	movf	??_UpdateMCU_LED+1,w,c
  1280  0010BC  0A00               	xorlw	0	; case 0
  1281  0010BE  B4D8               	btfsc	status,2,c
  1282  0010C0  D004               	goto	l1376
  1283  0010C2  0A01               	xorlw	1	; case 1
  1284  0010C4  B4D8               	btfsc	status,2,c
  1285  0010C6  D00C               	goto	l1378
  1286  0010C8  D7F2               	goto	l188
  1287  0010CA                     l1376:
  1288                           
  1289                           ; Switch size 1, requested type "space"
  1290                           ; Number of cases is 3, Range of values is 0 to 250
  1291                           ; switch strategies available:
  1292                           ; Name         Instructions Cycles
  1293                           ; simple_byte           10     6 (average)
  1294                           ;	Chosen strategy is simple_byte
  1295  0010CA  5034               	movf	??_UpdateMCU_LED,w,c
  1296  0010CC  0A00               	xorlw	0	; case 0
  1297  0010CE  B4D8               	btfsc	status,2,c
  1298  0010D0  D7DA               	goto	l181
  1299  0010D2  0A01               	xorlw	1	; case 1
  1300  0010D4  B4D8               	btfsc	status,2,c
  1301  0010D6  D7D0               	goto	l177
  1302  0010D8  0AFB               	xorlw	251	; case 250
  1303  0010DA  B4D8               	btfsc	status,2,c
  1304  0010DC  D7DB               	goto	l184
  1305  0010DE  D7E7               	goto	l188
  1306  0010E0                     l1378:
  1307                           
  1308                           ; Switch size 1, requested type "space"
  1309                           ; Number of cases is 1, Range of values is 250 to 250
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte            4     3 (average)
  1313                           ;	Chosen strategy is simple_byte
  1314  0010E0  5034               	movf	??_UpdateMCU_LED,w,c
  1315  0010E2  0AFA               	xorlw	250	; case 250
  1316  0010E4  D7FA               	goto	L2
  1317  0010E6                     __end_of_UpdateMCU_LED:
  1318                           	opt stack 0
  1319                           tosu	equ	0xFFF
  1320                           tosh	equ	0xFFE
  1321                           tosl	equ	0xFFD
  1322                           pclath	equ	0xFFA
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           prodh	equ	0xFF4
  1328                           prodl	equ	0xFF3
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1l	equ	0xFE1
  1333                           postinc2	equ	0xFDE
  1334                           postdec2	equ	0xFDD
  1335                           fsr2h	equ	0xFDA
  1336                           fsr2l	equ	0xFD9
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function _SetTimerStatus *****************
  1340 ;; Defined at:
  1341 ;;		line 55 in file "Timeout.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  handle          1    wreg     enum E184
  1344 ;;  enabled         1    0[COMRAM] unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  handle          1    1[COMRAM] enum E184
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_ServiceTimers
  1366 ;;		_UpdateMCU_LED
  1367 ;;		_UpdateBluetooth_LED
  1368 ;;		_SetLED_State
  1369 ;;		_EnableLogger
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text9
  1374  001240                     __ptext9:
  1375                           	opt stack 0
  1376  001240                     _SetTimerStatus:
  1377                           	opt stack 29
  1378                           
  1379                           ;incstack = 0
  1380                           ;SetTimerStatus@handle stored from wreg
  1381  001240  6E33               	movwf	SetTimerStatus@handle,c
  1382                           
  1383                           ;Timeout.c: 57: DEVICE_TIMEOUTS[handle].enabled = enabled;
  1384  001242  5033               	movf	SetTimerStatus@handle,w,c
  1385  001244  0D0B               	mullw	11
  1386  001246  0E03               	movlw	low _DEVICE_TIMEOUTS
  1387  001248  24F3               	addwf	prodl,w,c
  1388  00124A  6ED9               	movwf	fsr2l,c
  1389  00124C  0E00               	movlw	high _DEVICE_TIMEOUTS
  1390  00124E  20F4               	addwfc	prodh,w,c
  1391  001250  6EDA               	movwf	fsr2h,c
  1392  001252  C032  FFDF         	movff	SetTimerStatus@enabled,indf2
  1393                           
  1394                           ;Timeout.c: 58: DEVICE_TIMEOUTS[handle].timeout_ref = _timer_tick;
  1395  001256  5033               	movf	SetTimerStatus@handle,w,c
  1396  001258  0D0B               	mullw	11
  1397  00125A  0E01               	movlw	1
  1398  00125C  26F3               	addwf	prodl,f,c
  1399  00125E  0E00               	movlw	0
  1400  001260  22F4               	addwfc	prodh,f,c
  1401  001262  0E03               	movlw	low _DEVICE_TIMEOUTS
  1402  001264  24F3               	addwf	prodl,w,c
  1403  001266  6ED9               	movwf	fsr2l,c
  1404  001268  0E00               	movlw	high _DEVICE_TIMEOUTS
  1405  00126A  20F4               	addwfc	prodh,w,c
  1406  00126C  6EDA               	movwf	fsr2h,c
  1407  00126E  C001  FFDE         	movff	__timer_tick,postinc2
  1408  001272  C002  FFDD         	movff	__timer_tick+1,postdec2
  1409  001276  0012               	return		;funcret
  1410  001278                     __end_of_SetTimerStatus:
  1411                           	opt stack 0
  1412                           tosu	equ	0xFFF
  1413                           tosh	equ	0xFFE
  1414                           tosl	equ	0xFFD
  1415                           pclath	equ	0xFFA
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           postdec1	equ	0xFE5
  1425                           fsr1l	equ	0xFE1
  1426                           indf2	equ	0xFDF
  1427                           postinc2	equ	0xFDE
  1428                           postdec2	equ	0xFDD
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8
  1432                           
  1433 ;; *************** function _SYSTEM_Initialize *****************
  1434 ;; Defined at:
  1435 ;;		line 115 in file "mcc_generated_files/mcc.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    1
  1456 ;; This function calls:
  1457 ;;		_OSCILLATOR_Initialize
  1458 ;;		_PIN_MANAGER_Initialize
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text10
  1465  001348                     __ptext10:
  1466                           	opt stack 0
  1467  001348                     _SYSTEM_Initialize:
  1468                           	opt stack 29
  1469                           
  1470                           ;mcc.c: 118: PIN_MANAGER_Initialize();
  1471                           
  1472                           ;incstack = 0
  1473  001348  ECE1  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  1474                           
  1475                           ;mcc.c: 119: OSCILLATOR_Initialize();
  1476  00134C  EC93  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1477  001350  0012               	return		;funcret
  1478  001352                     __end_of_SYSTEM_Initialize:
  1479                           	opt stack 0
  1480                           tosu	equ	0xFFF
  1481                           tosh	equ	0xFFE
  1482                           tosl	equ	0xFFD
  1483                           pclath	equ	0xFFA
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           indf2	equ	0xFDF
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _PIN_MANAGER_Initialize *****************
  1502 ;; Defined at:
  1503 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_SYSTEM_Initialize
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text11
  1531  0011C2                     __ptext11:
  1532                           	opt stack 0
  1533  0011C2                     _PIN_MANAGER_Initialize:
  1534                           	opt stack 29
  1535                           
  1536                           ;pin_manager.c: 57: LATA = 0x00;
  1537                           
  1538                           ;incstack = 0
  1539  0011C2  0E00               	movlw	0
  1540  0011C4  6E83               	movwf	3971,c	;volatile
  1541                           
  1542                           ;pin_manager.c: 58: LATB = 0x00;
  1543  0011C6  0E00               	movlw	0
  1544  0011C8  6E84               	movwf	3972,c	;volatile
  1545                           
  1546                           ;pin_manager.c: 59: LATC = 0x00;
  1547  0011CA  0E00               	movlw	0
  1548  0011CC  6E85               	movwf	3973,c	;volatile
  1549                           
  1550                           ;pin_manager.c: 64: TRISA = 0xF0;
  1551  0011CE  0EF0               	movlw	240
  1552  0011D0  6E88               	movwf	3976,c	;volatile
  1553                           
  1554                           ;pin_manager.c: 65: TRISB = 0xFF;
  1555  0011D2  6889               	setf	3977,c	;volatile
  1556                           
  1557                           ;pin_manager.c: 66: TRISC = 0xC7;
  1558  0011D4  0EC7               	movlw	199
  1559  0011D6  6E8A               	movwf	3978,c	;volatile
  1560                           
  1561                           ;pin_manager.c: 71: ANSELC = 0xC7;
  1562  0011D8  0EC7               	movlw	199
  1563  0011DA  010F               	movlb	15	; () banked
  1564  0011DC  6F21               	movwf	33,b	;volatile
  1565                           
  1566                           ; BSR set to: 15
  1567                           ;pin_manager.c: 72: ANSELB = 0xFF;
  1568  0011DE  6919               	setf	25,b	;volatile
  1569                           
  1570                           ;pin_manager.c: 73: ANSELA = 0xF0;
  1571  0011E0  0EF0               	movlw	240
  1572  0011E2  6F11               	movwf	17,b	;volatile
  1573                           
  1574                           ;pin_manager.c: 78: WPUE = 0x00;
  1575  0011E4  0E00               	movlw	0
  1576  0011E6  6F2D               	movwf	45,b	;volatile
  1577                           
  1578                           ;pin_manager.c: 79: WPUB = 0x00;
  1579  0011E8  0E00               	movlw	0
  1580  0011EA  6F18               	movwf	24,b	;volatile
  1581                           
  1582                           ;pin_manager.c: 80: WPUA = 0x00;
  1583  0011EC  0E00               	movlw	0
  1584  0011EE  6F10               	movwf	16,b	;volatile
  1585                           
  1586                           ;pin_manager.c: 81: WPUC = 0x00;
  1587  0011F0  0E00               	movlw	0
  1588  0011F2  6F20               	movwf	32,b	;volatile
  1589                           
  1590                           ;pin_manager.c: 86: ODCONA = 0x00;
  1591  0011F4  0E00               	movlw	0
  1592  0011F6  6F0F               	movwf	15,b	;volatile
  1593                           
  1594                           ;pin_manager.c: 87: ODCONB = 0x00;
  1595  0011F8  0E00               	movlw	0
  1596  0011FA  6F17               	movwf	23,b	;volatile
  1597                           
  1598                           ;pin_manager.c: 88: ODCONC = 0x00;
  1599  0011FC  0E00               	movlw	0
  1600  0011FE  6F1F               	movwf	31,b	;volatile
  1601                           
  1602                           ; BSR set to: 15
  1603  001200  0012               	return		;funcret
  1604  001202                     __end_of_PIN_MANAGER_Initialize:
  1605                           	opt stack 0
  1606                           tosu	equ	0xFFF
  1607                           tosh	equ	0xFFE
  1608                           tosl	equ	0xFFD
  1609                           pclath	equ	0xFFA
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           prodh	equ	0xFF4
  1615                           prodl	equ	0xFF3
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           postdec1	equ	0xFE5
  1619                           fsr1l	equ	0xFE1
  1620                           indf2	equ	0xFDF
  1621                           postinc2	equ	0xFDE
  1622                           postdec2	equ	0xFDD
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _OSCILLATOR_Initialize *****************
  1628 ;; Defined at:
  1629 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_SYSTEM_Initialize
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text12
  1657  001326                     __ptext12:
  1658                           	opt stack 0
  1659  001326                     _OSCILLATOR_Initialize:
  1660                           	opt stack 29
  1661                           
  1662                           ;mcc.c: 125: OSCCON1 = 0x60;
  1663                           
  1664                           ; BSR set to: 15
  1665                           ;incstack = 0
  1666  001326  0E60               	movlw	96
  1667  001328  010E               	movlb	14	; () banked
  1668  00132A  6FD8               	movwf	216,b	;volatile
  1669                           
  1670                           ;mcc.c: 127: OSCCON3 = 0x00;
  1671  00132C  0E00               	movlw	0
  1672  00132E  6FDA               	movwf	218,b	;volatile
  1673                           
  1674                           ;mcc.c: 129: OSCEN = 0x00;
  1675  001330  0E00               	movlw	0
  1676  001332  6FDC               	movwf	220,b	;volatile
  1677                           
  1678                           ;mcc.c: 131: OSCFRQ = 0x08;
  1679  001334  0E08               	movlw	8
  1680  001336  6FDE               	movwf	222,b	;volatile
  1681                           
  1682                           ;mcc.c: 133: OSCTUNE = 0x00;
  1683  001338  0E00               	movlw	0
  1684  00133A  6FDD               	movwf	221,b	;volatile
  1685                           
  1686                           ; BSR set to: 14
  1687  00133C  0012               	return		;funcret
  1688  00133E                     __end_of_OSCILLATOR_Initialize:
  1689                           	opt stack 0
  1690                           tosu	equ	0xFFF
  1691                           tosh	equ	0xFFE
  1692                           tosl	equ	0xFFD
  1693                           pclath	equ	0xFFA
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           postdec1	equ	0xFE5
  1703                           fsr1l	equ	0xFE1
  1704                           indf2	equ	0xFDF
  1705                           postinc2	equ	0xFDE
  1706                           postdec2	equ	0xFDD
  1707                           fsr2h	equ	0xFDA
  1708                           fsr2l	equ	0xFD9
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function _InitTimer *****************
  1712 ;; Defined at:
  1713 ;;		line 26 in file "Timeout.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    1
  1734 ;; This function calls:
  1735 ;;		_memset
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text13
  1742  0012EA                     __ptext13:
  1743                           	opt stack 0
  1744  0012EA                     _InitTimer:
  1745                           	opt stack 29
  1746                           
  1747                           ;Timeout.c: 28: memset(DEVICE_TIMEOUTS, 0, sizeof(TIMEOUT_t));
  1748                           
  1749                           ; BSR set to: 14
  1750                           ;incstack = 0
  1751  0012EA  0E03               	movlw	low _DEVICE_TIMEOUTS
  1752  0012EC  6E32               	movwf	memset@p1,c
  1753  0012EE  0E00               	movlw	high _DEVICE_TIMEOUTS
  1754  0012F0  6E33               	movwf	memset@p1+1,c
  1755  0012F2  0E00               	movlw	0
  1756  0012F4  6E35               	movwf	memset@c+1,c
  1757  0012F6  0E00               	movlw	0
  1758  0012F8  6E34               	movwf	memset@c,c
  1759  0012FA  0E00               	movlw	0
  1760  0012FC  6E37               	movwf	memset@n+1,c
  1761  0012FE  0E0B               	movlw	11
  1762  001300  6E36               	movwf	memset@n,c
  1763  001302  EC3C  F009         	call	_memset	;wreg free
  1764  001306  0012               	return		;funcret
  1765  001308                     __end_of_InitTimer:
  1766                           	opt stack 0
  1767                           tosu	equ	0xFFF
  1768                           tosh	equ	0xFFE
  1769                           tosl	equ	0xFFD
  1770                           pclath	equ	0xFFA
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           postinc0	equ	0xFEE
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1l	equ	0xFE1
  1781                           indf2	equ	0xFDF
  1782                           postinc2	equ	0xFDE
  1783                           postdec2	equ	0xFDD
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _memset *****************
  1789 ;; Defined at:
  1790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memset.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  p1              2    0[COMRAM] PTR void 
  1793 ;;		 -> DEVICE_TIMEOUTS(44), 
  1794 ;;  c               2    2[COMRAM] int 
  1795 ;;  n               2    4[COMRAM] unsigned int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  p               2    6[COMRAM] PTR unsigned char 
  1798 ;;		 -> DEVICE_TIMEOUTS(44), 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[COMRAM] PTR void 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1808 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1811 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;Total ram usage:        8 bytes
  1813 ;; Hardware stack levels used:    1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_InitTimer
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text14
  1822  001278                     __ptext14:
  1823                           	opt stack 0
  1824  001278                     _memset:
  1825                           	opt stack 29
  1826                           
  1827                           ;incstack = 0
  1828  001278  C032  F038         	movff	memset@p1,memset@p
  1829  00127C  C033  F039         	movff	memset@p1+1,memset@p+1
  1830  001280  D008               	goto	l670
  1831  001282                     l1150:
  1832  001282  C038  FFD9         	movff	memset@p,fsr2l
  1833  001286  C039  FFDA         	movff	memset@p+1,fsr2h
  1834  00128A  C034  FFDF         	movff	memset@c,indf2
  1835  00128E  4A38               	infsnz	memset@p,f,c
  1836  001290  2A39               	incf	memset@p+1,f,c
  1837  001292                     l670:
  1838  001292  0636               	decf	memset@n,f,c
  1839  001294  A0D8               	btfss	status,0,c
  1840  001296  0637               	decf	memset@n+1,f,c
  1841  001298  2836               	incf	memset@n,w,c
  1842  00129A  E1F3               	bnz	l1150
  1843  00129C  2837               	incf	memset@n+1,w,c
  1844  00129E  B4D8               	btfsc	status,2,c
  1845  0012A0  0012               	return	
  1846  0012A2  D7EF               	goto	l671
  1847  0012A4                     __end_of_memset:
  1848                           	opt stack 0
  1849                           tosu	equ	0xFFF
  1850                           tosh	equ	0xFFE
  1851                           tosl	equ	0xFFD
  1852                           pclath	equ	0xFFA
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1l	equ	0xFE1
  1863                           indf2	equ	0xFDF
  1864                           postinc2	equ	0xFDE
  1865                           postdec2	equ	0xFDD
  1866                           fsr2h	equ	0xFDA
  1867                           fsr2l	equ	0xFD9
  1868                           status	equ	0xFD8
  1869                           
  1870 ;; *************** function _InitDeviceConfig *****************
  1871 ;; Defined at:
  1872 ;;		line 28 in file "NonVolatileMemory.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		_memcpy
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text15
  1901  001308                     __ptext15:
  1902                           	opt stack 0
  1903  001308                     _InitDeviceConfig:
  1904                           	opt stack 29
  1905                           
  1906                           ;NonVolatileMemory.c: 30: memcpy((uint8_t*)&DEVICE_CONFIG, DEFAULT_DEVICE_CONFIG, sizeof
      +                          (DEVICE_CONFIG_t));
  1907                           
  1908                           ;incstack = 0
  1909  001308  0E2F               	movlw	low _DEVICE_CONFIG
  1910  00130A  6E32               	movwf	memcpy@d1,c
  1911  00130C  0E00               	movlw	high _DEVICE_CONFIG
  1912  00130E  6E33               	movwf	memcpy@d1+1,c
  1913  001310  0E09               	movlw	low _DEFAULT_DEVICE_CONFIG
  1914  001312  6E34               	movwf	memcpy@s1,c
  1915  001314  0E0F               	movlw	high _DEFAULT_DEVICE_CONFIG
  1916  001316  6E35               	movwf	memcpy@s1+1,c
  1917  001318  0E00               	movlw	0
  1918  00131A  6E37               	movwf	memcpy@n+1,c
  1919  00131C  0E03               	movlw	3
  1920  00131E  6E36               	movwf	memcpy@n,c
  1921  001320  EC9B  F008         	call	_memcpy	;wreg free
  1922  001324  0012               	return		;funcret
  1923  001326                     __end_of_InitDeviceConfig:
  1924                           	opt stack 0
  1925                           tosu	equ	0xFFF
  1926                           tosh	equ	0xFFE
  1927                           tosl	equ	0xFFD
  1928                           pclath	equ	0xFFA
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodh	equ	0xFF4
  1934                           prodl	equ	0xFF3
  1935                           postinc0	equ	0xFEE
  1936                           wreg	equ	0xFE8
  1937                           postdec1	equ	0xFE5
  1938                           fsr1l	equ	0xFE1
  1939                           indf2	equ	0xFDF
  1940                           postinc2	equ	0xFDE
  1941                           postdec2	equ	0xFDD
  1942                           fsr2h	equ	0xFDA
  1943                           fsr2l	equ	0xFD9
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _memcpy *****************
  1947 ;; Defined at:
  1948 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\memcpy.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  d1              2    0[COMRAM] PTR void 
  1951 ;;		 -> PID_CHANNEL_CONFIG(160), DEVICE_CONFIG(3), 
  1952 ;;  s1              2    2[COMRAM] PTR const void 
  1953 ;;		 -> DEFAULT_DEVICE_CONFIG(3), DEFAULT_PID_CHANNEL_CONFIG(8), 
  1954 ;;  n               2    4[COMRAM] unsigned int 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  s               2    8[COMRAM] PTR const unsigned char 
  1957 ;;		 -> DEFAULT_DEVICE_CONFIG(3), DEFAULT_PID_CHANNEL_CONFIG(8), 
  1958 ;;  d               2    6[COMRAM] PTR unsigned char 
  1959 ;;		 -> PID_CHANNEL_CONFIG(160), DEVICE_CONFIG(3), 
  1960 ;;  tmp             1   10[COMRAM] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2    0[COMRAM] PTR void 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1970 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;Total ram usage:       11 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_InitDeviceConfig
  1980 ;;		_ResetAllConfig
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text16
  1985  001136                     __ptext16:
  1986                           	opt stack 0
  1987  001136                     _memcpy:
  1988                           	opt stack 29
  1989                           
  1990                           ;incstack = 0
  1991  001136  C034  F03A         	movff	memcpy@s1,memcpy@s
  1992  00113A  C035  F03B         	movff	memcpy@s1+1,memcpy@s+1
  1993  00113E  C032  F038         	movff	memcpy@d1,memcpy@d
  1994  001142  C033  F039         	movff	memcpy@d1+1,memcpy@d+1
  1995  001146  D013               	goto	l664
  1996  001148                     l1138:
  1997  001148  C03A  FFF6         	movff	memcpy@s,tblptrl
  1998  00114C  C03B  FFF7         	movff	memcpy@s+1,tblptrh
  1999  001150                     	if	0	;tblptru may be non-zero
  2000  001150                     	endif
  2001  001150                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2002  001150  0E00               	movlw	low (__mediumconst shr (0+16))
  2003  001152  6EF8               	movwf	tblptru,c
  2004  001154                     	endif
  2005  001154  0008               	tblrd		*
  2006  001156  CFF5 F03C          	movff	tablat,memcpy@tmp
  2007  00115A  4A3A               	infsnz	memcpy@s,f,c
  2008  00115C  2A3B               	incf	memcpy@s+1,f,c
  2009  00115E  C038  FFD9         	movff	memcpy@d,fsr2l
  2010  001162  C039  FFDA         	movff	memcpy@d+1,fsr2h
  2011  001166  C03C  FFDF         	movff	memcpy@tmp,indf2
  2012  00116A  4A38               	infsnz	memcpy@d,f,c
  2013  00116C  2A39               	incf	memcpy@d+1,f,c
  2014  00116E                     l664:
  2015  00116E  0636               	decf	memcpy@n,f,c
  2016  001170  A0D8               	btfss	status,0,c
  2017  001172  0637               	decf	memcpy@n+1,f,c
  2018  001174  2836               	incf	memcpy@n,w,c
  2019  001176  E1E8               	bnz	l1138
  2020  001178  2837               	incf	memcpy@n+1,w,c
  2021  00117A  B4D8               	btfsc	status,2,c
  2022  00117C  0012               	return	
  2023  00117E  D7E4               	goto	l665
  2024  001180                     __end_of_memcpy:
  2025                           	opt stack 0
  2026                           tosu	equ	0xFFF
  2027                           tosh	equ	0xFFE
  2028                           tosl	equ	0xFFD
  2029                           pclath	equ	0xFFA
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           postinc0	equ	0xFEE
  2037                           wreg	equ	0xFE8
  2038                           postdec1	equ	0xFE5
  2039                           fsr1l	equ	0xFE1
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           postdec2	equ	0xFDD
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           tosu	equ	0xFFF
  2047                           tosh	equ	0xFFE
  2048                           tosl	equ	0xFFD
  2049                           pclath	equ	0xFFA
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           prodh	equ	0xFF4
  2055                           prodl	equ	0xFF3
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1l	equ	0xFE1
  2060                           indf2	equ	0xFDF
  2061                           postinc2	equ	0xFDE
  2062                           postdec2	equ	0xFDD
  2063                           fsr2h	equ	0xFDA
  2064                           fsr2l	equ	0xFD9
  2065                           status	equ	0xFD8
  2066                           
  2067                           	psect	text17
  2068  000000                     __ptext17:
  2069                           	opt stack 0
  2070                           tosu	equ	0xFFF
  2071                           tosh	equ	0xFFE
  2072                           tosl	equ	0xFFD
  2073                           pclath	equ	0xFFA
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           postinc0	equ	0xFEE
  2081                           wreg	equ	0xFE8
  2082                           postdec1	equ	0xFE5
  2083                           fsr1l	equ	0xFE1
  2084                           indf2	equ	0xFDF
  2085                           postinc2	equ	0xFDE
  2086                           postdec2	equ	0xFDD
  2087                           fsr2h	equ	0xFDA
  2088                           fsr2l	equ	0xFD9
  2089                           status	equ	0xFD8
  2090                           
  2091                           	psect	rparam
  2092  0000                     tosu	equ	0xFFF
  2093                           tosh	equ	0xFFE
  2094                           tosl	equ	0xFFD
  2095                           pclath	equ	0xFFA
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           prodh	equ	0xFF4
  2101                           prodl	equ	0xFF3
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postdec1	equ	0xFE5
  2105                           fsr1l	equ	0xFE1
  2106                           indf2	equ	0xFDF
  2107                           postinc2	equ	0xFDE
  2108                           postdec2	equ	0xFDD
  2109                           fsr2h	equ	0xFDA
  2110                           fsr2l	equ	0xFD9
  2111                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    11
    Data        10
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      70
    BANK0           160      0     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    memset@p	PTR unsigned char  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    memcpy@d1	PTR void  size(2) Largest target is 160
		 -> PID_CHANNEL_CONFIG(BANK0[160]), DEVICE_CONFIG(COMRAM[3]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 160
		 -> PID_CHANNEL_CONFIG(BANK0[160]), DEVICE_CONFIG(COMRAM[3]), 

    memcpy@s1	PTR const void  size(2) Largest target is 8
		 -> DEFAULT_DEVICE_CONFIG(CODE[3]), DEFAULT_PID_CHANNEL_CONFIG(CODE[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 8
		 -> DEFAULT_DEVICE_CONFIG(CODE[3]), DEFAULT_PID_CHANNEL_CONFIG(CODE[8]), 

    S183TIMEOUT_STRUCT$arg	PTR void  size(2) Largest target is 0

    DEVICE_TIMEOUTS.arg	PTR void  size(2) Largest target is 0

    S183TIMEOUT_STRUCT$callback	PTR FTN()void  size(3) Largest target is 1
		 -> LogTwentyHz(), LogTenHz(), UpdateBluetooth_LED(), UpdateMCU_LED(), 

    DEVICE_TIMEOUTS.callback	PTR FTN()void  size(3) Largest target is 1
		 -> LogTwentyHz(), LogTenHz(), UpdateBluetooth_LED(), UpdateMCU_LED(), 

    sp__memset	PTR void  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    sp__memcpy	PTR void  size(2) Largest target is 160
		 -> PID_CHANNEL_CONFIG(BANK0[160]), DEVICE_CONFIG(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _SetLED_State->_SetTimerPeriodic
    _ServiceTimers->_absoluteTimeDifference
    _UpdateMCU_LED->_SetTimerStatus
    _UpdateBluetooth_LED->_SetTimerStatus
    _InitTimer->_memset
    _InitDeviceConfig->_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4847
                   _InitDeviceConfig
                          _InitTimer
                  _SYSTEM_Initialize
                      _ServiceTimers
                       _SetLED_State
 ---------------------------------------------------------------------------------
 (1) _SetLED_State                                         5     0      5    1189
                                              3 COMRAM     5     0      5
                   _SetTimerPeriodic
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _SetTimerPeriodic                                     3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ServiceTimers                                        3     3      0    2507
                                              6 COMRAM     3     3      0
                           _LogTenHz *
                        _LogTwentyHz *
                     _SetTimerStatus
                _UpdateBluetooth_LED *
                      _UpdateMCU_LED *
             _absoluteTimeDifference
 ---------------------------------------------------------------------------------
 (2) _absoluteTimeDifference                               6     2      4     284
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _UpdateMCU_LED                                        2     2      0     674
                                              2 COMRAM     2     2      0
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _UpdateBluetooth_LED                                  2     2      0     674
                                              2 COMRAM     2     2      0
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _SetTimerStatus                                       2     1      1     674
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LogTwentyHz                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LogTenHz                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer                                            0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _InitDeviceConfig                                     0     0      0     827
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     827
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDeviceConfig
     _memcpy
   _InitTimer
     _memset
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _ServiceTimers
     _LogTenHz *
     _LogTwentyHz *
     _SetTimerStatus *
     _UpdateBluetooth_LED *
       _SetTimerStatus
     _UpdateMCU_LED *
       _SetTimerStatus
     _absoluteTimeDifference *
   _SetLED_State
     _SetTimerPeriodic
     _SetTimerStatus

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      46       1       73.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6       6        0.0%
DATA                 0      0      E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Nov 17 18:24:10 2017

            __end_of_SetTimerStatus 1278                         __CFG_CP$OFF 000000  
                                l91 11BC                         __CFG_LVP$ON 000000  
                               l202 1022                                 l206 103E  
                               l152 1118                                 l144 0F1E  
                               l147 0FF6                                 l148 1000  
                               l181 1086                                 l176 10B2  
                               l184 1094                                 l177 1078  
                               l194 1042                                 l195 1006  
                               l188 10AE                                 l199 1014  
                               l670 1292                                 l671 1282  
                               l664 116E                                 l665 1148  
                               u170 109C                                 u180 102A  
                               u228 0FA0                                 u229 0FB4  
                               u176 109E                                 u186 102C  
                      __CFG_CPD$OFF 000000                                 prod 000FF3  
                               tosl 000FFD                                 wreg 000FE8  
      __size_of_UpdateBluetooth_LED 0072                        __CFG_ZCD$OFF 000000  
                              l1150 1282                                l1230 0F16  
                              l1138 1148                                l1372 105A  
                              l1374 1070                                l1376 10CA  
                              l1378 10E0                                _LATA 000F83  
                              _LATB 000F84                                _LATC 000F85  
                              _WPUA 000F10                                _WPUB 000F18  
                              _WPUC 000F20                                _WPUE 000F2D  
                     __CFG_FCMEN$ON 000000                                _main 1180  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                     _TWENTY_HZ_LOG 0043                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                     __CFG_CSWEN$ON 000000                        ___param_bank 000000  
                   ?_SetTimerStatus 0032     absoluteTimeDifference@comparand 0034  
                     __CFG_SCANE$ON 000000      __size_of_OSCILLATOR_Initialize 0018  
     __end_of_OSCILLATOR_Initialize 133E                   SetLED_State@state 0038  
                             ?_main 0032                       __CFG_WDTE$OFF 000000  
                    __CFG_DEBUG$OFF 000000                 ServiceTimers@handle 003A  
                     ??_LogTwentyHz 0032                               _OSCEN 000EDC  
                             _TRISA 000F88                               _TRISB 000F89  
                             _TRISC 000F8A                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                       __CFG_WRT4$OFF 000000  
                     __CFG_WRT5$OFF 000000                       __CFG_WRT6$OFF 000000  
                     __CFG_WRT7$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                      __CFG_EBTR4$OFF 000000  
                    __CFG_EBTR5$OFF 000000                      __CFG_EBTR6$OFF 000000  
                    __CFG_EBTR7$OFF 000000                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
   absoluteTimeDifference@reference 0032                      __CFG_EBTRB$OFF 000000  
                     ?_SetLED_State 0035            ??_absoluteTimeDifference 0036  
                __CFG_MCLRE$EXTMCLR 000000                               pclath 000FFA  
                             tablat 000FF5                               status 000FD8  
                   __initialization 1202                        __end_of_main 11C2  
                  __end_of_LogTenHz 1356                              ??_main 003D  
                     __activetblptr 000003                      ??_SetLED_State 003A  
               __end_of_LogTwentyHz 1354                              _ANSELA 000F11  
                            _ANSELB 000F19                              _ANSELC 000F21  
                            _ODCONA 000F0F                              _ODCONB 000F17  
                            _ODCONC 000F1F                      __CFG_WDTCCS$SC 000000  
                            _OSCFRQ 000EDE                              _NVMDAT 000F80  
                __size_of_InitTimer 001E                              _NVFlag FFFE  
                  _InitDeviceConfig 1308                      __CFG_PWRTE$OFF 000000  
                    __CFG_XINST$OFF 000000                      __CFG_STVREN$ON 000000  
                            _memcpy 1136                              _memset 1278  
                            clear_0 1228                              clear_1 1234  
             __end_of_ServiceTimers 1004            SetTimerPeriodic@periodic 0032  
                      __pdataCOMRAM 003D                        __mediumconst 0000  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8     __size_of_absoluteTimeDifference 0050  
__end_of_DEFAULT_PID_CHANNEL_CONFIG 0F09          _DEFAULT_PID_CHANNEL_CONFIG 0F01  
                 _SYSTEM_Initialize 1348                          __accesstop 0060  
           __end_of__initialization 123A                  ?_SYSTEM_Initialize 0032  
                     ___rparam_used 000001                   ?_SetTimerPeriodic 0032  
               _UpdateBluetooth_LED 1004                     SetLED_State@LED 0035  
                    __pcstackCOMRAM 0032                  ??_SetTimerPeriodic 0034  
               ??_SYSTEM_Initialize 0032                   __end_of_InitTimer 1308  
                       _LogTwentyHz 1352                ?_UpdateBluetooth_LED 0032  
         __end_of_SYSTEM_Initialize 1352                          __pbssBANK0 0060  
                         ?_LogTenHz 0032               __end_of_UpdateMCU_LED 10E6  
                  ??_SetTimerStatus 0033                __end_of_SetLED_State 12EA  
            _absoluteTimeDifference 10E6                     __CFG_PPS1WAY$ON 000000  
                           ?_memcpy 0032                             ?_memset 0032  
                   __p_NVFlag_const FFFE               ??_UpdateBluetooth_LED 0034  
                           _MCU_LED 0040                             _OSCCON1 000ED8  
                           _OSCCON3 000EDA                             _NVMADRH 000F7F  
                           _NVMADRL 000F7E                             _OSCTUNE 000EDD  
                           _NVMCON1 000F81                             _NVMCON2 000F82  
                        ??_LogTenHz 0032                             __Hparam 0000  
                           __Lparam 0000          __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __psmallconst 0F00                             __pcinit 1202  
                   __size_of_memcpy 004A                     __size_of_memset 002C  
                           __ramtop 0F00                             __ptext0 1180  
                           __ptext1 12C8                             __ptext2 12A4  
                           __ptext3 0F0E                             __ptext4 10E6  
                           __ptext5 1352                             __ptext6 1354  
                           __ptext7 1004                             __ptext8 1076  
                           __ptext9 1240               _OSCILLATOR_Initialize 1326  
                _PID_CHANNEL_CONFIG 0060            __end_of_InitDeviceConfig 1326  
              SetTimerStatus@handle 0033            ??_PIN_MANAGER_Initialize 0032  
        __size_of_SYSTEM_Initialize 000A                end_of_initialization 123A  
                           memcpy@d 0038                             memcpy@n 0036  
                           memcpy@s 003A                             memset@c 0034  
                           memset@n 0036                             memset@p 0038  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
     __end_of_DEFAULT_DEVICE_CONFIG 0F0C               __CFG_WDTCPS$WDTCPS_31 000000  
                     _DEVICE_CONFIG 002F                 _NVFlag_absconstaddr 01FFFE  
                  __CFG_FEXTOSC$OFF 000000               __size_of_SetLED_State 0022  
                    __end_of_NVFlag FFFF                       __pidataCOMRAM 133E  
            SetTimerPeriodic@handle 0034                      __end_of_memcpy 1180  
            ?_OSCILLATOR_Initialize 0032                      __end_of_memset 12A4  
                      ?_LogTwentyHz 0032           __size_of_SetTimerPeriodic 0024  
               start_initialization 1202     __size_of_PIN_MANAGER_Initialize 0040  
                         _InitTimer 12EA                        _SetLED_State 12C8  
                 __size_of_LogTenHz 0002              __size_of_ServiceTimers 00F6  
           ?_absoluteTimeDifference 0032                    __CFG_LPBOREN$OFF 000000  
                          ??_memcpy 0038                            ??_memset 0038  
                     _BLUETOOTH_LED 003D                         __pbssCOMRAM 0001  
                        ?_InitTimer 0032      __end_of_absoluteTimeDifference 1136  
            _PIN_MANAGER_Initialize 11C2         __end_of_UpdateBluetooth_LED 1076  
                       __smallconst 0F00              __size_of_UpdateMCU_LED 0070  
                     _ServiceTimers 0F0E                   ?_InitDeviceConfig 0032  
                       __timer_tick 0001                  ??_InitDeviceConfig 003D  
                          _LATAbits 000F83                 __CFG_BORV$VBOR_2P45 000000  
           __size_of_SetTimerStatus 0038                      ?_ServiceTimers 0032  
                  _SetTimerPeriodic 12A4                         ??_InitTimer 003A  
              __size_of_LogTwentyHz 0002                           copy_data0 1216  
                          _LogTenHz 1354                       _UpdateMCU_LED 1076  
                          __Hrparam 0000                           memcpy@tmp 003C  
                          __Lrparam 0000                  __CFG_BOREN$SBORDIS 000000  
           ??_OSCILLATOR_Initialize 0032               _DEFAULT_DEVICE_CONFIG 0F09  
                          __ptext10 1348                            __ptext11 11C2  
                          __ptext12 1326                            __ptext13 12EA  
                          __ptext14 1278                            __ptext15 1308  
                          __ptext16 1136                            __ptext17 0000  
                     __size_of_main 0042                      ?_UpdateMCU_LED 0032  
             SetTimerStatus@enabled 0032                __CFG_WDTCWS$WDTCWS_7 000000  
                   ??_ServiceTimers 0038                         _NVMCON1bits 000F81  
                          memcpy@d1 0032                            memcpy@s1 0034  
                          memset@p1 0032             ?_PIN_MANAGER_Initialize 0032  
                 __CFG_CLKOUTEN$OFF 000000                      _SetTimerStatus 1240  
                        _TEN_HZ_LOG 0045                     _DEVICE_TIMEOUTS 0003  
    __end_of_PIN_MANAGER_Initialize 1202                     ??_UpdateMCU_LED 0034  
         __size_of_InitDeviceConfig 001E            __end_of_SetTimerPeriodic 12C8  
