

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Nov 08 18:27:45 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	_NVFlag_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 1.43
    36                           ; Generated 25/07/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F27K40 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00137A                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _BLUETOOTH_LED
    75  00137A  0001               	dw	1
    76  00137C  01                 	db	1
    77                           
    78                           ;initializer for _MCU_LED
    79  00137D  0001               	dw	1
    80  00137F  00                 	db	0
    81                           
    82                           ;initializer for _TWENTY_HZ_LOG
    83  001380  00                 	db	0
    84  001381  03                 	db	3
    85                           
    86                           ;initializer for _TEN_HZ_LOG
    87  001382  00                 	db	0
    88  001383  02                 	db	2
    89  0000                     _NVFlag_absconstaddr	set	131070
    90                           
    91                           	psect	smallconst
    92  000F00                     __psmallconst:
    93                           	opt stack 0
    94  000F00  00                 	db	0
    95  000F01                     _DEFAULT_PID_CHANNEL_CONFIG:
    96                           	opt stack 0
    97  000F01  00                 	db	0
    98  000F02  00                 	db	0
    99  000F03  00                 	db	0
   100  000F04  00                 	db	0
   101  000F05  00                 	db	0
   102  000F06  00                 	db	0
   103  000F07  0000               	dw	0
   104  000F09                     __end_of_DEFAULT_PID_CHANNEL_CONFIG:
   105                           	opt stack 0
   106  000F09                     _DEFAULT_DEVICE_CONFIG:
   107                           	opt stack 0
   108  000F09  00                 	db	0
   109  000F0A  01                 	db	1
   110  000F0B  02                 	db	2
   111  000F0C                     __end_of_DEFAULT_DEVICE_CONFIG:
   112                           	opt stack 0
   113  0000                     _NVFlag_absconstaddr	set	131070
   114  000F0C  00                 	db	0	; dummy byte at the end
   115  0000                     
   116                           	psect	_NVFlag_const
   117  01FFFE                     __p_NVFlag_const:
   118                           	opt stack 0
   119  01FFFE                     _NVFlag:
   120                           	opt stack 0
   121  01FFFE  55                 	db	85
   122  01FFFF                     __end_of_NVFlag:
   123                           	opt stack 0
   124  0000                     _OSCTUNE	set	3805
   125  0000                     _OSCFRQ	set	3806
   126  0000                     _OSCEN	set	3804
   127  0000                     _OSCCON3	set	3802
   128  0000                     _OSCCON1	set	3800
   129  0000                     _ODCONC	set	3871
   130  0000                     _ODCONB	set	3863
   131  0000                     _ODCONA	set	3855
   132  0000                     _WPUC	set	3872
   133  0000                     _WPUA	set	3856
   134  0000                     _WPUB	set	3864
   135  0000                     _WPUE	set	3885
   136  0000                     _ANSELA	set	3857
   137  0000                     _ANSELB	set	3865
   138  0000                     _ANSELC	set	3873
   139  0000                     _LATAbits	set	3971
   140  0000                     _NVMCON1bits	set	3969
   141  0000                     _NVMCON2	set	3970
   142  0000                     _NVMCON1	set	3969
   143  0000                     _NVMDAT	set	3968
   144  0000                     _NVMADRH	set	3967
   145  0000                     _NVMADRL	set	3966
   146  0000                     _TRISC	set	3978
   147  0000                     _TRISB	set	3977
   148  0000                     _TRISA	set	3976
   149  0000                     _LATC	set	3973
   150  0000                     _LATB	set	3972
   151  0000                     _LATA	set	3971
   152                           
   153                           ; #config settings
   154  0000                     
   155                           	psect	cinit
   156  0011DE                     __pcinit:
   157                           	opt stack 0
   158  0011DE                     start_initialization:
   159                           	opt stack 0
   160  0011DE                     __initialization:
   161                           	opt stack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (10 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  0011DE  0E7A               	movlw	low __pidataCOMRAM
   166  0011E0  6EF6               	movwf	tblptrl,c
   167  0011E2  0E13               	movlw	high __pidataCOMRAM
   168  0011E4  6EF7               	movwf	tblptrh,c
   169  0011E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  0011E8  6EF8               	movwf	tblptru,c
   171  0011EA  EE00  F03F         	lfsr	0,__pdataCOMRAM
   172  0011EE  EE10 F00A          	lfsr	1,10
   173  0011F2                     copy_data0:
   174  0011F2  0009               	tblrd		*+
   175  0011F4  CFF5 FFEE          	movff	tablat,postinc0
   176  0011F8  50E5               	movf	postdec1,w,c
   177  0011FA  50E1               	movf	fsr1l,w,c
   178  0011FC  E1FA               	bnz	copy_data0
   179                           
   180                           ; Clear objects allocated to BANK1 (160 bytes)
   181  0011FE  EE01  F000         	lfsr	0,__pbssBANK1
   182  001202  0EA0               	movlw	160
   183  001204                     clear_0:
   184  001204  6AEE               	clrf	postinc0,c
   185  001206  06E8               	decf	wreg,f,c
   186  001208  E1FD               	bnz	clear_0
   187                           
   188                           ; Clear objects allocated to BANK0 (60 bytes)
   189  00120A  EE00  F060         	lfsr	0,__pbssBANK0
   190  00120E  0E3C               	movlw	60
   191  001210                     clear_1:
   192  001210  6AEE               	clrf	postinc0,c
   193  001212  06E8               	decf	wreg,f,c
   194  001214  E1FD               	bnz	clear_1
   195                           
   196                           ; Clear objects allocated to COMRAM (49 bytes)
   197  001216  EE00  F001         	lfsr	0,__pbssCOMRAM
   198  00121A  0E31               	movlw	49
   199  00121C                     clear_2:
   200  00121C  6AEE               	clrf	postinc0,c
   201  00121E  06E8               	decf	wreg,f,c
   202  001220  E1FD               	bnz	clear_2
   203  001222                     end_of_initialization:
   204                           	opt stack 0
   205  001222                     __end_of__initialization:
   206                           	opt stack 0
   207  001222  0100               	movlb	0
   208  001224  EF14  F009         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           postdec1	equ	0xFE5
   216                           fsr1l	equ	0xFE1
   217                           
   218                           	psect	bssCOMRAM
   219  000001                     __pbssCOMRAM:
   220                           	opt stack 0
   221  000001                     __timer_tick:
   222                           	opt stack 0
   223  000001                     	ds	2
   224  000003                     _DEVICE_TIMEOUTS:
   225                           	opt stack 0
   226  000003                     	ds	44
   227  00002F                     _DEVICE_CONFIG:
   228                           	opt stack 0
   229  00002F                     	ds	3
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec1	equ	0xFE5
   237                           fsr1l	equ	0xFE1
   238                           
   239                           	psect	dataCOMRAM
   240  00003F                     __pdataCOMRAM:
   241                           	opt stack 0
   242  00003F                     _BLUETOOTH_LED:
   243                           	opt stack 0
   244  00003F                     	ds	3
   245  000042                     _MCU_LED:
   246                           	opt stack 0
   247  000042                     	ds	3
   248  000045                     _TWENTY_HZ_LOG:
   249                           	opt stack 0
   250  000045                     	ds	2
   251  000047                     _TEN_HZ_LOG:
   252                           	opt stack 0
   253  000047                     	ds	2
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	bssBANK0
   264  000060                     __pbssBANK0:
   265                           	opt stack 0
   266  000060                     _ErrorLog:
   267                           	opt stack 0
   268  000060                     	ds	60
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssBANK1
   279  000100                     __pbssBANK1:
   280                           	opt stack 0
   281  000100                     _PID_CHANNEL_CONFIG:
   282                           	opt stack 0
   283  000100                     	ds	160
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	cstackCOMRAM
   294  000032                     __pcstackCOMRAM:
   295                           	opt stack 0
   296  000032                     ?_absoluteTimeDifference:
   297                           	opt stack 0
   298  000032                     SetTimerStatus@enabled:
   299                           	opt stack 0
   300  000032                     SetTimerPeriodic@periodic:
   301                           	opt stack 0
   302  000032                     absoluteTimeDifference@reference:
   303                           	opt stack 0
   304  000032                     memcpy@d1:
   305                           	opt stack 0
   306  000032                     memset@p1:
   307                           	opt stack 0
   308                           
   309                           ; 2 bytes @ 0x0
   310  000032                     	ds	1
   311  000033                     SetTimerStatus@handle:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x1
   315  000033                     	ds	1
   316  000034                     ??_UpdateMCU_LED:
   317  000034                     ??_UpdateBluetooth_LED:
   318  000034                     SetTimerPeriodic@handle:
   319                           	opt stack 0
   320  000034                     absoluteTimeDifference@comparand:
   321                           	opt stack 0
   322  000034                     memset@c:
   323                           	opt stack 0
   324  000034                     memcpy@s1:
   325                           	opt stack 0
   326                           
   327                           ; 3 bytes @ 0x2
   328  000034                     	ds	1
   329  000035                     SetLED_State@LED:
   330                           	opt stack 0
   331                           
   332                           ; 3 bytes @ 0x3
   333  000035                     	ds	1
   334  000036                     ??_absoluteTimeDifference:
   335  000036                     memset@n:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x4
   339  000036                     	ds	1
   340  000037                     memcpy@n:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x5
   344  000037                     	ds	1
   345  000038                     SetLED_State@state:
   346                           	opt stack 0
   347  000038                     memset@p:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x6
   351  000038                     	ds	1
   352  000039                     memcpy@s:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x7
   356  000039                     	ds	1
   357  00003A                     ServiceTimers@handle:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x8
   361  00003A                     	ds	2
   362  00003C                     memcpy@d:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0xA
   366  00003C                     	ds	2
   367  00003E                     memcpy@tmp:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xC
   371  00003E                     	ds	1
   372  00003F                     tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           ; 1 bytes @ 0xD
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 32 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels required when called:    3
   407 ;; This function calls:
   408 ;;		_InitDeviceConfig
   409 ;;		_InitTimer
   410 ;;		_SYSTEM_Initialize
   411 ;;		_ServiceTimers
   412 ;;		_SetLED_State
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text0
   419  001228                     __ptext0:
   420                           	opt stack 0
   421  001228                     _main:
   422                           	opt stack 28
   423                           
   424                           ;main.c: 35: SYSTEM_Initialize();
   425                           
   426                           ;incstack = 0
   427  001228  ECC2  F009         	call	_SYSTEM_Initialize	;wreg free
   428                           
   429                           ;main.c: 36: InitTimer();
   430  00122C  ECAE  F009         	call	_InitTimer	;wreg free
   431                           
   432                           ;main.c: 37: InitDeviceConfig();
   433  001230  EC67  F009         	call	_InitDeviceConfig	;wreg free
   434                           
   435                           ;main.c: 39: SetLED_State(MCU_LED, LED_ON);
   436  001234  C042  F035         	movff	_MCU_LED,SetLED_State@LED
   437  001238  C043  F036         	movff	_MCU_LED+1,SetLED_State@LED+1
   438  00123C  C044  F037         	movff	_MCU_LED+2,SetLED_State@LED+2
   439  001240  0E00               	movlw	0
   440  001242  6E39               	movwf	SetLED_State@state+1,c
   441  001244  0E00               	movlw	0
   442  001246  6E38               	movwf	SetLED_State@state,c
   443  001248  EC8D  F009         	call	_SetLED_State	;wreg free
   444                           
   445                           ;main.c: 40: SetLED_State(BLUETOOTH_LED, LED_ON);
   446  00124C  C03F  F035         	movff	_BLUETOOTH_LED,SetLED_State@LED
   447  001250  C040  F036         	movff	_BLUETOOTH_LED+1,SetLED_State@LED+1
   448  001254  C041  F037         	movff	_BLUETOOTH_LED+2,SetLED_State@LED+2
   449  001258  0E00               	movlw	0
   450  00125A  6E39               	movwf	SetLED_State@state+1,c
   451  00125C  0E00               	movlw	0
   452  00125E  6E38               	movwf	SetLED_State@state,c
   453  001260  EC8D  F009         	call	_SetLED_State	;wreg free
   454  001264                     
   455                           ;main.c: 43: {
   456                           ;main.c: 44: ServiceTimers();
   457  001264  EC87  F007         	call	_ServiceTimers	;wreg free
   458  001268  D7FD               	goto	l91
   459  00126A                     __end_of_main:
   460                           	opt stack 0
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470 ;; *************** function _SetLED_State *****************
   471 ;; Defined at:
   472 ;;		line 104 in file "LED_UI.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  LED             3    3[COMRAM] struct STATUS_LED
   475 ;;  state           2    6[COMRAM] unsigned int 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   487 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   490 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   491 ;;Total ram usage:        5 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_SetTimerPeriodic
   496 ;;		_SetTimerStatus
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text1
   503  00131A                     __ptext1:
   504                           	opt stack 0
   505  00131A                     _SetLED_State:
   506                           	opt stack 29
   507                           
   508                           ;LED_UI.c: 106: LED.LED_STATE = state;
   509                           
   510                           ;incstack = 0
   511  00131A  C038  F035         	movff	SetLED_State@state,SetLED_State@LED
   512  00131E  C039  F036         	movff	SetLED_State@state+1,SetLED_State@LED+1
   513                           
   514                           ;LED_UI.c: 107: SetTimerPeriodic(LED.TIMEOUT_HANDLE, state);
   515  001322  C038  F032         	movff	SetLED_State@state,SetTimerPeriodic@periodic
   516  001326  C039  F033         	movff	SetLED_State@state+1,SetTimerPeriodic@periodic+1
   517  00132A  5037               	movf	SetLED_State@LED+2,w,c
   518  00132C  EC7B  F009         	call	_SetTimerPeriodic
   519                           
   520                           ;LED_UI.c: 108: SetTimerStatus(LED.TIMEOUT_HANDLE, 0x01);
   521  001330  0E01               	movlw	1
   522  001332  6E32               	movwf	SetTimerStatus@enabled,c
   523  001334  5037               	movf	SetLED_State@LED+2,w,c
   524  001336  EC35  F009         	call	_SetTimerStatus
   525  00133A  0012               	return		;funcret
   526  00133C                     __end_of_SetLED_State:
   527                           	opt stack 0
   528                           tblptru	equ	0xFF8
   529                           tblptrh	equ	0xFF7
   530                           tblptrl	equ	0xFF6
   531                           tablat	equ	0xFF5
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           
   537 ;; *************** function _SetTimerPeriodic *****************
   538 ;; Defined at:
   539 ;;		line 68 in file "Timeout.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  handle          1    wreg     enum E184
   542 ;;  periodic        2    0[COMRAM] unsigned int 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  handle          1    2[COMRAM] enum E184
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   554 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   557 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_SetLED_State
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text2
   568  0012F6                     __ptext2:
   569                           	opt stack 0
   570  0012F6                     _SetTimerPeriodic:
   571                           	opt stack 29
   572                           
   573                           ;incstack = 0
   574                           ;SetTimerPeriodic@handle stored from wreg
   575  0012F6  6E34               	movwf	SetTimerPeriodic@handle,c
   576                           
   577                           ;Timeout.c: 70: DEVICE_TIMEOUTS[handle].periodic = periodic;
   578  0012F8  5034               	movf	SetTimerPeriodic@handle,w,c
   579  0012FA  0D0B               	mullw	11
   580  0012FC  0E03               	movlw	3
   581  0012FE  26F3               	addwf	prodl,f,c
   582  001300  0E00               	movlw	0
   583  001302  22F4               	addwfc	prodh,f,c
   584  001304  0E03               	movlw	low _DEVICE_TIMEOUTS
   585  001306  24F3               	addwf	prodl,w,c
   586  001308  6ED9               	movwf	fsr2l,c
   587  00130A  0E00               	movlw	high _DEVICE_TIMEOUTS
   588  00130C  20F4               	addwfc	prodh,w,c
   589  00130E  6EDA               	movwf	fsr2h,c
   590  001310  C032  FFDE         	movff	SetTimerPeriodic@periodic,postinc2
   591  001314  C033  FFDD         	movff	SetTimerPeriodic@periodic+1,postdec2
   592  001318  0012               	return		;funcret
   593  00131A                     __end_of_SetTimerPeriodic:
   594                           	opt stack 0
   595                           tblptru	equ	0xFF8
   596                           tblptrh	equ	0xFF7
   597                           tblptrl	equ	0xFF6
   598                           tablat	equ	0xFF5
   599                           prodh	equ	0xFF4
   600                           prodl	equ	0xFF3
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           postdec1	equ	0xFE5
   604                           fsr1l	equ	0xFE1
   605                           postinc2	equ	0xFDE
   606                           postdec2	equ	0xFDD
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           
   610 ;; *************** function _ServiceTimers *****************
   611 ;; Defined at:
   612 ;;		line 80 in file "Timeout.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  handle          1    8[COMRAM] enum E184
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    2
   633 ;; This function calls:
   634 ;;		_LogTenHz
   635 ;;		_LogTwentyHz
   636 ;;		_SetTimerStatus
   637 ;;		_UpdateBluetooth_LED
   638 ;;		_UpdateMCU_LED
   639 ;;		_absoluteTimeDifference
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text3
   646  000F0E                     __ptext3:
   647                           	opt stack 0
   648  000F0E                     _ServiceTimers:
   649                           	opt stack 28
   650                           
   651                           ;Timeout.c: 82: TIMEOUT_HANDLE_t handle = 0;
   652                           
   653                           ;incstack = 0
   654  000F0E  0E00               	movlw	0
   655  000F10  6E3A               	movwf	ServiceTimers@handle,c
   656                           
   657                           ;Timeout.c: 84: for(handle=0;handle<4;handle++)
   658  000F12  0E00               	movlw	0
   659  000F14  6E3A               	movwf	ServiceTimers@handle,c
   660  000F16                     l1263:
   661  000F16  0E03               	movlw	3
   662  000F18  643A               	cpfsgt	ServiceTimers@handle,c
   663  000F1A  D001               	goto	l144
   664  000F1C  0012               	return	
   665  000F1E                     l144:
   666                           
   667                           ;Timeout.c: 85: {
   668                           ;Timeout.c: 86: if((0x01 == DEVICE_TIMEOUTS[handle].enabled) && (absoluteTimeDifference(
      +                          DEVICE_TIMEOUTS[handle].timeout_ref, _timer_tick) > DEVICE_TIMEOUTS[handle].periodic))
   669  000F1E  503A               	movf	ServiceTimers@handle,w,c
   670  000F20  0D0B               	mullw	11
   671  000F22  0E03               	movlw	low _DEVICE_TIMEOUTS
   672  000F24  24F3               	addwf	prodl,w,c
   673  000F26  6ED9               	movwf	fsr2l,c
   674  000F28  0E00               	movlw	high _DEVICE_TIMEOUTS
   675  000F2A  20F4               	addwfc	prodh,w,c
   676  000F2C  6EDA               	movwf	fsr2h,c
   677  000F2E  04DE               	decf	postinc2,w,c
   678  000F30  A4D8               	btfss	status,2,c
   679  000F32  D040               	goto	u269
   680  000F34  503A               	movf	ServiceTimers@handle,w,c
   681  000F36  0D0B               	mullw	11
   682  000F38  0E01               	movlw	1
   683  000F3A  26F3               	addwf	prodl,f,c
   684  000F3C  0E00               	movlw	0
   685  000F3E  22F4               	addwfc	prodh,f,c
   686  000F40  0E03               	movlw	low _DEVICE_TIMEOUTS
   687  000F42  24F3               	addwf	prodl,w,c
   688  000F44  6ED9               	movwf	fsr2l,c
   689  000F46  0E00               	movlw	high _DEVICE_TIMEOUTS
   690  000F48  20F4               	addwfc	prodh,w,c
   691  000F4A  6EDA               	movwf	fsr2h,c
   692  000F4C  CFDE F032          	movff	postinc2,absoluteTimeDifference@reference
   693  000F50  CFDD F033          	movff	postdec2,absoluteTimeDifference@reference+1
   694  000F54  C001  F034         	movff	__timer_tick,absoluteTimeDifference@comparand
   695  000F58  C002  F035         	movff	__timer_tick+1,absoluteTimeDifference@comparand+1
   696  000F5C  ECC7  F008         	call	_absoluteTimeDifference	;wreg free
   697  000F60  503A               	movf	ServiceTimers@handle,w,c
   698  000F62  0D0B               	mullw	11
   699  000F64  0E03               	movlw	3
   700  000F66  26F3               	addwf	prodl,f,c
   701  000F68  0E00               	movlw	0
   702  000F6A  22F4               	addwfc	prodh,f,c
   703  000F6C  0E03               	movlw	low _DEVICE_TIMEOUTS
   704  000F6E  24F3               	addwf	prodl,w,c
   705  000F70  6ED9               	movwf	fsr2l,c
   706  000F72  0E00               	movlw	high _DEVICE_TIMEOUTS
   707  000F74  20F4               	addwfc	prodh,w,c
   708  000F76  6EDA               	movwf	fsr2h,c
   709  000F78  5032               	movf	?_absoluteTimeDifference,w,c
   710  000F7A  5CDE               	subwf	postinc2,w,c
   711  000F7C  5033               	movf	?_absoluteTimeDifference+1,w,c
   712  000F7E  58DE               	subwfb	postinc2,w,c
   713  000F80  B0D8               	btfsc	status,0,c
   714  000F82  D018               	goto	u269
   715                           
   716                           ;Timeout.c: 87: {
   717                           ;Timeout.c: 88: DEVICE_TIMEOUTS[handle].callback();
   718  000F84  503A               	movf	ServiceTimers@handle,w,c
   719  000F86  0D0B               	mullw	11
   720  000F88  0E05               	movlw	5
   721  000F8A  26F3               	addwf	prodl,f,c
   722  000F8C  0E00               	movlw	0
   723  000F8E  22F4               	addwfc	prodh,f,c
   724  000F90  0E03               	movlw	low _DEVICE_TIMEOUTS
   725  000F92  24F3               	addwf	prodl,w,c
   726  000F94  6ED9               	movwf	fsr2l,c
   727  000F96  0E00               	movlw	high _DEVICE_TIMEOUTS
   728  000F98  20F4               	addwfc	prodh,w,c
   729  000F9A  6EDA               	movwf	fsr2h,c
   730  000F9C  D801               	call	u268
   731  000F9E  D00A               	goto	u269
   732  000FA0                     u268:
   733  000FA0  0005               	push	
   734  000FA2  6EFA               	movwf	pclath,c
   735  000FA4  50DE               	movf	postinc2,w,c
   736  000FA6  6EFD               	movwf	tosl,c
   737  000FA8  50DE               	movf	postinc2,w,c
   738  000FAA  6EFE               	movwf	tosh,c
   739  000FAC  50DE               	movf	postinc2,w,c
   740  000FAE  6EFF               	movwf	tosu,c
   741  000FB0  50FA               	movf	pclath,w,c
   742  000FB2  0012               	return		;indir
   743  000FB4                     u269:
   744                           
   745                           ;Timeout.c: 89: }
   746                           ;Timeout.c: 91: if(DEVICE_TIMEOUTS[handle].periodic > 0)
   747  000FB4  503A               	movf	ServiceTimers@handle,w,c
   748  000FB6  0D0B               	mullw	11
   749  000FB8  0E03               	movlw	3
   750  000FBA  26F3               	addwf	prodl,f,c
   751  000FBC  0E00               	movlw	0
   752  000FBE  22F4               	addwfc	prodh,f,c
   753  000FC0  0E03               	movlw	low _DEVICE_TIMEOUTS
   754  000FC2  24F3               	addwf	prodl,w,c
   755  000FC4  6ED9               	movwf	fsr2l,c
   756  000FC6  0E00               	movlw	high _DEVICE_TIMEOUTS
   757  000FC8  20F4               	addwfc	prodh,w,c
   758  000FCA  6EDA               	movwf	fsr2h,c
   759  000FCC  50DE               	movf	postinc2,w,c
   760  000FCE  10DE               	iorwf	postinc2,w,c
   761  000FD0  B4D8               	btfsc	status,2,c
   762  000FD2  D011               	goto	l147
   763                           
   764                           ;Timeout.c: 92: {
   765                           ;Timeout.c: 93: DEVICE_TIMEOUTS[handle].timeout_ref = _timer_tick;
   766  000FD4  503A               	movf	ServiceTimers@handle,w,c
   767  000FD6  0D0B               	mullw	11
   768  000FD8  0E01               	movlw	1
   769  000FDA  26F3               	addwf	prodl,f,c
   770  000FDC  0E00               	movlw	0
   771  000FDE  22F4               	addwfc	prodh,f,c
   772  000FE0  0E03               	movlw	low _DEVICE_TIMEOUTS
   773  000FE2  24F3               	addwf	prodl,w,c
   774  000FE4  6ED9               	movwf	fsr2l,c
   775  000FE6  0E00               	movlw	high _DEVICE_TIMEOUTS
   776  000FE8  20F4               	addwfc	prodh,w,c
   777  000FEA  6EDA               	movwf	fsr2h,c
   778  000FEC  C001  FFDE         	movff	__timer_tick,postinc2
   779  000FF0  C002  FFDD         	movff	__timer_tick+1,postdec2
   780                           
   781                           ;Timeout.c: 94: }
   782  000FF4  D005               	goto	l148
   783  000FF6                     l147:
   784                           
   785                           ;Timeout.c: 95: else
   786                           ;Timeout.c: 96: {
   787                           ;Timeout.c: 97: SetTimerStatus(handle, 0x00);
   788  000FF6  0E00               	movlw	0
   789  000FF8  6E32               	movwf	SetTimerStatus@enabled,c
   790  000FFA  503A               	movf	ServiceTimers@handle,w,c
   791  000FFC  EC35  F009         	call	_SetTimerStatus
   792  001000                     l148:
   793  001000  2A3A               	incf	ServiceTimers@handle,f,c
   794  001002  D789               	goto	l1263
   795  001004                     __end_of_ServiceTimers:
   796                           	opt stack 0
   797                           tosu	equ	0xFFF
   798                           tosh	equ	0xFFE
   799                           tosl	equ	0xFFD
   800                           pclath	equ	0xFFA
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           prodh	equ	0xFF4
   806                           prodl	equ	0xFF3
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           postdec1	equ	0xFE5
   810                           fsr1l	equ	0xFE1
   811                           postinc2	equ	0xFDE
   812                           postdec2	equ	0xFDD
   813                           fsr2h	equ	0xFDA
   814                           fsr2l	equ	0xFD9
   815                           status	equ	0xFD8
   816                           
   817 ;; *************** function _absoluteTimeDifference *****************
   818 ;; Defined at:
   819 ;;		line 109 in file "Timeout.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  reference       2    0[COMRAM] unsigned int 
   822 ;;  comparand       2    2[COMRAM] unsigned int 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  2    0[COMRAM] unsigned int 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   838 ;;Total ram usage:        6 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_ServiceTimers
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text4
   848  00118E                     __ptext4:
   849                           	opt stack 0
   850  00118E                     _absoluteTimeDifference:
   851                           	opt stack 29
   852                           
   853                           ;Timeout.c: 111: if(comparand < reference)
   854                           
   855                           ;incstack = 0
   856  00118E  5032               	movf	absoluteTimeDifference@reference,w,c
   857  001190  5C34               	subwf	absoluteTimeDifference@comparand,w,c
   858  001192  5033               	movf	absoluteTimeDifference@reference+1,w,c
   859  001194  5835               	subwfb	absoluteTimeDifference@comparand+1,w,c
   860  001196  B0D8               	btfsc	status,0,c
   861  001198  D013               	goto	l152
   862                           
   863                           ;Timeout.c: 112: {
   864                           ;Timeout.c: 113: return (60000 - reference) + comparand;
   865  00119A  C032  F036         	movff	absoluteTimeDifference@reference,??_absoluteTimeDifference
   866  00119E  C033  F037         	movff	absoluteTimeDifference@reference+1,??_absoluteTimeDifference+1
   867  0011A2  1E36               	comf	??_absoluteTimeDifference,f,c
   868  0011A4  1E37               	comf	??_absoluteTimeDifference+1,f,c
   869  0011A6  4A36               	infsnz	??_absoluteTimeDifference,f,c
   870  0011A8  2A37               	incf	??_absoluteTimeDifference+1,f,c
   871  0011AA  5034               	movf	absoluteTimeDifference@comparand,w,c
   872  0011AC  2636               	addwf	??_absoluteTimeDifference,f,c
   873  0011AE  5035               	movf	absoluteTimeDifference@comparand+1,w,c
   874  0011B0  2237               	addwfc	??_absoluteTimeDifference+1,f,c
   875  0011B2  0E60               	movlw	96
   876  0011B4  2436               	addwf	??_absoluteTimeDifference,w,c
   877  0011B6  6E32               	movwf	?_absoluteTimeDifference,c
   878  0011B8  0EEA               	movlw	234
   879  0011BA  2037               	addwfc	??_absoluteTimeDifference+1,w,c
   880  0011BC  6E33               	movwf	?_absoluteTimeDifference+1,c
   881                           
   882                           ;Timeout.c: 114: }
   883  0011BE  0012               	return	
   884  0011C0                     l152:
   885                           
   886                           ;Timeout.c: 115: else
   887                           ;Timeout.c: 116: {
   888                           ;Timeout.c: 117: return comparand - reference;
   889  0011C0  C032  F036         	movff	absoluteTimeDifference@reference,??_absoluteTimeDifference
   890  0011C4  C033  F037         	movff	absoluteTimeDifference@reference+1,??_absoluteTimeDifference+1
   891  0011C8  1E36               	comf	??_absoluteTimeDifference,f,c
   892  0011CA  1E37               	comf	??_absoluteTimeDifference+1,f,c
   893  0011CC  4A36               	infsnz	??_absoluteTimeDifference,f,c
   894  0011CE  2A37               	incf	??_absoluteTimeDifference+1,f,c
   895  0011D0  5034               	movf	absoluteTimeDifference@comparand,w,c
   896  0011D2  2436               	addwf	??_absoluteTimeDifference,w,c
   897  0011D4  6E32               	movwf	?_absoluteTimeDifference,c
   898  0011D6  5035               	movf	absoluteTimeDifference@comparand+1,w,c
   899  0011D8  2037               	addwfc	??_absoluteTimeDifference+1,w,c
   900  0011DA  6E33               	movwf	?_absoluteTimeDifference+1,c
   901  0011DC  0012               	return	
   902  0011DE                     __end_of_absoluteTimeDifference:
   903                           	opt stack 0
   904                           tosu	equ	0xFFF
   905                           tosh	equ	0xFFE
   906                           tosl	equ	0xFFD
   907                           pclath	equ	0xFFA
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           postinc2	equ	0xFDE
   919                           postdec2	equ	0xFDD
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function _LogTwentyHz *****************
   925 ;; Defined at:
   926 ;;		line 52 in file "Logger.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		None
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_InitLogger
   950 ;;		_ServiceTimers
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text5
   955  00138E                     __ptext5:
   956                           	opt stack 0
   957  00138E                     _LogTwentyHz:
   958                           	opt stack 29
   959                           
   960                           ;incstack = 0
   961  00138E  0012               	return		;funcret
   962  001390                     __end_of_LogTwentyHz:
   963                           	opt stack 0
   964                           tosu	equ	0xFFF
   965                           tosh	equ	0xFFE
   966                           tosl	equ	0xFFD
   967                           pclath	equ	0xFFA
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           prodh	equ	0xFF4
   973                           prodl	equ	0xFF3
   974                           postinc0	equ	0xFEE
   975                           wreg	equ	0xFE8
   976                           postdec1	equ	0xFE5
   977                           fsr1l	equ	0xFE1
   978                           postinc2	equ	0xFDE
   979                           postdec2	equ	0xFDD
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           status	equ	0xFD8
   983                           
   984 ;; *************** function _LogTenHz *****************
   985 ;; Defined at:
   986 ;;		line 40 in file "Logger.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		None
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_InitLogger
  1010 ;;		_ServiceTimers
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text6
  1015  001390                     __ptext6:
  1016                           	opt stack 0
  1017  001390                     _LogTenHz:
  1018                           	opt stack 29
  1019                           
  1020                           ;incstack = 0
  1021  001390  0012               	return		;funcret
  1022  001392                     __end_of_LogTenHz:
  1023                           	opt stack 0
  1024                           tosu	equ	0xFFF
  1025                           tosh	equ	0xFFE
  1026                           tosl	equ	0xFFD
  1027                           pclath	equ	0xFFA
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1l	equ	0xFE1
  1038                           postinc2	equ	0xFDE
  1039                           postdec2	equ	0xFDD
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function _UpdateBluetooth_LED *****************
  1045 ;; Defined at:
  1046 ;;		line 72 in file "LED_UI.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    1
  1067 ;; This function calls:
  1068 ;;		_SetTimerStatus
  1069 ;; This function is called by:
  1070 ;;		_InitLED_UI
  1071 ;;		_ServiceTimers
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text7
  1076  001004                     __ptext7:
  1077                           	opt stack 0
  1078  001004                     _UpdateBluetooth_LED:
  1079                           	opt stack 28
  1080                           
  1081                           ;LED_UI.c: 74: switch(BLUETOOTH_LED.LED_STATE)
  1082                           
  1083                           ;incstack = 0
  1084  001004  D01E               	goto	l194
  1085  001006                     
  1086                           ;LED_UI.c: 77: SetTimerStatus(BLUETOOTH_LED_TIMEOUT, 0x00);
  1087  001006  0E00               	movlw	0
  1088  001008  6E32               	movwf	SetTimerStatus@enabled,c
  1089  00100A  0E01               	movlw	1
  1090  00100C  EC35  F009         	call	_SetTimerStatus
  1091                           
  1092                           ;LED_UI.c: 78: do { LATAbits.LATA1 = 0; } while(0);
  1093  001010  9283               	bcf	3971,1,c	;volatile
  1094                           
  1095                           ;LED_UI.c: 79: break;
  1096  001012  0012               	return	
  1097  001014                     
  1098                           ;LED_UI.c: 82: SetTimerStatus(BLUETOOTH_LED_TIMEOUT, 0x00);
  1099  001014  0E00               	movlw	0
  1100  001016  6E32               	movwf	SetTimerStatus@enabled,c
  1101  001018  0E01               	movlw	1
  1102  00101A  EC35  F009         	call	_SetTimerStatus
  1103                           
  1104                           ;LED_UI.c: 83: do { LATAbits.LATA1 = 1; } while(0);
  1105  00101E  8283               	bsf	3971,1,c	;volatile
  1106                           
  1107                           ;LED_UI.c: 84: break;
  1108  001020  0012               	return	
  1109  001022                     
  1110                           ;LED_UI.c: 87: case LED_SLOW_FLASH:
  1111                           ;LED_UI.c: 88: do { LATAbits.LATA1 = ~LATAbits.LATA1; } while(0);
  1112  001022  A283               	btfss	3971,1,c	;volatile
  1113  001024  D002               	goto	u220
  1114  001026  0E01               	movlw	1
  1115  001028  D001               	goto	u226
  1116  00102A                     u220:
  1117  00102A  0E00               	movlw	0
  1118  00102C                     u226:
  1119  00102C  0AFF               	xorlw	255
  1120  00102E  6E34               	movwf	??_UpdateBluetooth_LED& (0+255),c
  1121  001030  4634               	rlncf	??_UpdateBluetooth_LED,f,c
  1122  001032  5083               	movf	3971,w,c	;volatile
  1123  001034  1834               	xorwf	??_UpdateBluetooth_LED,w,c
  1124  001036  0BFD               	andlw	-3
  1125  001038  1834               	xorwf	??_UpdateBluetooth_LED,w,c
  1126  00103A  6E83               	movwf	3971,c	;volatile
  1127                           
  1128                           ;LED_UI.c: 89: break;
  1129  00103C  0012               	return	
  1130  00103E                     
  1131                           ;LED_UI.c: 92: do { LATAbits.LATA1 = 0; } while(0);
  1132  00103E  9283               	bcf	3971,1,c	;volatile
  1133                           
  1134                           ;LED_UI.c: 94: }
  1135                           
  1136                           ;LED_UI.c: 93: break;
  1137  001040  0012               	return	
  1138  001042                     l194:
  1139  001042  C03F  F034         	movff	_BLUETOOTH_LED,??_UpdateBluetooth_LED
  1140  001046  C040  F035         	movff	_BLUETOOTH_LED+1,??_UpdateBluetooth_LED+1
  1141                           
  1142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1143                           ; Switch size 1, requested type "space"
  1144                           ; Number of cases is 2, Range of values is 0 to 1
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            7     4 (average)
  1148                           ;	Chosen strategy is simple_byte
  1149  00104A  5035               	movf	??_UpdateBluetooth_LED+1,w,c
  1150  00104C  0A00               	xorlw	0	; case 0
  1151  00104E  B4D8               	btfsc	status,2,c
  1152  001050  D004               	goto	l1429
  1153  001052  0A01               	xorlw	1	; case 1
  1154  001054  B4D8               	btfsc	status,2,c
  1155  001056  D00C               	goto	l1431
  1156  001058  D7F2               	goto	l206
  1157  00105A                     l1429:
  1158                           
  1159                           ; Switch size 1, requested type "space"
  1160                           ; Number of cases is 3, Range of values is 0 to 250
  1161                           ; switch strategies available:
  1162                           ; Name         Instructions Cycles
  1163                           ; simple_byte           10     6 (average)
  1164                           ;	Chosen strategy is simple_byte
  1165  00105A  5034               	movf	??_UpdateBluetooth_LED,w,c
  1166  00105C  0A00               	xorlw	0	; case 0
  1167  00105E  B4D8               	btfsc	status,2,c
  1168  001060  D7D9               	goto	l199
  1169  001062  0A01               	xorlw	1	; case 1
  1170  001064  B4D8               	btfsc	status,2,c
  1171  001066  D7CF               	goto	l195
  1172  001068  0AFB               	xorlw	251	; case 250
  1173  00106A  B4D8               	btfsc	status,2,c
  1174  00106C  D7DA               	goto	l202
  1175  00106E  D7E7               	goto	l206
  1176  001070                     l1431:
  1177                           
  1178                           ; Switch size 1, requested type "space"
  1179                           ; Number of cases is 1, Range of values is 250 to 250
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte            4     3 (average)
  1183                           ;	Chosen strategy is simple_byte
  1184  001070  5034               	movf	??_UpdateBluetooth_LED,w,c
  1185  001072  0AFA               	xorlw	250	; case 250
  1186  001074  D7FA               	goto	L1
  1187  001076                     __end_of_UpdateBluetooth_LED:
  1188                           	opt stack 0
  1189                           tosu	equ	0xFFF
  1190                           tosh	equ	0xFFE
  1191                           tosl	equ	0xFFD
  1192                           pclath	equ	0xFFA
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           prodh	equ	0xFF4
  1198                           prodl	equ	0xFF3
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec1	equ	0xFE5
  1202                           fsr1l	equ	0xFE1
  1203                           postinc2	equ	0xFDE
  1204                           postdec2	equ	0xFDD
  1205                           fsr2h	equ	0xFDA
  1206                           fsr2l	equ	0xFD9
  1207                           status	equ	0xFD8
  1208                           
  1209 ;; *************** function _UpdateMCU_LED *****************
  1210 ;; Defined at:
  1211 ;;		line 40 in file "LED_UI.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1229 ;;Total ram usage:        2 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    1
  1232 ;; This function calls:
  1233 ;;		_SetTimerStatus
  1234 ;; This function is called by:
  1235 ;;		_InitLED_UI
  1236 ;;		_ServiceTimers
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text8
  1241  001076                     __ptext8:
  1242                           	opt stack 0
  1243  001076                     _UpdateMCU_LED:
  1244                           	opt stack 28
  1245                           
  1246                           ;LED_UI.c: 42: switch(MCU_LED.LED_STATE)
  1247                           
  1248                           ;incstack = 0
  1249  001076  D01D               	goto	l176
  1250  001078                     
  1251                           ;LED_UI.c: 45: SetTimerStatus(MCU_LED_TIMEOUT, 0x00);
  1252  001078  0E00               	movlw	0
  1253  00107A  6E32               	movwf	SetTimerStatus@enabled,c
  1254  00107C  0E00               	movlw	0
  1255  00107E  EC35  F009         	call	_SetTimerStatus
  1256                           
  1257                           ;LED_UI.c: 46: do { LATAbits.LATA0 = 0; } while(0);
  1258  001082  9083               	bcf	3971,0,c	;volatile
  1259                           
  1260                           ;LED_UI.c: 47: break;
  1261  001084  0012               	return	
  1262  001086                     
  1263                           ;LED_UI.c: 50: SetTimerStatus(MCU_LED_TIMEOUT, 0x00);
  1264  001086  0E00               	movlw	0
  1265  001088  6E32               	movwf	SetTimerStatus@enabled,c
  1266  00108A  0E00               	movlw	0
  1267  00108C  EC35  F009         	call	_SetTimerStatus
  1268                           
  1269                           ;LED_UI.c: 51: do { LATAbits.LATA0 = 1; } while(0);
  1270  001090  8083               	bsf	3971,0,c	;volatile
  1271                           
  1272                           ;LED_UI.c: 52: break;
  1273  001092  0012               	return	
  1274  001094                     
  1275                           ;LED_UI.c: 55: case LED_SLOW_FLASH:
  1276                           ;LED_UI.c: 56: do { LATAbits.LATA0 = ~LATAbits.LATA0; } while(0);
  1277  001094  A083               	btfss	3971,0,c	;volatile
  1278  001096  D002               	goto	u210
  1279  001098  0E01               	movlw	1
  1280  00109A  D001               	goto	u216
  1281  00109C                     u210:
  1282  00109C  0E00               	movlw	0
  1283  00109E                     u216:
  1284  00109E  0AFF               	xorlw	255
  1285  0010A0  6E34               	movwf	??_UpdateMCU_LED& (0+255),c
  1286  0010A2  5083               	movf	3971,w,c	;volatile
  1287  0010A4  1834               	xorwf	??_UpdateMCU_LED,w,c
  1288  0010A6  0BFE               	andlw	-2
  1289  0010A8  1834               	xorwf	??_UpdateMCU_LED,w,c
  1290  0010AA  6E83               	movwf	3971,c	;volatile
  1291                           
  1292                           ;LED_UI.c: 57: break;
  1293  0010AC  0012               	return	
  1294  0010AE                     
  1295                           ;LED_UI.c: 60: do { LATAbits.LATA0 = 0; } while(0);
  1296  0010AE  9083               	bcf	3971,0,c	;volatile
  1297                           
  1298                           ;LED_UI.c: 62: }
  1299                           
  1300                           ;LED_UI.c: 61: break;
  1301  0010B0  0012               	return	
  1302  0010B2                     l176:
  1303  0010B2  C042  F034         	movff	_MCU_LED,??_UpdateMCU_LED
  1304  0010B6  C043  F035         	movff	_MCU_LED+1,??_UpdateMCU_LED+1
  1305                           
  1306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1307                           ; Switch size 1, requested type "space"
  1308                           ; Number of cases is 2, Range of values is 0 to 1
  1309                           ; switch strategies available:
  1310                           ; Name         Instructions Cycles
  1311                           ; simple_byte            7     4 (average)
  1312                           ;	Chosen strategy is simple_byte
  1313  0010BA  5035               	movf	??_UpdateMCU_LED+1,w,c
  1314  0010BC  0A00               	xorlw	0	; case 0
  1315  0010BE  B4D8               	btfsc	status,2,c
  1316  0010C0  D004               	goto	l1433
  1317  0010C2  0A01               	xorlw	1	; case 1
  1318  0010C4  B4D8               	btfsc	status,2,c
  1319  0010C6  D00C               	goto	l1435
  1320  0010C8  D7F2               	goto	l188
  1321  0010CA                     l1433:
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 3, Range of values is 0 to 250
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte           10     6 (average)
  1328                           ;	Chosen strategy is simple_byte
  1329  0010CA  5034               	movf	??_UpdateMCU_LED,w,c
  1330  0010CC  0A00               	xorlw	0	; case 0
  1331  0010CE  B4D8               	btfsc	status,2,c
  1332  0010D0  D7DA               	goto	l181
  1333  0010D2  0A01               	xorlw	1	; case 1
  1334  0010D4  B4D8               	btfsc	status,2,c
  1335  0010D6  D7D0               	goto	l177
  1336  0010D8  0AFB               	xorlw	251	; case 250
  1337  0010DA  B4D8               	btfsc	status,2,c
  1338  0010DC  D7DB               	goto	l184
  1339  0010DE  D7E7               	goto	l188
  1340  0010E0                     l1435:
  1341                           
  1342                           ; Switch size 1, requested type "space"
  1343                           ; Number of cases is 1, Range of values is 250 to 250
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte            4     3 (average)
  1347                           ;	Chosen strategy is simple_byte
  1348  0010E0  5034               	movf	??_UpdateMCU_LED,w,c
  1349  0010E2  0AFA               	xorlw	250	; case 250
  1350  0010E4  D7FA               	goto	L2
  1351  0010E6                     __end_of_UpdateMCU_LED:
  1352                           	opt stack 0
  1353                           tosu	equ	0xFFF
  1354                           tosh	equ	0xFFE
  1355                           tosl	equ	0xFFD
  1356                           pclath	equ	0xFFA
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           prodh	equ	0xFF4
  1362                           prodl	equ	0xFF3
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           postinc2	equ	0xFDE
  1368                           postdec2	equ	0xFDD
  1369                           fsr2h	equ	0xFDA
  1370                           fsr2l	equ	0xFD9
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _SetTimerStatus *****************
  1374 ;; Defined at:
  1375 ;;		line 55 in file "Timeout.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  handle          1    wreg     enum E184
  1378 ;;  enabled         1    0[COMRAM] unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  handle          1    1[COMRAM] enum E184
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1390 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_ServiceTimers
  1400 ;;		_UpdateMCU_LED
  1401 ;;		_UpdateBluetooth_LED
  1402 ;;		_SetLED_State
  1403 ;;		_EnableLogger
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text9
  1408  00126A                     __ptext9:
  1409                           	opt stack 0
  1410  00126A                     _SetTimerStatus:
  1411                           	opt stack 29
  1412                           
  1413                           ;incstack = 0
  1414                           ;SetTimerStatus@handle stored from wreg
  1415  00126A  6E33               	movwf	SetTimerStatus@handle,c
  1416                           
  1417                           ;Timeout.c: 57: DEVICE_TIMEOUTS[handle].enabled = enabled;
  1418  00126C  5033               	movf	SetTimerStatus@handle,w,c
  1419  00126E  0D0B               	mullw	11
  1420  001270  0E03               	movlw	low _DEVICE_TIMEOUTS
  1421  001272  24F3               	addwf	prodl,w,c
  1422  001274  6ED9               	movwf	fsr2l,c
  1423  001276  0E00               	movlw	high _DEVICE_TIMEOUTS
  1424  001278  20F4               	addwfc	prodh,w,c
  1425  00127A  6EDA               	movwf	fsr2h,c
  1426  00127C  C032  FFDF         	movff	SetTimerStatus@enabled,indf2
  1427                           
  1428                           ;Timeout.c: 58: DEVICE_TIMEOUTS[handle].timeout_ref = _timer_tick;
  1429  001280  5033               	movf	SetTimerStatus@handle,w,c
  1430  001282  0D0B               	mullw	11
  1431  001284  0E01               	movlw	1
  1432  001286  26F3               	addwf	prodl,f,c
  1433  001288  0E00               	movlw	0
  1434  00128A  22F4               	addwfc	prodh,f,c
  1435  00128C  0E03               	movlw	low _DEVICE_TIMEOUTS
  1436  00128E  24F3               	addwf	prodl,w,c
  1437  001290  6ED9               	movwf	fsr2l,c
  1438  001292  0E00               	movlw	high _DEVICE_TIMEOUTS
  1439  001294  20F4               	addwfc	prodh,w,c
  1440  001296  6EDA               	movwf	fsr2h,c
  1441  001298  C001  FFDE         	movff	__timer_tick,postinc2
  1442  00129C  C002  FFDD         	movff	__timer_tick+1,postdec2
  1443  0012A0  0012               	return		;funcret
  1444  0012A2                     __end_of_SetTimerStatus:
  1445                           	opt stack 0
  1446                           tosu	equ	0xFFF
  1447                           tosh	equ	0xFFE
  1448                           tosl	equ	0xFFD
  1449                           pclath	equ	0xFFA
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           prodh	equ	0xFF4
  1455                           prodl	equ	0xFF3
  1456                           postinc0	equ	0xFEE
  1457                           wreg	equ	0xFE8
  1458                           postdec1	equ	0xFE5
  1459                           fsr1l	equ	0xFE1
  1460                           indf2	equ	0xFDF
  1461                           postinc2	equ	0xFDE
  1462                           postdec2	equ	0xFDD
  1463                           fsr2h	equ	0xFDA
  1464                           fsr2l	equ	0xFD9
  1465                           status	equ	0xFD8
  1466                           
  1467 ;; *************** function _SYSTEM_Initialize *****************
  1468 ;; Defined at:
  1469 ;;		line 115 in file "mcc_generated_files/mcc.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		_OSCILLATOR_Initialize
  1492 ;;		_PIN_MANAGER_Initialize
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text10
  1499  001384                     __ptext10:
  1500                           	opt stack 0
  1501  001384                     _SYSTEM_Initialize:
  1502                           	opt stack 29
  1503                           
  1504                           ;mcc.c: 118: PIN_MANAGER_Initialize();
  1505                           
  1506                           ;incstack = 0
  1507  001384  EC9E  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  1508                           
  1509                           ;mcc.c: 119: OSCILLATOR_Initialize();
  1510  001388  EC9E  F009         	call	_OSCILLATOR_Initialize	;wreg free
  1511  00138C  0012               	return		;funcret
  1512  00138E                     __end_of_SYSTEM_Initialize:
  1513                           	opt stack 0
  1514                           tosu	equ	0xFFF
  1515                           tosh	equ	0xFFE
  1516                           tosl	equ	0xFFD
  1517                           pclath	equ	0xFFA
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           prodh	equ	0xFF4
  1523                           prodl	equ	0xFF3
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           postdec1	equ	0xFE5
  1527                           fsr1l	equ	0xFE1
  1528                           indf2	equ	0xFDF
  1529                           postinc2	equ	0xFDE
  1530                           postdec2	equ	0xFDD
  1531                           fsr2h	equ	0xFDA
  1532                           fsr2l	equ	0xFD9
  1533                           status	equ	0xFD8
  1534                           
  1535 ;; *************** function _PIN_MANAGER_Initialize *****************
  1536 ;; Defined at:
  1537 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_SYSTEM_Initialize
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text11
  1565  00113C                     __ptext11:
  1566                           	opt stack 0
  1567  00113C                     _PIN_MANAGER_Initialize:
  1568                           	opt stack 29
  1569                           
  1570                           ;pin_manager.c: 57: LATA = 0x00;
  1571                           
  1572                           ;incstack = 0
  1573  00113C  0E00               	movlw	0
  1574  00113E  6E83               	movwf	3971,c	;volatile
  1575                           
  1576                           ;pin_manager.c: 58: LATB = 0x00;
  1577  001140  0E00               	movlw	0
  1578  001142  6E84               	movwf	3972,c	;volatile
  1579                           
  1580                           ;pin_manager.c: 59: LATC = 0x00;
  1581  001144  0E00               	movlw	0
  1582  001146  6E85               	movwf	3973,c	;volatile
  1583                           
  1584                           ;pin_manager.c: 64: TRISA = 0xF0;
  1585  001148  0EF0               	movlw	240
  1586  00114A  6E88               	movwf	3976,c	;volatile
  1587                           
  1588                           ;pin_manager.c: 65: TRISB = 0xFF;
  1589  00114C  6889               	setf	3977,c	;volatile
  1590                           
  1591                           ;pin_manager.c: 66: TRISC = 0xC7;
  1592  00114E  0EC7               	movlw	199
  1593  001150  6E8A               	movwf	3978,c	;volatile
  1594                           
  1595                           ;pin_manager.c: 71: ANSELC = 0xC7;
  1596  001152  0EC7               	movlw	199
  1597  001154  010F               	movlb	15	; () banked
  1598  001156  6F21               	movwf	33,b	;volatile
  1599                           
  1600                           ; BSR set to: 15
  1601                           ;pin_manager.c: 72: ANSELB = 0xFF;
  1602  001158  010F               	movlb	15	; () banked
  1603  00115A  6919               	setf	25,b	;volatile
  1604                           
  1605                           ;pin_manager.c: 73: ANSELA = 0xF0;
  1606  00115C  0EF0               	movlw	240
  1607  00115E  010F               	movlb	15	; () banked
  1608  001160  6F11               	movwf	17,b	;volatile
  1609                           
  1610                           ;pin_manager.c: 78: WPUE = 0x00;
  1611  001162  0E00               	movlw	0
  1612  001164  010F               	movlb	15	; () banked
  1613  001166  6F2D               	movwf	45,b	;volatile
  1614                           
  1615                           ;pin_manager.c: 79: WPUB = 0x00;
  1616  001168  0E00               	movlw	0
  1617  00116A  010F               	movlb	15	; () banked
  1618  00116C  6F18               	movwf	24,b	;volatile
  1619                           
  1620                           ;pin_manager.c: 80: WPUA = 0x00;
  1621  00116E  0E00               	movlw	0
  1622  001170  010F               	movlb	15	; () banked
  1623  001172  6F10               	movwf	16,b	;volatile
  1624                           
  1625                           ;pin_manager.c: 81: WPUC = 0x00;
  1626  001174  0E00               	movlw	0
  1627  001176  010F               	movlb	15	; () banked
  1628  001178  6F20               	movwf	32,b	;volatile
  1629                           
  1630                           ;pin_manager.c: 86: ODCONA = 0x00;
  1631  00117A  0E00               	movlw	0
  1632  00117C  010F               	movlb	15	; () banked
  1633  00117E  6F0F               	movwf	15,b	;volatile
  1634                           
  1635                           ;pin_manager.c: 87: ODCONB = 0x00;
  1636  001180  0E00               	movlw	0
  1637  001182  010F               	movlb	15	; () banked
  1638  001184  6F17               	movwf	23,b	;volatile
  1639                           
  1640                           ;pin_manager.c: 88: ODCONC = 0x00;
  1641  001186  0E00               	movlw	0
  1642  001188  010F               	movlb	15	; () banked
  1643  00118A  6F1F               	movwf	31,b	;volatile
  1644                           
  1645                           ; BSR set to: 15
  1646  00118C  0012               	return		;funcret
  1647  00118E                     __end_of_PIN_MANAGER_Initialize:
  1648                           	opt stack 0
  1649                           tosu	equ	0xFFF
  1650                           tosh	equ	0xFFE
  1651                           tosl	equ	0xFFD
  1652                           pclath	equ	0xFFA
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           postdec1	equ	0xFE5
  1662                           fsr1l	equ	0xFE1
  1663                           indf2	equ	0xFDF
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _OSCILLATOR_Initialize *****************
  1671 ;; Defined at:
  1672 ;;		line 122 in file "mcc_generated_files/mcc.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; This function calls:
  1693 ;;		Nothing
  1694 ;; This function is called by:
  1695 ;;		_SYSTEM_Initialize
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text12
  1700  00133C                     __ptext12:
  1701                           	opt stack 0
  1702  00133C                     _OSCILLATOR_Initialize:
  1703                           	opt stack 29
  1704                           
  1705                           ;mcc.c: 125: OSCCON1 = 0x60;
  1706                           
  1707                           ; BSR set to: 15
  1708                           ;incstack = 0
  1709  00133C  0E60               	movlw	96
  1710  00133E  010E               	movlb	14	; () banked
  1711  001340  6FD8               	movwf	216,b	;volatile
  1712                           
  1713                           ;mcc.c: 127: OSCCON3 = 0x00;
  1714  001342  0E00               	movlw	0
  1715  001344  010E               	movlb	14	; () banked
  1716  001346  6FDA               	movwf	218,b	;volatile
  1717                           
  1718                           ;mcc.c: 129: OSCEN = 0x00;
  1719  001348  0E00               	movlw	0
  1720  00134A  010E               	movlb	14	; () banked
  1721  00134C  6FDC               	movwf	220,b	;volatile
  1722                           
  1723                           ;mcc.c: 131: OSCFRQ = 0x08;
  1724  00134E  0E08               	movlw	8
  1725  001350  010E               	movlb	14	; () banked
  1726  001352  6FDE               	movwf	222,b	;volatile
  1727                           
  1728                           ;mcc.c: 133: OSCTUNE = 0x00;
  1729  001354  0E00               	movlw	0
  1730  001356  010E               	movlb	14	; () banked
  1731  001358  6FDD               	movwf	221,b	;volatile
  1732                           
  1733                           ; BSR set to: 14
  1734  00135A  0012               	return		;funcret
  1735  00135C                     __end_of_OSCILLATOR_Initialize:
  1736                           	opt stack 0
  1737                           tosu	equ	0xFFF
  1738                           tosh	equ	0xFFE
  1739                           tosl	equ	0xFFD
  1740                           pclath	equ	0xFFA
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           postinc2	equ	0xFDE
  1753                           postdec2	equ	0xFDD
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _InitTimer *****************
  1759 ;; Defined at:
  1760 ;;		line 26 in file "Timeout.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    1
  1781 ;; This function calls:
  1782 ;;		_memset
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text13
  1789  00135C                     __ptext13:
  1790                           	opt stack 0
  1791  00135C                     _InitTimer:
  1792                           	opt stack 29
  1793                           
  1794                           ;Timeout.c: 28: memset(DEVICE_TIMEOUTS, 0, sizeof(TIMEOUT_t));
  1795                           
  1796                           ; BSR set to: 14
  1797                           ;incstack = 0
  1798  00135C  0E03               	movlw	low _DEVICE_TIMEOUTS
  1799  00135E  6E32               	movwf	memset@p1,c
  1800  001360  0E00               	movlw	high _DEVICE_TIMEOUTS
  1801  001362  6E33               	movwf	memset@p1+1,c
  1802  001364  0E00               	movlw	0
  1803  001366  6E35               	movwf	memset@c+1,c
  1804  001368  0E00               	movlw	0
  1805  00136A  6E34               	movwf	memset@c,c
  1806  00136C  0E00               	movlw	0
  1807  00136E  6E37               	movwf	memset@n+1,c
  1808  001370  0E0B               	movlw	11
  1809  001372  6E36               	movwf	memset@n,c
  1810  001374  EC51  F009         	call	_memset	;wreg free
  1811  001378  0012               	return		;funcret
  1812  00137A                     __end_of_InitTimer:
  1813                           	opt stack 0
  1814                           tosu	equ	0xFFF
  1815                           tosh	equ	0xFFE
  1816                           tosl	equ	0xFFD
  1817                           pclath	equ	0xFFA
  1818                           tblptru	equ	0xFF8
  1819                           tblptrh	equ	0xFF7
  1820                           tblptrl	equ	0xFF6
  1821                           tablat	equ	0xFF5
  1822                           prodh	equ	0xFF4
  1823                           prodl	equ	0xFF3
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postdec1	equ	0xFE5
  1827                           fsr1l	equ	0xFE1
  1828                           indf2	equ	0xFDF
  1829                           postinc2	equ	0xFDE
  1830                           postdec2	equ	0xFDD
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _memset *****************
  1836 ;; Defined at:
  1837 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\memset.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;  p1              2    0[COMRAM] PTR void 
  1840 ;;		 -> DEVICE_TIMEOUTS(44), 
  1841 ;;  c               2    2[COMRAM] int 
  1842 ;;  n               2    4[COMRAM] unsigned int 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  p               2    6[COMRAM] PTR unsigned char 
  1845 ;;		 -> DEVICE_TIMEOUTS(44), 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2    0[COMRAM] PTR void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1855 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;Total ram usage:        8 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_InitTimer
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text14
  1869  0012A2                     __ptext14:
  1870                           	opt stack 0
  1871  0012A2                     _memset:
  1872                           	opt stack 29
  1873                           
  1874                           ;incstack = 0
  1875  0012A2  C032  F038         	movff	memset@p1,memset@p
  1876  0012A6  C033  F039         	movff	memset@p1+1,memset@p+1
  1877  0012AA  D008               	goto	l685
  1878  0012AC                     l1183:
  1879  0012AC  C038  FFD9         	movff	memset@p,fsr2l
  1880  0012B0  C039  FFDA         	movff	memset@p+1,fsr2h
  1881  0012B4  C034  FFDF         	movff	memset@c,indf2
  1882  0012B8  4A38               	infsnz	memset@p,f,c
  1883  0012BA  2A39               	incf	memset@p+1,f,c
  1884  0012BC                     l685:
  1885  0012BC  0636               	decf	memset@n,f,c
  1886  0012BE  A0D8               	btfss	status,0,c
  1887  0012C0  0637               	decf	memset@n+1,f,c
  1888  0012C2  2836               	incf	memset@n,w,c
  1889  0012C4  E1F3               	bnz	l1183
  1890  0012C6  2837               	incf	memset@n+1,w,c
  1891  0012C8  B4D8               	btfsc	status,2,c
  1892  0012CA  0012               	return	
  1893  0012CC  D7EF               	goto	l686
  1894  0012CE                     __end_of_memset:
  1895                           	opt stack 0
  1896                           tosu	equ	0xFFF
  1897                           tosh	equ	0xFFE
  1898                           tosl	equ	0xFFD
  1899                           pclath	equ	0xFFA
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           prodh	equ	0xFF4
  1905                           prodl	equ	0xFF3
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1l	equ	0xFE1
  1910                           indf2	equ	0xFDF
  1911                           postinc2	equ	0xFDE
  1912                           postdec2	equ	0xFDD
  1913                           fsr2h	equ	0xFDA
  1914                           fsr2l	equ	0xFD9
  1915                           status	equ	0xFD8
  1916                           
  1917 ;; *************** function _InitDeviceConfig *****************
  1918 ;; Defined at:
  1919 ;;		line 28 in file "NonVolatileMemory.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    1
  1940 ;; This function calls:
  1941 ;;		_memcpy
  1942 ;; This function is called by:
  1943 ;;		_main
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text15
  1948  0012CE                     __ptext15:
  1949                           	opt stack 0
  1950  0012CE                     _InitDeviceConfig:
  1951                           	opt stack 29
  1952                           
  1953                           ;NonVolatileMemory.c: 30: memcpy((uint8_t*)&DEVICE_CONFIG, DEFAULT_DEVICE_CONFIG, sizeof
      +                          (DEVICE_CONFIG_t));
  1954                           
  1955                           ;incstack = 0
  1956  0012CE  0E2F               	movlw	low _DEVICE_CONFIG
  1957  0012D0  6E32               	movwf	memcpy@d1,c
  1958  0012D2  0E00               	movlw	high _DEVICE_CONFIG
  1959  0012D4  6E33               	movwf	memcpy@d1+1,c
  1960  0012D6  0E09               	movlw	low _DEFAULT_DEVICE_CONFIG
  1961  0012D8  6E34               	movwf	memcpy@s1,c
  1962  0012DA  0E0F               	movlw	high _DEFAULT_DEVICE_CONFIG
  1963  0012DC  6E35               	movwf	memcpy@s1+1,c
  1964  0012DE  5034               	movf	memcpy@s1,w,c
  1965  0012E0  1035               	iorwf	memcpy@s1+1,w,c
  1966  0012E2  A4D8               	btfss	status,2,c
  1967  0012E4  0E00               	movlw	low (__mediumconst shr (0+16))
  1968  0012E6  6E36               	movwf	memcpy@s1+2,c
  1969  0012E8  0E00               	movlw	0
  1970  0012EA  6E38               	movwf	memcpy@n+1,c
  1971  0012EC  0E03               	movlw	3
  1972  0012EE  6E37               	movwf	memcpy@n,c
  1973  0012F0  EC73  F008         	call	_memcpy	;wreg free
  1974  0012F4  0012               	return		;funcret
  1975  0012F6                     __end_of_InitDeviceConfig:
  1976                           	opt stack 0
  1977                           tosu	equ	0xFFF
  1978                           tosh	equ	0xFFE
  1979                           tosl	equ	0xFFD
  1980                           pclath	equ	0xFFA
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1l	equ	0xFE1
  1991                           indf2	equ	0xFDF
  1992                           postinc2	equ	0xFDE
  1993                           postdec2	equ	0xFDD
  1994                           fsr2h	equ	0xFDA
  1995                           fsr2l	equ	0xFD9
  1996                           status	equ	0xFD8
  1997                           
  1998 ;; *************** function _memcpy *****************
  1999 ;; Defined at:
  2000 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\memcpy.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  d1              2    0[COMRAM] PTR void 
  2003 ;;		 -> ErrorLog(60), PID_CHANNEL_CONFIG(160), DEVICE_CONFIG(3), 
  2004 ;;  s1              3    2[COMRAM] PTR const void 
  2005 ;;		 -> ROM(131071), DEFAULT_DEVICE_CONFIG(3), DEFAULT_PID_CHANNEL_CONFIG(8), 
  2006 ;;  n               2    5[COMRAM] unsigned int 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  s               3    7[COMRAM] PTR const unsigned char 
  2009 ;;		 -> ROM(131071), DEFAULT_DEVICE_CONFIG(3), DEFAULT_PID_CHANNEL_CONFIG(8), 
  2010 ;;  d               2   10[COMRAM] PTR unsigned char 
  2011 ;;		 -> ErrorLog(60), PID_CHANNEL_CONFIG(160), DEVICE_CONFIG(3), 
  2012 ;;  tmp             1   12[COMRAM] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  2    0[COMRAM] PTR void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2022 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2025 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2026 ;;Total ram usage:       13 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_InitDeviceConfig
  2032 ;;		_ResetAllConfig
  2033 ;;		_ClearErrorCodes
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text16
  2038  0010E6                     __ptext16:
  2039                           	opt stack 0
  2040  0010E6                     _memcpy:
  2041                           	opt stack 29
  2042                           
  2043                           ;incstack = 0
  2044  0010E6  C034  F039         	movff	memcpy@s1,memcpy@s
  2045  0010EA  C035  F03A         	movff	memcpy@s1+1,memcpy@s+1
  2046  0010EE  C036  F03B         	movff	memcpy@s1+2,memcpy@s+2
  2047  0010F2  C032  F03C         	movff	memcpy@d1,memcpy@d
  2048  0010F6  C033  F03D         	movff	memcpy@d1+1,memcpy@d+1
  2049  0010FA  D017               	goto	l679
  2050  0010FC                     l1171:
  2051  0010FC  C039  FFF6         	movff	memcpy@s,tblptrl
  2052  001100  C03A  FFF7         	movff	memcpy@s+1,tblptrh
  2053  001104  C03B  FFF8         	movff	memcpy@s+2,tblptru
  2054  001108  0008               	tblrd		*
  2055  00110A  CFF5 F03E          	movff	tablat,memcpy@tmp
  2056  00110E  0E01               	movlw	1
  2057  001110  2639               	addwf	memcpy@s,f,c
  2058  001112  0E00               	movlw	0
  2059  001114  223A               	addwfc	memcpy@s+1,f,c
  2060  001116  0E00               	movlw	0
  2061  001118  223B               	addwfc	memcpy@s+2,f,c
  2062  00111A  C03C  FFD9         	movff	memcpy@d,fsr2l
  2063  00111E  C03D  FFDA         	movff	memcpy@d+1,fsr2h
  2064  001122  C03E  FFDF         	movff	memcpy@tmp,indf2
  2065  001126  4A3C               	infsnz	memcpy@d,f,c
  2066  001128  2A3D               	incf	memcpy@d+1,f,c
  2067  00112A                     l679:
  2068  00112A  0637               	decf	memcpy@n,f,c
  2069  00112C  A0D8               	btfss	status,0,c
  2070  00112E  0638               	decf	memcpy@n+1,f,c
  2071  001130  2837               	incf	memcpy@n,w,c
  2072  001132  E1E4               	bnz	l1171
  2073  001134  2838               	incf	memcpy@n+1,w,c
  2074  001136  B4D8               	btfsc	status,2,c
  2075  001138  0012               	return	
  2076  00113A  D7E0               	goto	l680
  2077  00113C                     __end_of_memcpy:
  2078                           	opt stack 0
  2079                           tosu	equ	0xFFF
  2080                           tosh	equ	0xFFE
  2081                           tosl	equ	0xFFD
  2082                           pclath	equ	0xFFA
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           indf2	equ	0xFDF
  2094                           postinc2	equ	0xFDE
  2095                           postdec2	equ	0xFDD
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           tosu	equ	0xFFF
  2100                           tosh	equ	0xFFE
  2101                           tosl	equ	0xFFD
  2102                           pclath	equ	0xFFA
  2103                           tblptru	equ	0xFF8
  2104                           tblptrh	equ	0xFF7
  2105                           tblptrl	equ	0xFF6
  2106                           tablat	equ	0xFF5
  2107                           prodh	equ	0xFF4
  2108                           prodl	equ	0xFF3
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           postinc2	equ	0xFDE
  2115                           postdec2	equ	0xFDD
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120                           	psect	text17
  2121  000000                     __ptext17:
  2122                           	opt stack 0
  2123                           tosu	equ	0xFFF
  2124                           tosh	equ	0xFFE
  2125                           tosl	equ	0xFFD
  2126                           pclath	equ	0xFFA
  2127                           tblptru	equ	0xFF8
  2128                           tblptrh	equ	0xFF7
  2129                           tblptrl	equ	0xFF6
  2130                           tablat	equ	0xFF5
  2131                           prodh	equ	0xFF4
  2132                           prodl	equ	0xFF3
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           indf2	equ	0xFDF
  2138                           postinc2	equ	0xFDE
  2139                           postdec2	equ	0xFDD
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144                           	psect	rparam
  2145  0000                     tosu	equ	0xFFF
  2146                           tosh	equ	0xFFE
  2147                           tosl	equ	0xFFD
  2148                           pclath	equ	0xFFA
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           postinc0	equ	0xFEE
  2156                           wreg	equ	0xFE8
  2157                           postdec1	equ	0xFE5
  2158                           fsr1l	equ	0xFE1
  2159                           indf2	equ	0xFDF
  2160                           postinc2	equ	0xFDE
  2161                           postdec2	equ	0xFDD
  2162                           fsr2h	equ	0xFDA
  2163                           fsr2l	equ	0xFD9
  2164                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    11
    Data        10
    BSS         269
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      72
    BANK0           160      0      60
    BANK1           256      0     160
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    memset@p	PTR unsigned char  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    memcpy@d1	PTR void  size(2) Largest target is 160
		 -> ErrorLog(BANK0[60]), PID_CHANNEL_CONFIG(BANK1[160]), DEVICE_CONFIG(COMRAM[3]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 160
		 -> ErrorLog(BANK0[60]), PID_CHANNEL_CONFIG(BANK1[160]), DEVICE_CONFIG(COMRAM[3]), 

    memcpy@s1	PTR const void  size(3) Largest target is 131071
		 -> ROM(CODE[131071]), DEFAULT_DEVICE_CONFIG(CODE[3]), DEFAULT_PID_CHANNEL_CONFIG(CODE[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 131071
		 -> ROM(CODE[131071]), DEFAULT_DEVICE_CONFIG(CODE[3]), DEFAULT_PID_CHANNEL_CONFIG(CODE[8]), 

    S183TIMEOUT_STRUCT$arg	PTR void  size(2) Largest target is 0

    DEVICE_TIMEOUTS.arg	PTR void  size(2) Largest target is 0

    S183TIMEOUT_STRUCT$callback	PTR FTN()void  size(3) Largest target is 1
		 -> LogTwentyHz(), LogTenHz(), UpdateBluetooth_LED(), UpdateMCU_LED(), 

    DEVICE_TIMEOUTS.callback	PTR FTN()void  size(3) Largest target is 1
		 -> LogTwentyHz(), LogTenHz(), UpdateBluetooth_LED(), UpdateMCU_LED(), 

    sp__memset	PTR void  size(2) Largest target is 44
		 -> DEVICE_TIMEOUTS(COMRAM[44]), 

    sp__memcpy	PTR void  size(2) Largest target is 160
		 -> ErrorLog(BANK0[60]), PID_CHANNEL_CONFIG(BANK1[160]), DEVICE_CONFIG(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _SetLED_State->_SetTimerPeriodic
    _ServiceTimers->_absoluteTimeDifference
    _UpdateMCU_LED->_SetTimerStatus
    _UpdateBluetooth_LED->_SetTimerStatus
    _InitTimer->_memset
    _InitDeviceConfig->_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5075
                   _InitDeviceConfig
                          _InitTimer
                  _SYSTEM_Initialize
                      _ServiceTimers
                       _SetLED_State
 ---------------------------------------------------------------------------------
 (1) _SetLED_State                                         5     0      5    1189
                                              3 COMRAM     5     0      5
                   _SetTimerPeriodic
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _SetTimerPeriodic                                     3     1      2     120
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ServiceTimers                                        3     3      0    2507
                                              6 COMRAM     3     3      0
                           _LogTenHz *
                        _LogTwentyHz *
                     _SetTimerStatus
                _UpdateBluetooth_LED *
                      _UpdateMCU_LED *
             _absoluteTimeDifference
 ---------------------------------------------------------------------------------
 (2) _absoluteTimeDifference                               6     2      4     284
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _UpdateMCU_LED                                        2     2      0     674
                                              2 COMRAM     2     2      0
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _UpdateBluetooth_LED                                  2     2      0     674
                                              2 COMRAM     2     2      0
                     _SetTimerStatus
 ---------------------------------------------------------------------------------
 (2) _SetTimerStatus                                       2     1      1     674
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _LogTwentyHz                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LogTenHz                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimer                                            0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _InitDeviceConfig                                     0     0      0    1055
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              13     6      7    1055
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitDeviceConfig
     _memcpy
   _InitTimer
     _memset
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _ServiceTimers
     _LogTenHz *
     _LogTwentyHz *
     _SetTimerStatus *
     _UpdateBluetooth_LED *
       _SetTimerStatus
     _UpdateMCU_LED *
       _SetTimerStatus
     _absoluteTimeDifference *
   _SetLED_State
     _SetTimerPeriodic
     _SetTimerStatus

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      A0       8       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      48       1       75.8%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124       6        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Nov 08 18:27:45 2017

            __end_of_SetTimerStatus 12A2                         __CFG_CP$OFF 000000  
                                l91 1264                         __CFG_LVP$ON 000000  
                               l202 1022                                 l206 103E  
                               l152 11C0                                 l144 0F1E  
                               l147 0FF6                                 l148 1000  
                               l181 1086                                 l176 10B2  
                               l184 1094                                 l177 1078  
                               l194 1042                                 l195 1006  
                               l188 10AE                                 l199 1014  
                               l680 10FC                                 l685 12BC  
                               l686 12AC                                 l679 112A  
                               u210 109C                                 u220 102A  
                               u216 109E                                 u226 102C  
                      __CFG_CPD$OFF 000000                                 u268 0FA0  
                               u269 0FB4                                 prod 000FF3  
                               tosl 000FFD                                 wreg 000FE8  
      __size_of_UpdateBluetooth_LED 0072                        __CFG_ZCD$OFF 000000  
                              l1171 10FC                                l1183 12AC  
                              l1431 1070                                l1263 0F16  
                              l1433 10CA                                l1435 10E0  
                              l1429 105A                                _LATA 000F83  
                              _LATB 000F84                                _LATC 000F85  
                              _WPUA 000F10                                _WPUB 000F18  
                              _WPUC 000F20                                _WPUE 000F2D  
                     __CFG_FCMEN$ON 000000                                _main 1228  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
                     _TWENTY_HZ_LOG 0045                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                     __CFG_CSWEN$ON 000000                        ___param_bank 000000  
                   ?_SetTimerStatus 0032     absoluteTimeDifference@comparand 0034  
                     __CFG_SCANE$ON 000000      __size_of_OSCILLATOR_Initialize 0020  
     __end_of_OSCILLATOR_Initialize 135C                   SetLED_State@state 0038  
                             ?_main 0032                       __CFG_WDTE$OFF 000000  
                    __CFG_DEBUG$OFF 000000                 ServiceTimers@handle 003A  
                     ??_LogTwentyHz 0032                               _OSCEN 000EDC  
                             _TRISA 000F88                               _TRISB 000F89  
                             _TRISC 000F8A                       __CFG_WRT0$OFF 000000  
                     __CFG_WRT1$OFF 000000                       __CFG_WRT2$OFF 000000  
                     __CFG_WRT3$OFF 000000                       __CFG_WRT4$OFF 000000  
                     __CFG_WRT5$OFF 000000                       __CFG_WRT6$OFF 000000  
                     __CFG_WRT7$OFF 000000                      __CFG_EBTR0$OFF 000000  
                    __CFG_EBTR1$OFF 000000                      __CFG_EBTR2$OFF 000000  
                    __CFG_EBTR3$OFF 000000                      __CFG_EBTR4$OFF 000000  
                    __CFG_EBTR5$OFF 000000                      __CFG_EBTR6$OFF 000000  
                    __CFG_EBTR7$OFF 000000                       __CFG_WRTB$OFF 000000  
                     __CFG_WRTC$OFF 000000                       __CFG_WRTD$OFF 000000  
   absoluteTimeDifference@reference 0032                      __CFG_EBTRB$OFF 000000  
                     ?_SetLED_State 0035            ??_absoluteTimeDifference 0036  
                __CFG_MCLRE$EXTMCLR 000000                               pclath 000FFA  
                             tablat 000FF5                               status 000FD8  
                   __initialization 11DE                        __end_of_main 126A  
                  __end_of_LogTenHz 1392                              ??_main 003F  
                     __activetblptr 000003                      ??_SetLED_State 003A  
               __end_of_LogTwentyHz 1390                              _ANSELA 000F11  
                            _ANSELB 000F19                              _ANSELC 000F21  
                            _ODCONA 000F0F                              _ODCONB 000F17  
                            _ODCONC 000F1F                      __CFG_WDTCCS$SC 000000  
                            _OSCFRQ 000EDE                              _NVMDAT 000F80  
                __size_of_InitTimer 001E                              _NVFlag FFFE  
                  _InitDeviceConfig 12CE                      __CFG_PWRTE$OFF 000000  
                    __CFG_XINST$OFF 000000                      __CFG_STVREN$ON 000000  
                            _memcpy 10E6                              _memset 12A2  
                            clear_0 1204                              clear_1 1210  
                            clear_2 121C               __end_of_ServiceTimers 1004  
          SetTimerPeriodic@periodic 0032                        __pdataCOMRAM 003F  
                      __mediumconst 0000                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
   __size_of_absoluteTimeDifference 0050  __end_of_DEFAULT_PID_CHANNEL_CONFIG 0F09  
        _DEFAULT_PID_CHANNEL_CONFIG 0F01                   _SYSTEM_Initialize 1384  
                        __accesstop 0060             __end_of__initialization 1222  
                ?_SYSTEM_Initialize 0032                       ___rparam_used 000001  
                 ?_SetTimerPeriodic 0032                 _UpdateBluetooth_LED 1004  
                   SetLED_State@LED 0035                      __pcstackCOMRAM 0032  
                ??_SetTimerPeriodic 0034                 ??_SYSTEM_Initialize 0032  
                 __end_of_InitTimer 137A                         _LogTwentyHz 138E  
              ?_UpdateBluetooth_LED 0032           __end_of_SYSTEM_Initialize 138E  
                        __pbssBANK0 0060                          __pbssBANK1 0100  
                         ?_LogTenHz 0032               __end_of_UpdateMCU_LED 10E6  
                  ??_SetTimerStatus 0033                __end_of_SetLED_State 133C  
            _absoluteTimeDifference 118E                     __CFG_PPS1WAY$ON 000000  
                           ?_memcpy 0032                             ?_memset 0032  
                   __p_NVFlag_const FFFE               ??_UpdateBluetooth_LED 0034  
                           _MCU_LED 0042                             _OSCCON1 000ED8  
                           _OSCCON3 000EDA                             _NVMADRH 000F7F  
                           _NVMADRL 000F7E                             _OSCTUNE 000EDD  
                           _NVMCON1 000F81                             _NVMCON2 000F82  
                        ??_LogTenHz 0032                             __Hparam 0000  
                           __Lparam 0000          __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                      __psmallconst 0F00                             __pcinit 11DE  
                   __size_of_memcpy 0056                     __size_of_memset 002C  
                           __ramtop 0F00                             __ptext0 1228  
                           __ptext1 131A                             __ptext2 12F6  
                           __ptext3 0F0E                             __ptext4 118E  
                           __ptext5 138E                             __ptext6 1390  
                           __ptext7 1004                             __ptext8 1076  
                           __ptext9 126A               _OSCILLATOR_Initialize 133C  
                _PID_CHANNEL_CONFIG 0100            __end_of_InitDeviceConfig 12F6  
              SetTimerStatus@handle 0033            ??_PIN_MANAGER_Initialize 0032  
        __size_of_SYSTEM_Initialize 000A                end_of_initialization 1222  
                           memcpy@d 003C                             memcpy@n 0037  
                           memcpy@s 0039                             memset@c 0034  
                           memset@n 0036                             memset@p 0038  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
     __end_of_DEFAULT_DEVICE_CONFIG 0F0C               __CFG_WDTCPS$WDTCPS_31 000000  
                     _DEVICE_CONFIG 002F                 _NVFlag_absconstaddr 01FFFE  
                  __CFG_FEXTOSC$OFF 000000               __size_of_SetLED_State 0022  
                    __end_of_NVFlag FFFF                       __pidataCOMRAM 137A  
            SetTimerPeriodic@handle 0034                      __end_of_memcpy 113C  
            ?_OSCILLATOR_Initialize 0032                      __end_of_memset 12CE  
                      ?_LogTwentyHz 0032           __size_of_SetTimerPeriodic 0024  
               start_initialization 11DE     __size_of_PIN_MANAGER_Initialize 0052  
                         _InitTimer 135C                        _SetLED_State 131A  
                 __size_of_LogTenHz 0002              __size_of_ServiceTimers 00F6  
           ?_absoluteTimeDifference 0032                    __CFG_LPBOREN$OFF 000000  
                          ??_memcpy 0039                            ??_memset 0038  
                     _BLUETOOTH_LED 003F                         __pbssCOMRAM 0001  
                        ?_InitTimer 0032      __end_of_absoluteTimeDifference 11DE  
            _PIN_MANAGER_Initialize 113C         __end_of_UpdateBluetooth_LED 1076  
                       __smallconst 0F00              __size_of_UpdateMCU_LED 0070  
                     _ServiceTimers 0F0E                   ?_InitDeviceConfig 0032  
                       __timer_tick 0001                  ??_InitDeviceConfig 003F  
                          _LATAbits 000F83                 __CFG_BORV$VBOR_2P45 000000  
           __size_of_SetTimerStatus 0038                      ?_ServiceTimers 0032  
                  _SetTimerPeriodic 12F6                         ??_InitTimer 003A  
              __size_of_LogTwentyHz 0002                           copy_data0 11F2  
                          _LogTenHz 1390                            _ErrorLog 0060  
                     _UpdateMCU_LED 1076                            __Hrparam 0000  
                         memcpy@tmp 003E                            __Lrparam 0000  
                __CFG_BOREN$SBORDIS 000000             ??_OSCILLATOR_Initialize 0032  
             _DEFAULT_DEVICE_CONFIG 0F09                            __ptext10 1384  
                          __ptext11 113C                            __ptext12 133C  
                          __ptext13 135C                            __ptext14 12A2  
                          __ptext15 12CE                            __ptext16 10E6  
                          __ptext17 0000                       __size_of_main 0042  
                    ?_UpdateMCU_LED 0032               SetTimerStatus@enabled 0032  
              __CFG_WDTCWS$WDTCWS_7 000000                     ??_ServiceTimers 0038  
                       _NVMCON1bits 000F81                            memcpy@d1 0032  
                          memcpy@s1 0034                            memset@p1 0032  
           ?_PIN_MANAGER_Initialize 0032                   __CFG_CLKOUTEN$OFF 000000  
                    _SetTimerStatus 126A                          _TEN_HZ_LOG 0047  
                   _DEVICE_TIMEOUTS 0003      __end_of_PIN_MANAGER_Initialize 118E  
                   ??_UpdateMCU_LED 0034           __size_of_InitDeviceConfig 0028  
          __end_of_SetTimerPeriodic 131A  
