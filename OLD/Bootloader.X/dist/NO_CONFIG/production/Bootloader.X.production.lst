

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Nov 05 20:48:12 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	dabs	1,0x1,1,_EE_Key_2
    36  0000                     
    37                           ; Version 1.43
    38                           ; Generated 25/07/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F27K40 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	intcode_body
    73  000262                     __pintcode_body:
    74                           	opt stack 0
    75  0000                     _GIE	set	32663
    76  0000                     _NVMCON1bits	set	3969
    77  0000                     _TBLPTRU	set	4088
    78  0000                     _TBLPTRH	set	4087
    79  0000                     _TBLPTRL	set	4086
    80  0000                     _TABLAT	set	4085
    81  0000                     _INTCONbits	set	4082
    82  0000                     _NVMCON2	set	3970
    83  0000                     _STKPTR	set	4092
    84  0000                     _NVMCON1	set	3969
    85  0000                     _TXSTA1bits	set	3998
    86  0000                     _BAUD1CONbits	set	3999
    87  0000                     _RC1REG	set	3993
    88  0000                     _LATA	set	3971
    89  0000                     _LATB	set	3972
    90  0000                     _LATC	set	3973
    91  0000                     _TRISA	set	3976
    92  0000                     _TRISB	set	3977
    93  0000                     _TRISC	set	3978
    94  0000                     _BAUD1CON	set	3999
    95  0000                     _RC1STA	set	3997
    96  0000                     _TX1STA	set	3998
    97  0000                     _SP1BRGL	set	3995
    98  0000                     _SP1BRGH	set	3996
    99  0000                     _RC1STAbits	set	3997
   100  0000                     _TX1REG	set	3994
   101  0000                     _TBLPTR	set	4086
   102  0000                     _ANSELC	set	3873
   103  0000                     _ANSELB	set	3865
   104  0000                     _ANSELA	set	3857
   105  0000                     _WPUE	set	3885
   106  0000                     _WPUB	set	3864
   107  0000                     _WPUA	set	3856
   108  0000                     _WPUC	set	3872
   109  0000                     _ODCONA	set	3855
   110  0000                     _ODCONB	set	3863
   111  0000                     _ODCONC	set	3871
   112  0000                     _PIR7bits	set	3793
   113  0000                     _OSCCON1	set	3800
   114  0000                     _OSCCON3	set	3802
   115  0000                     _OSCEN	set	3804
   116  0000                     _OSCFRQ	set	3806
   117  0000                     _OSCTUNE	set	3805
   118  0000                     _PPSLOCK	set	3744
   119  0000                     _PPSLOCKbits	set	3744
   120  0000                     _RX1PPSbits	set	3765
   121  0000                     _RC6PPS	set	3837
   122  0000                     _PIR3bits	set	3789
   123  0000                     
   124                           ; #config settings
   125  000262                     int_func:
   126                           	opt stack 23
   127  000262  CFFA F002          	movff	pclath,??_service_isr_high
   128  000266  CFFB F003          	movff	pclatu,??_service_isr_high+1
   129  00026A  CFE9 F004          	movff	fsr0l,??_service_isr_high+2
   130  00026E  CFEA F005          	movff	fsr0h,??_service_isr_high+3
   131  000272  CFE1 F006          	movff	fsr1l,??_service_isr_high+4
   132  000276  CFE2 F007          	movff	fsr1h,??_service_isr_high+5
   133  00027A  CFD9 F008          	movff	fsr2l,??_service_isr_high+6
   134  00027E  CFDA F009          	movff	fsr2h,??_service_isr_high+7
   135  000282  CFF3 F00A          	movff	prodl,??_service_isr_high+8
   136  000286  CFF4 F00B          	movff	prodh,??_service_isr_high+9
   137  00028A  CFF6 F00C          	movff	tblptrl,??_service_isr_high+10
   138  00028E  CFF7 F00D          	movff	tblptrh,??_service_isr_high+11
   139  000292  CFF8 F00E          	movff	tblptru,??_service_isr_high+12
   140  000296  CFF5 F00F          	movff	tablat,??_service_isr_high+13
   141  00029A  C039  F010         	movff	btemp,??_service_isr_high+14
   142  00029E  C03A  F011         	movff	btemp+1,??_service_isr_high+15
   143  0002A2  C03B  F012         	movff	btemp+2,??_service_isr_high+16
   144  0002A6  C03C  F013         	movff	btemp+3,??_service_isr_high+17
   145  0002AA  EFC1 F003          	goto	1922	;# 
   146  0002AE  C013  F03C         	movff	??_service_isr_high+17,btemp+3
   147  0002B2  C012  F03B         	movff	??_service_isr_high+16,btemp+2
   148  0002B6  C011  F03A         	movff	??_service_isr_high+15,btemp+1
   149  0002BA  C010  F039         	movff	??_service_isr_high+14,btemp
   150  0002BE  C00F  FFF5         	movff	??_service_isr_high+13,tablat
   151  0002C2  C00E  FFF8         	movff	??_service_isr_high+12,tblptru
   152  0002C6  C00D  FFF7         	movff	??_service_isr_high+11,tblptrh
   153  0002CA  C00C  FFF6         	movff	??_service_isr_high+10,tblptrl
   154  0002CE  C00B  FFF4         	movff	??_service_isr_high+9,prodh
   155  0002D2  C00A  FFF3         	movff	??_service_isr_high+8,prodl
   156  0002D6  C009  FFDA         	movff	??_service_isr_high+7,fsr2h
   157  0002DA  C008  FFD9         	movff	??_service_isr_high+6,fsr2l
   158  0002DE  C007  FFE2         	movff	??_service_isr_high+5,fsr1h
   159  0002E2  C006  FFE1         	movff	??_service_isr_high+4,fsr1l
   160  0002E6  C005  FFEA         	movff	??_service_isr_high+3,fsr0h
   161  0002EA  C004  FFE9         	movff	??_service_isr_high+2,fsr0l
   162  0002EE  C003  FFFB         	movff	??_service_isr_high+1,pclatu
   163  0002F2  C002  FFFA         	movff	??_service_isr_high,pclath
   164  0002F6  9239               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   165  0002F8  0011               	retfie		f
   166  0002FA                     __end_of_service_isr_high:
   167                           	opt stack 0
   168  0000                     pclatu	equ	0xFFB
   169                           pclath	equ	0xFFA
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           prodh	equ	0xFF4
   175                           prodl	equ	0xFF3
   176                           fsr0h	equ	0xFEA
   177                           fsr0l	equ	0xFE9
   178                           fsr1h	equ	0xFE2
   179                           fsr1l	equ	0xFE1
   180                           fsr2h	equ	0xFDA
   181                           fsr2l	equ	0xFD9
   182                           
   183                           	psect	cinit
   184  000698                     __pcinit:
   185                           	opt stack 0
   186  000698                     start_initialization:
   187                           	opt stack 0
   188  000698                     __initialization:
   189                           	opt stack 0
   190                           
   191                           ; Clear objects allocated to BANK0 (73 bytes)
   192  000698  EE00  F060         	lfsr	0,__pbssBANK0
   193  00069C  0E49               	movlw	73
   194  00069E                     clear_0:
   195  00069E  6AEE               	clrf	postinc0,c
   196  0006A0  06E8               	decf	wreg,f,c
   197  0006A2  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to COMRAM (8 bytes)
   200  0006A4  EE00  F031         	lfsr	0,__pbssCOMRAM
   201  0006A8  0E08               	movlw	8
   202  0006AA                     clear_1:
   203  0006AA  6AEE               	clrf	postinc0,c
   204  0006AC  06E8               	decf	wreg,f,c
   205  0006AE  E1FD               	bnz	clear_1
   206  0006B0                     end_of_initialization:
   207                           	opt stack 0
   208  0006B0                     __end_of__initialization:
   209                           	opt stack 0
   210  0006B0  9039               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   211  0006B2  9239               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   212  0006B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  0006B6  6EF8               	movwf	tblptru,c
   214  0006B8  0100               	movlb	0
   215  0006BA  EF07  F000         	goto	_main	;jump to C main() function
   216                           pclatu	equ	0xFFB
   217                           pclath	equ	0xFFA
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           prodh	equ	0xFF4
   223                           prodl	equ	0xFF3
   224                           postinc0	equ	0xFEE
   225                           fsr0h	equ	0xFEA
   226                           fsr0l	equ	0xFE9
   227                           wreg	equ	0xFE8
   228                           fsr1h	equ	0xFE2
   229                           fsr1l	equ	0xFE1
   230                           fsr2h	equ	0xFDA
   231                           fsr2l	equ	0xFD9
   232                           
   233                           	psect	bssCOMRAM
   234  000031                     __pbssCOMRAM:
   235                           	opt stack 0
   236  000031                     _counter:
   237                           	opt stack 0
   238  000031                     	ds	2
   239  000033                     _check_sum:
   240                           	opt stack 0
   241  000033                     	ds	2
   242  000035                     _reset_pending:
   243                           	opt stack 0
   244  000035                     	ds	1
   245  000036                     _tx_data:
   246                           	opt stack 0
   247  000036                     	ds	1
   248  000037                     _rx_data:
   249                           	opt stack 0
   250  000037                     	ds	1
   251  000038                     _data_length:
   252                           	opt stack 0
   253  000038                     	ds	1
   254                           pclatu	equ	0xFFB
   255                           pclath	equ	0xFFA
   256                           tblptru	equ	0xFF8
   257                           tblptrh	equ	0xFF7
   258                           tblptrl	equ	0xFF6
   259                           tablat	equ	0xFF5
   260                           prodh	equ	0xFF4
   261                           prodl	equ	0xFF3
   262                           postinc0	equ	0xFEE
   263                           fsr0h	equ	0xFEA
   264                           fsr0l	equ	0xFE9
   265                           wreg	equ	0xFE8
   266                           fsr1h	equ	0xFE2
   267                           fsr1l	equ	0xFE1
   268                           fsr2h	equ	0xFDA
   269                           fsr2l	equ	0xFD9
   270                           
   271                           	psect	bssBANK0
   272  000060                     __pbssBANK0:
   273                           	opt stack 0
   274  000060                     _frame:
   275                           	opt stack 0
   276  000060                     	ds	73
   277                           pclatu	equ	0xFFB
   278                           pclath	equ	0xFFA
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           prodh	equ	0xFF4
   284                           prodl	equ	0xFF3
   285                           postinc0	equ	0xFEE
   286                           fsr0h	equ	0xFEA
   287                           fsr0l	equ	0xFE9
   288                           wreg	equ	0xFE8
   289                           fsr1h	equ	0xFE2
   290                           fsr1l	equ	0xFE1
   291                           fsr2h	equ	0xFDA
   292                           fsr2l	equ	0xFD9
   293                           
   294                           	psect	cstackBANK0
   295  0000A9                     __pcstackBANK0:
   296                           	opt stack 0
   297  0000A9                     Run_Bootloader@ch:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x0
   301  0000A9                     	ds	1
   302  0000AA                     Run_Bootloader@msg_length:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x1
   306  0000AA                     	ds	1
   307  0000AB                     Run_Bootloader@index:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x2
   311  0000AB                     	ds	1
   312                           pclatu	equ	0xFFB
   313                           pclath	equ	0xFFA
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           prodh	equ	0xFF4
   319                           prodl	equ	0xFF3
   320                           postinc0	equ	0xFEE
   321                           fsr0h	equ	0xFEA
   322                           fsr0l	equ	0xFE9
   323                           wreg	equ	0xFE8
   324                           fsr1h	equ	0xFE2
   325                           fsr1l	equ	0xFE1
   326                           fsr2h	equ	0xFDA
   327                           fsr2l	equ	0xFD9
   328                           
   329                           	psect	cstackCOMRAM
   330  000002                     __pcstackCOMRAM:
   331                           	opt stack 0
   332  000002                     ??_service_isr_high:
   333  000002                     
   334                           ; 1 bytes @ 0x0
   335  000002                     	ds	18
   336  000014                     ??_service_isr_low:
   337                           
   338                           ; 1 bytes @ 0x12
   339  000014                     	ds	21
   340  000029                     ??_Write_Flash:
   341  000029                     ??_Read_Config:
   342  000029                     ??_Write_Config:
   343  000029                     Get_Version_Data@i:
   344                           	opt stack 0
   345  000029                     PIN_MANAGER_Initialize@state:
   346                           	opt stack 0
   347  000029                     EUSART1_Write@txData:
   348                           	opt stack 0
   349  000029                     Erase_Flash@i:
   350                           	opt stack 0
   351  000029                     Calc_Checksum@i:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x27
   355  000029                     	ds	2
   356  00002B                     Read_Config@i:
   357                           	opt stack 0
   358  00002B                     Write_Config@i:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x29
   362  00002B                     	ds	4
   363  00002F                     Write_Flash@i:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x2D
   367  00002F                     	ds	1
   368  000030                     ProcessBootBuffer@len:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x2E
   372  000030                     	ds	1
   373  000031                     pclatu	equ	0xFFB
   374                           pclath	equ	0xFFA
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           prodh	equ	0xFF4
   380                           prodl	equ	0xFF3
   381                           postinc0	equ	0xFEE
   382                           fsr0h	equ	0xFEA
   383                           fsr0l	equ	0xFE9
   384                           wreg	equ	0xFE8
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           fsr2h	equ	0xFDA
   388                           fsr2l	equ	0xFD9
   389                           
   390                           ; 1 bytes @ 0x2F
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 51 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels required when called:    8
   416 ;; This function calls:
   417 ;;		_SYSTEM_Initialize
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text0
   424  00000E                     __ptext0:
   425                           	opt stack 0
   426  00000E                     _main:
   427                           	opt stack 23
   428                           
   429                           ;main.c: 54: SYSTEM_Initialize();
   430                           
   431                           ;incstack = 0
   432  00000E  EC96  F003         	call	_SYSTEM_Initialize	;wreg free
   433  000012                     l335:
   434                           
   435                           ;main.c: 85: {
   436  000012  D7FF               	goto	l335
   437  000014                     __end_of_main:
   438                           	opt stack 0
   439                           pclatu	equ	0xFFB
   440                           pclath	equ	0xFFA
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           prodh	equ	0xFF4
   446                           prodl	equ	0xFF3
   447                           postinc0	equ	0xFEE
   448                           fsr0h	equ	0xFEA
   449                           fsr0l	equ	0xFE9
   450                           wreg	equ	0xFE8
   451                           fsr1h	equ	0xFE2
   452                           fsr1l	equ	0xFE1
   453                           fsr2h	equ	0xFDA
   454                           fsr2l	equ	0xFD9
   455                           
   456 ;; *************** function _SYSTEM_Initialize *****************
   457 ;; Defined at:
   458 ;;		line 124 in file "mcc_generated_files/mcc.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    7
   479 ;; This function calls:
   480 ;;		_BOOTLOADER_Initialize
   481 ;;		_EUSART1_Initialize
   482 ;;		_OSCILLATOR_Initialize
   483 ;;		_PIN_MANAGER_Initialize
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text1
   490  00072C                     __ptext1:
   491                           	opt stack 0
   492  00072C                     _SYSTEM_Initialize:
   493                           	opt stack 23
   494                           
   495                           ;mcc.c: 127: PIN_MANAGER_Initialize();
   496                           
   497                           ;incstack = 0
   498  00072C  EC7D  F001         	call	_PIN_MANAGER_Initialize	;wreg free
   499                           
   500                           ;mcc.c: 128: OSCILLATOR_Initialize();
   501  000730  EC70  F003         	call	_OSCILLATOR_Initialize	;wreg free
   502                           
   503                           ;mcc.c: 129: EUSART1_Initialize();
   504  000734  EC80  F003         	call	_EUSART1_Initialize	;wreg free
   505                           
   506                           ;mcc.c: 130: BOOTLOADER_Initialize();
   507  000738  EC8B  F003         	call	_BOOTLOADER_Initialize	;wreg free
   508  00073C  0012               	return		;funcret
   509  00073E                     __end_of_SYSTEM_Initialize:
   510                           	opt stack 0
   511                           pclatu	equ	0xFFB
   512                           pclath	equ	0xFFA
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           prodh	equ	0xFF4
   518                           prodl	equ	0xFF3
   519                           postinc0	equ	0xFEE
   520                           fsr0h	equ	0xFEA
   521                           fsr0l	equ	0xFE9
   522                           wreg	equ	0xFE8
   523                           fsr1h	equ	0xFE2
   524                           fsr1l	equ	0xFE1
   525                           fsr2h	equ	0xFDA
   526                           fsr2l	equ	0xFD9
   527                           
   528 ;; *************** function _PIN_MANAGER_Initialize *****************
   529 ;; Defined at:
   530 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  state           1   39[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    2
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_SYSTEM_Initialize
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text2
   559  0002FA                     __ptext2:
   560                           	opt stack 0
   561  0002FA                     _PIN_MANAGER_Initialize:
   562                           	opt stack 27
   563                           
   564                           ;pin_manager.c: 57: LATA = 0x00;
   565                           
   566                           ;incstack = 0
   567  0002FA  0E00               	movlw	0
   568  0002FC  6E83               	movwf	3971,c	;volatile
   569                           
   570                           ;pin_manager.c: 58: LATB = 0x00;
   571  0002FE  0E00               	movlw	0
   572  000300  6E84               	movwf	3972,c	;volatile
   573                           
   574                           ;pin_manager.c: 59: LATC = 0x00;
   575  000302  0E00               	movlw	0
   576  000304  6E85               	movwf	3973,c	;volatile
   577                           
   578                           ;pin_manager.c: 64: TRISA = 0xFF;
   579  000306  6888               	setf	3976,c	;volatile
   580                           
   581                           ;pin_manager.c: 65: TRISB = 0xFF;
   582  000308  6889               	setf	3977,c	;volatile
   583                           
   584                           ;pin_manager.c: 66: TRISC = 0xBF;
   585  00030A  0EBF               	movlw	191
   586  00030C  6E8A               	movwf	3978,c	;volatile
   587                           
   588                           ;pin_manager.c: 71: ANSELC = 0x7F;
   589  00030E  0E7F               	movlw	127
   590  000310  010F               	movlb	15	; () banked
   591  000312  6F21               	movwf	33,b	;volatile
   592                           
   593                           ; BSR set to: 15
   594                           ;pin_manager.c: 72: ANSELB = 0xFF;
   595  000314  010F               	movlb	15	; () banked
   596  000316  6919               	setf	25,b	;volatile
   597                           
   598                           ; BSR set to: 15
   599                           ;pin_manager.c: 73: ANSELA = 0xFF;
   600  000318  010F               	movlb	15	; () banked
   601  00031A  6911               	setf	17,b	;volatile
   602                           
   603                           ;pin_manager.c: 78: WPUE = 0x00;
   604  00031C  0E00               	movlw	0
   605  00031E  010F               	movlb	15	; () banked
   606  000320  6F2D               	movwf	45,b	;volatile
   607                           
   608                           ;pin_manager.c: 79: WPUB = 0x00;
   609  000322  0E00               	movlw	0
   610  000324  010F               	movlb	15	; () banked
   611  000326  6F18               	movwf	24,b	;volatile
   612                           
   613                           ;pin_manager.c: 80: WPUA = 0x00;
   614  000328  0E00               	movlw	0
   615  00032A  010F               	movlb	15	; () banked
   616  00032C  6F10               	movwf	16,b	;volatile
   617                           
   618                           ;pin_manager.c: 81: WPUC = 0x00;
   619  00032E  0E00               	movlw	0
   620  000330  010F               	movlb	15	; () banked
   621  000332  6F20               	movwf	32,b	;volatile
   622                           
   623                           ;pin_manager.c: 86: ODCONA = 0x00;
   624  000334  0E00               	movlw	0
   625  000336  010F               	movlb	15	; () banked
   626  000338  6F0F               	movwf	15,b	;volatile
   627                           
   628                           ;pin_manager.c: 87: ODCONB = 0x00;
   629  00033A  0E00               	movlw	0
   630  00033C  010F               	movlb	15	; () banked
   631  00033E  6F17               	movwf	23,b	;volatile
   632                           
   633                           ;pin_manager.c: 88: ODCONC = 0x00;
   634  000340  0E00               	movlw	0
   635  000342  010F               	movlb	15	; () banked
   636  000344  6F1F               	movwf	31,b	;volatile
   637                           
   638                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
   639  000346  0E00               	movlw	0
   640  000348  BEF2               	btfsc	intcon,7,c	;volatile
   641  00034A  0E01               	movlw	1
   642  00034C  6E29               	movwf	PIN_MANAGER_Initialize@state,c
   643                           
   644                           ; BSR set to: 15
   645                           ;pin_manager.c: 96: GIE = 0;
   646  00034E  9EF2               	bcf	intcon,7,c	;volatile
   647                           
   648                           ;pin_manager.c: 97: PPSLOCK = 0x55;
   649  000350  0E55               	movlw	85
   650  000352  010E               	movlb	14	; () banked
   651  000354  6FA0               	movwf	160,b	;volatile
   652                           
   653                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
   654  000356  0EAA               	movlw	170
   655  000358  010E               	movlb	14	; () banked
   656  00035A  6FA0               	movwf	160,b	;volatile
   657                           
   658                           ; BSR set to: 14
   659                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
   660  00035C  010E               	movlb	14	; () banked
   661  00035E  91A0               	bcf	160,0,b	;volatile
   662                           
   663                           ; BSR set to: 14
   664                           ;pin_manager.c: 101: RX1PPSbits.RXPPS = 0x17;
   665  000360  010E               	movlb	14	; () banked
   666  000362  81B5               	bsf	181,0,b	;volatile
   667  000364  83B5               	bsf	181,1,b	;volatile
   668  000366  85B5               	bsf	181,2,b	;volatile
   669  000368  97B5               	bcf	181,3,b	;volatile
   670  00036A  89B5               	bsf	181,4,b	;volatile
   671                           
   672                           ;pin_manager.c: 102: RC6PPS = 0x09;
   673  00036C  0E09               	movlw	9
   674  00036E  010E               	movlb	14	; () banked
   675  000370  6FFD               	movwf	253,b	;volatile
   676                           
   677                           ;pin_manager.c: 104: PPSLOCK = 0x55;
   678  000372  0E55               	movlw	85
   679  000374  010E               	movlb	14	; () banked
   680  000376  6FA0               	movwf	160,b	;volatile
   681                           
   682                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
   683  000378  0EAA               	movlw	170
   684  00037A  010E               	movlb	14	; () banked
   685  00037C  6FA0               	movwf	160,b	;volatile
   686                           
   687                           ; BSR set to: 14
   688                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
   689  00037E  010E               	movlb	14	; () banked
   690  000380  81A0               	bsf	160,0,b	;volatile
   691                           
   692                           ; BSR set to: 14
   693                           ;pin_manager.c: 108: GIE = state;
   694  000382  A029               	btfss	PIN_MANAGER_Initialize@state,0,c
   695  000384  D002               	goto	u310
   696  000386  8EF2               	bsf	intcon,7,c	;volatile
   697  000388  0012               	return	
   698  00038A                     u310:
   699  00038A  9EF2               	bcf	intcon,7,c	;volatile
   700  00038C  0012               	return		;funcret
   701  00038E                     __end_of_PIN_MANAGER_Initialize:
   702                           	opt stack 0
   703                           pclatu	equ	0xFFB
   704                           pclath	equ	0xFFA
   705                           tblptru	equ	0xFF8
   706                           tblptrh	equ	0xFF7
   707                           tblptrl	equ	0xFF6
   708                           tablat	equ	0xFF5
   709                           prodh	equ	0xFF4
   710                           prodl	equ	0xFF3
   711                           intcon	equ	0xFF2
   712                           postinc0	equ	0xFEE
   713                           fsr0h	equ	0xFEA
   714                           fsr0l	equ	0xFE9
   715                           wreg	equ	0xFE8
   716                           fsr1h	equ	0xFE2
   717                           fsr1l	equ	0xFE1
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           
   721 ;; *************** function _OSCILLATOR_Initialize *****************
   722 ;; Defined at:
   723 ;;		line 133 in file "mcc_generated_files/mcc.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used:    1
   743 ;; Hardware stack levels required when called:    2
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_SYSTEM_Initialize
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text3
   752  0006E0                     __ptext3:
   753                           	opt stack 0
   754  0006E0                     _OSCILLATOR_Initialize:
   755                           	opt stack 27
   756                           
   757                           ;mcc.c: 136: OSCCON1 = 0x60;
   758                           
   759                           ;incstack = 0
   760  0006E0  0E60               	movlw	96
   761  0006E2  010E               	movlb	14	; () banked
   762  0006E4  6FD8               	movwf	216,b	;volatile
   763                           
   764                           ;mcc.c: 138: OSCCON3 = 0x00;
   765  0006E6  0E00               	movlw	0
   766  0006E8  010E               	movlb	14	; () banked
   767  0006EA  6FDA               	movwf	218,b	;volatile
   768                           
   769                           ;mcc.c: 140: OSCEN = 0x00;
   770  0006EC  0E00               	movlw	0
   771  0006EE  010E               	movlb	14	; () banked
   772  0006F0  6FDC               	movwf	220,b	;volatile
   773                           
   774                           ;mcc.c: 142: OSCFRQ = 0x08;
   775  0006F2  0E08               	movlw	8
   776  0006F4  010E               	movlb	14	; () banked
   777  0006F6  6FDE               	movwf	222,b	;volatile
   778                           
   779                           ;mcc.c: 144: OSCTUNE = 0x00;
   780  0006F8  0E00               	movlw	0
   781  0006FA  010E               	movlb	14	; () banked
   782  0006FC  6FDD               	movwf	221,b	;volatile
   783                           
   784                           ; BSR set to: 14
   785  0006FE  0012               	return		;funcret
   786  000700                     __end_of_OSCILLATOR_Initialize:
   787                           	opt stack 0
   788                           pclatu	equ	0xFFB
   789                           pclath	equ	0xFFA
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           prodh	equ	0xFF4
   795                           prodl	equ	0xFF3
   796                           intcon	equ	0xFF2
   797                           postinc0	equ	0xFEE
   798                           fsr0h	equ	0xFEA
   799                           fsr0l	equ	0xFE9
   800                           wreg	equ	0xFE8
   801                           fsr1h	equ	0xFE2
   802                           fsr1l	equ	0xFE1
   803                           fsr2h	equ	0xFDA
   804                           fsr2l	equ	0xFD9
   805                           
   806 ;; *************** function _EUSART1_Initialize *****************
   807 ;; Defined at:
   808 ;;		line 55 in file "mcc_generated_files/eusart1.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    2
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_SYSTEM_Initialize
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text4
   837  000700                     __ptext4:
   838                           	opt stack 0
   839  000700                     _EUSART1_Initialize:
   840                           	opt stack 27
   841                           
   842                           ;eusart1.c: 60: BAUD1CON = 0x08;
   843                           
   844                           ; BSR set to: 14
   845                           ;incstack = 0
   846  000700  0E08               	movlw	8
   847  000702  6E9F               	movwf	3999,c	;volatile
   848                           
   849                           ;eusart1.c: 63: RC1STA = 0x90;
   850  000704  0E90               	movlw	144
   851  000706  6E9D               	movwf	3997,c	;volatile
   852                           
   853                           ;eusart1.c: 66: TX1STA = 0x24;
   854  000708  0E24               	movlw	36
   855  00070A  6E9E               	movwf	3998,c	;volatile
   856                           
   857                           ;eusart1.c: 69: SP1BRGL = 0x82;
   858  00070C  0E82               	movlw	130
   859  00070E  6E9B               	movwf	3995,c	;volatile
   860                           
   861                           ;eusart1.c: 72: SP1BRGH = 0x06;
   862  000710  0E06               	movlw	6
   863  000712  6E9C               	movwf	3996,c	;volatile
   864  000714  0012               	return		;funcret
   865  000716                     __end_of_EUSART1_Initialize:
   866                           	opt stack 0
   867                           pclatu	equ	0xFFB
   868                           pclath	equ	0xFFA
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           prodh	equ	0xFF4
   874                           prodl	equ	0xFF3
   875                           intcon	equ	0xFF2
   876                           postinc0	equ	0xFEE
   877                           fsr0h	equ	0xFEA
   878                           fsr0l	equ	0xFE9
   879                           wreg	equ	0xFE8
   880                           fsr1h	equ	0xFE2
   881                           fsr1l	equ	0xFE1
   882                           fsr2h	equ	0xFDA
   883                           fsr2l	equ	0xFD9
   884                           
   885 ;; *************** function _BOOTLOADER_Initialize *****************
   886 ;; Defined at:
   887 ;;		line 142 in file "mcc_generated_files/pic18f_bootload.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    6
   908 ;; This function calls:
   909 ;;		_Bootload_Required
   910 ;;		_Run_Bootloader
   911 ;; This function is called by:
   912 ;;		_SYSTEM_Initialize
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text5
   917  000716                     __ptext5:
   918                           	opt stack 0
   919  000716                     _BOOTLOADER_Initialize:
   920                           	opt stack 23
   921                           
   922                           ;pic18f_bootload.c: 144: if (Bootload_Required () == 1)
   923                           
   924                           ;incstack = 0
   925  000716  EC5F  F003         	call	_Bootload_Required	;wreg free
   926  00071A  06E8               	decf	wreg,f,c
   927  00071C  B4D8               	btfsc	status,2,c
   928                           
   929                           ;pic18f_bootload.c: 145: {
   930                           ;pic18f_bootload.c: 146: Run_Bootloader ();
   931  00071E  ECCD  F000         	call	_Run_Bootloader	;wreg free
   932                           
   933                           ;pic18f_bootload.c: 147: }
   934                           ;pic18f_bootload.c: 148: STKPTR = 0x00;
   935  000722  0E00               	movlw	0
   936  000724  6EFC               	movwf	stkptr,c	;# 
   937  000726  EFB5 F003          	goto	1898	;# 
   938  00072A  0012               	return		;funcret
   939  00072C                     __end_of_BOOTLOADER_Initialize:
   940                           	opt stack 0
   941                           stkptr	equ	0xFFC
   942                           pclatu	equ	0xFFB
   943                           pclath	equ	0xFFA
   944                           tblptru	equ	0xFF8
   945                           tblptrh	equ	0xFF7
   946                           tblptrl	equ	0xFF6
   947                           tablat	equ	0xFF5
   948                           prodh	equ	0xFF4
   949                           prodl	equ	0xFF3
   950                           intcon	equ	0xFF2
   951                           postinc0	equ	0xFEE
   952                           fsr0h	equ	0xFEA
   953                           fsr0l	equ	0xFE9
   954                           wreg	equ	0xFE8
   955                           fsr1h	equ	0xFE2
   956                           fsr1l	equ	0xFE1
   957                           fsr2h	equ	0xFDA
   958                           fsr2l	equ	0xFD9
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _Run_Bootloader *****************
   962 ;; Defined at:
   963 ;;		line 62 in file "mcc_generated_files/pic18f_uart.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  ch              1    0[BANK0 ] unsigned char 
   968 ;;  index           1    2[BANK0 ] volatile unsigned char 
   969 ;;  msg_length      1    1[BANK0 ] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;Total ram usage:        3 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    5
   986 ;; This function calls:
   987 ;;		_Check_Device_Reset
   988 ;;		_EUSART1_Read
   989 ;;		_EUSART1_Write
   990 ;;		_ProcessBootBuffer
   991 ;; This function is called by:
   992 ;;		_BOOTLOADER_Initialize
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text6
   997  00019A                     __ptext6:
   998                           	opt stack 0
   999  00019A                     _Run_Bootloader:
  1000                           	opt stack 23
  1001                           
  1002                           ;pic18f_uart.c: 68: {
  1003                           ;pic18f_uart.c: 69: while (TXSTA1bits.TRMT == 0);
  1004                           
  1005                           ;incstack = 0
  1006                           ;pic18f_uart.c: 64: volatile uint8_t index;
  1007                           ;pic18f_uart.c: 65: uint8_t msg_length;
  1008                           ;pic18f_uart.c: 67: while (1)
  1009  00019A  A29E               	btfss	3998,1,c	;volatile
  1010  00019C  D7FE               	goto	_Run_Bootloader
  1011                           
  1012                           ;pic18f_uart.c: 71: Check_Device_Reset ();
  1013  00019E  EC37  F003         	call	_Check_Device_Reset	;wreg free
  1014  0001A2  D004               	goto	L1
  1015  0001A4                     l231:
  1016                           
  1017                           ;pic18f_uart.c: 78: {
  1018                           ;pic18f_uart.c: 79: if (BAUD1CONbits.ABDOVF == 1)
  1019  0001A4  AE9F               	btfss	3999,7,c	;volatile
  1020  0001A6  D003               	goto	l232
  1021                           
  1022                           ;pic18f_uart.c: 80: {
  1023                           ;pic18f_uart.c: 81: BAUD1CONbits.ABDEN = 0;
  1024  0001A8  909F               	bcf	3999,0,c	;volatile
  1025                           
  1026                           ;pic18f_uart.c: 82: BAUD1CONbits.ABDOVF = 0;
  1027  0001AA  9E9F               	bcf	3999,7,c	;volatile
  1028  0001AC                     L1:
  1029                           
  1030                           ;pic18f_uart.c: 83: BAUD1CONbits.ABDEN = 1;
  1031  0001AC  809F               	bsf	3999,0,c	;volatile
  1032  0001AE                     l232:
  1033  0001AE  B09F               	btfsc	3999,0,c	;volatile
  1034  0001B0  D7F9               	goto	l231
  1035                           
  1036                           ;pic18f_uart.c: 84: }
  1037                           ;pic18f_uart.c: 85: }
  1038                           ;pic18f_uart.c: 87: index = RC1REG;
  1039  0001B2  CF99 F0AB          	movff	3993,Run_Bootloader@index	;volatile
  1040                           
  1041                           ;pic18f_uart.c: 93: index = 0;
  1042  0001B6  0E00               	movlw	0
  1043  0001B8  0100               	movlb	0	; () banked
  1044  0001BA  6FAB               	movwf	Run_Bootloader@index& (0+255),b	;volatile
  1045                           
  1046                           ;pic18f_uart.c: 94: msg_length = 9;
  1047  0001BC  0E09               	movlw	9
  1048  0001BE  0100               	movlb	0	; () banked
  1049  0001C0  6FAA               	movwf	Run_Bootloader@msg_length& (0+255),b
  1050                           
  1051                           ;pic18f_uart.c: 95: uint8_t ch;
  1052                           ;pic18f_uart.c: 97: while (index < msg_length)
  1053  0001C2  D029               	goto	l237
  1054  0001C4                     
  1055                           ; BSR set to: 0
  1056                           ;pic18f_uart.c: 98: {
  1057                           ;pic18f_uart.c: 99: ch = EUSART1_Read();
  1058                           
  1059                           ; BSR set to: 0
  1060  0001C4  EC9F  F003         	call	_EUSART1_Read	;wreg free
  1061  0001C8  0100               	movlb	0	; () banked
  1062  0001CA  6FA9               	movwf	Run_Bootloader@ch& (0+255),b
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;pic18f_uart.c: 100: frame.buffer [index ++] = ch;
  1066  0001CC  0100               	movlb	0	; () banked
  1067  0001CE  51AB               	movf	Run_Bootloader@index& (0+255),w,b	;volatile
  1068  0001D0  0D01               	mullw	1
  1069  0001D2  0E60               	movlw	low _frame
  1070  0001D4  24F3               	addwf	prodl,w,c
  1071  0001D6  6ED9               	movwf	fsr2l,c
  1072  0001D8  0E00               	movlw	high _frame
  1073  0001DA  20F4               	addwfc	prodh,w,c
  1074  0001DC  6EDA               	movwf	fsr2h,c
  1075  0001DE  C0A9  FFDF         	movff	Run_Bootloader@ch,indf2
  1076                           
  1077                           ; BSR set to: 0
  1078  0001E2  0100               	movlb	0	; () banked
  1079  0001E4  2BAB               	incf	Run_Bootloader@index& (0+255),f,b	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;pic18f_uart.c: 101: if (index == 4)
  1083  0001E6  0E04               	movlw	4
  1084  0001E8  0100               	movlb	0	; () banked
  1085  0001EA  19AB               	xorwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1086  0001EC  A4D8               	btfss	status,2,c
  1087  0001EE  D013               	goto	l237
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;pic18f_uart.c: 102: {
  1091                           ;pic18f_uart.c: 103: if ((frame.command == 2)
  1092                           ;pic18f_uart.c: 104: || (frame.command == 5)
  1093                           ;pic18f_uart.c: 105: || (frame.command == 7))
  1094  0001F0  0E02               	movlw	2
  1095  0001F2  0100               	movlb	0	; () banked
  1096  0001F4  1960               	xorwf	_frame& (0+255),w,b
  1097  0001F6  B4D8               	btfsc	status,2,c
  1098  0001F8  D00A               	goto	u980
  1099                           
  1100                           ; BSR set to: 0
  1101  0001FA  0E05               	movlw	5
  1102  0001FC  0100               	movlb	0	; () banked
  1103  0001FE  1960               	xorwf	_frame& (0+255),w,b
  1104  000200  B4D8               	btfsc	status,2,c
  1105  000202  D005               	goto	u980
  1106                           
  1107                           ; BSR set to: 0
  1108  000204  0E07               	movlw	7
  1109  000206  0100               	movlb	0	; () banked
  1110  000208  1960               	xorwf	_frame& (0+255),w,b
  1111  00020A  A4D8               	btfss	status,2,c
  1112  00020C  D004               	goto	l237
  1113  00020E                     u980:
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;pic18f_uart.c: 106: {
  1117                           ;pic18f_uart.c: 107: msg_length += frame.data_length;
  1118                           
  1119                           ; BSR set to: 0
  1120  00020E  0100               	movlb	0	; () banked
  1121  000210  5161               	movf	(_frame+1)& (0+255),w,b
  1122  000212  0100               	movlb	0	; () banked
  1123  000214  27AA               	addwf	Run_Bootloader@msg_length& (0+255),f,b
  1124  000216                     l237:
  1125                           
  1126                           ; BSR set to: 0
  1127                           
  1128                           ; BSR set to: 0
  1129                           
  1130                           ; BSR set to: 0
  1131  000216  0100               	movlb	0	; () banked
  1132  000218  51AA               	movf	Run_Bootloader@msg_length& (0+255),w,b
  1133  00021A  0100               	movlb	0	; () banked
  1134  00021C  5DAB               	subwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1135  00021E  A0D8               	btfss	status,0,c
  1136  000220  D7D1               	goto	l235
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;pic18f_uart.c: 108: }
  1140                           ;pic18f_uart.c: 109: }
  1141                           ;pic18f_uart.c: 110: }
  1142                           ;pic18f_uart.c: 112: msg_length = ProcessBootBuffer ();
  1143                           
  1144                           ; BSR set to: 0
  1145  000222  EC9A  F002         	call	_ProcessBootBuffer	;wreg free
  1146  000226  0100               	movlb	0	; () banked
  1147  000228  6FAA               	movwf	Run_Bootloader@msg_length& (0+255),b
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;pic18f_uart.c: 117: EUSART1_Write(0x55);
  1151  00022A  0E55               	movlw	85
  1152  00022C  ECA8  F003         	call	_EUSART1_Write
  1153                           
  1154                           ;pic18f_uart.c: 118: index = 0;
  1155  000230  0E00               	movlw	0
  1156  000232  0100               	movlb	0	; () banked
  1157  000234  6FAB               	movwf	Run_Bootloader@index& (0+255),b	;volatile
  1158                           
  1159                           ;pic18f_uart.c: 119: while (index < msg_length)
  1160  000236  D00E               	goto	l241
  1161  000238                     
  1162                           ; BSR set to: 0
  1163                           ;pic18f_uart.c: 120: {
  1164                           ;pic18f_uart.c: 121: EUSART1_Write (frame.buffer [index++]);
  1165                           
  1166                           ; BSR set to: 0
  1167  000238  0100               	movlb	0	; () banked
  1168  00023A  51AB               	movf	Run_Bootloader@index& (0+255),w,b	;volatile
  1169  00023C  0D01               	mullw	1
  1170  00023E  0E60               	movlw	low _frame
  1171  000240  24F3               	addwf	prodl,w,c
  1172  000242  6ED9               	movwf	fsr2l,c
  1173  000244  0E00               	movlw	high _frame
  1174  000246  20F4               	addwfc	prodh,w,c
  1175  000248  6EDA               	movwf	fsr2h,c
  1176  00024A  50DF               	movf	indf2,w,c
  1177  00024C  ECA8  F003         	call	_EUSART1_Write
  1178  000250  0100               	movlb	0	; () banked
  1179  000252  2BAB               	incf	Run_Bootloader@index& (0+255),f,b	;volatile
  1180  000254                     l241:
  1181                           
  1182                           ; BSR set to: 0
  1183                           
  1184                           ; BSR set to: 0
  1185  000254  0100               	movlb	0	; () banked
  1186  000256  51AA               	movf	Run_Bootloader@msg_length& (0+255),w,b
  1187  000258  0100               	movlb	0	; () banked
  1188  00025A  5DAB               	subwf	Run_Bootloader@index& (0+255),w,b	;volatile
  1189  00025C  B0D8               	btfsc	status,0,c
  1190  00025E  D79D               	goto	_Run_Bootloader
  1191  000260  D7EB               	goto	l242
  1192  000262                     __end_of_Run_Bootloader:
  1193                           	opt stack 0
  1194                           stkptr	equ	0xFFC
  1195                           pclatu	equ	0xFFB
  1196                           pclath	equ	0xFFA
  1197                           tblptru	equ	0xFF8
  1198                           tblptrh	equ	0xFF7
  1199                           tblptrl	equ	0xFF6
  1200                           tablat	equ	0xFF5
  1201                           prodh	equ	0xFF4
  1202                           prodl	equ	0xFF3
  1203                           intcon	equ	0xFF2
  1204                           postinc0	equ	0xFEE
  1205                           fsr0h	equ	0xFEA
  1206                           fsr0l	equ	0xFE9
  1207                           wreg	equ	0xFE8
  1208                           fsr1h	equ	0xFE2
  1209                           fsr1l	equ	0xFE1
  1210                           indf2	equ	0xFDF
  1211                           fsr2h	equ	0xFDA
  1212                           fsr2l	equ	0xFD9
  1213                           status	equ	0xFD8
  1214                           
  1215 ;; *************** function _ProcessBootBuffer *****************
  1216 ;; Defined at:
  1217 ;;		line 175 in file "mcc_generated_files/pic18f_bootload.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  len             1   46[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;Total ram usage:        1 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    4
  1238 ;; This function calls:
  1239 ;;		_Calc_Checksum
  1240 ;;		_Erase_Flash
  1241 ;;		_Get_Version_Data
  1242 ;;		_Read_Config
  1243 ;;		_Write_Config
  1244 ;;		_Write_Flash
  1245 ;; This function is called by:
  1246 ;;		_Run_Bootloader
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text7
  1251  000534                     __ptext7:
  1252                           	opt stack 0
  1253  000534                     _ProcessBootBuffer:
  1254                           	opt stack 23
  1255                           
  1256                           ;pic18f_bootload.c: 177: uint8_t len;
  1257                           ;pic18f_bootload.c: 178: EE_Key_1 = frame.EE_key_1;
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;incstack = 0
  1261  000534  C063  F000         	movff	_frame+3,0
  1262                           
  1263                           ;pic18f_bootload.c: 179: EE_Key_2 = frame.EE_key_2;
  1264  000538  C064  F001         	movff	_frame+4,1
  1265                           
  1266                           ;pic18f_bootload.c: 182: switch (frame.command)
  1267  00053C  D01B               	goto	l144
  1268  00053E                     
  1269                           ;pic18f_bootload.c: 185: len = Get_Version_Data();
  1270  00053E  ECC7  F001         	call	_Get_Version_Data	;wreg free
  1271  000542  D016               	goto	L8
  1272  000544                     
  1273                           ;pic18f_bootload.c: 188: len = Write_Flash();
  1274  000544  EC67  F000         	call	_Write_Flash	;wreg free
  1275  000548  D013               	goto	L8
  1276  00054A                     
  1277                           ;pic18f_bootload.c: 191: len = Erase_Flash();
  1278  00054A  EC5A  F002         	call	_Erase_Flash	;wreg free
  1279  00054E  D010               	goto	L8
  1280  000550                     
  1281                           ;pic18f_bootload.c: 194: len = Read_Config();
  1282  000550  ECD4  F002         	call	_Read_Config	;wreg free
  1283  000554  D00D               	goto	L8
  1284  000556                     
  1285                           ;pic18f_bootload.c: 197: len = Write_Config();
  1286  000556  EC11  F002         	call	_Write_Config	;wreg free
  1287  00055A  D00A               	goto	L8
  1288  00055C                     
  1289                           ;pic18f_bootload.c: 200: len = Calc_Checksum();
  1290  00055C  EC0B  F003         	call	_Calc_Checksum	;wreg free
  1291  000560  D007               	goto	L8
  1292  000562                     
  1293                           ;pic18f_bootload.c: 203: reset_pending = 1;
  1294  000562  0E01               	movlw	1
  1295  000564  6E35               	movwf	_reset_pending,c
  1296                           
  1297                           ;pic18f_bootload.c: 204: len = 9;
  1298  000566  0E09               	movlw	9
  1299  000568  D003               	goto	L8
  1300  00056A                     l153:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;pic18f_bootload.c: 207: frame.data[0] = 0xFF;
  1304  00056A  0100               	movlb	0	; () banked
  1305  00056C  6969               	setf	(_frame+9)& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;pic18f_bootload.c: 208: len = 10;
  1309  00056E  0E0A               	movlw	10
  1310  000570                     L8:
  1311  000570  6E30               	movwf	ProcessBootBuffer@len,c
  1312                           
  1313                           ;pic18f_bootload.c: 209: }
  1314  000572  D018               	goto	l146
  1315  000574                     l144:
  1316                           
  1317                           ; BSR set to: 0
  1318  000574  0100               	movlb	0	; () banked
  1319  000576  5160               	movf	_frame& (0+255),w,b
  1320                           
  1321                           ; Switch size 1, requested type "space"
  1322                           ; Number of cases is 7, Range of values is 0 to 9
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte           22    12 (average)
  1326                           ;	Chosen strategy is simple_byte
  1327  000578  0A00               	xorlw	0	; case 0
  1328  00057A  B4D8               	btfsc	status,2,c
  1329  00057C  D7E0               	goto	l145
  1330  00057E  0A02               	xorlw	2	; case 2
  1331  000580  B4D8               	btfsc	status,2,c
  1332  000582  D7E0               	goto	l147
  1333  000584  0A01               	xorlw	1	; case 3
  1334  000586  B4D8               	btfsc	status,2,c
  1335  000588  D7E0               	goto	l148
  1336  00058A  0A05               	xorlw	5	; case 6
  1337  00058C  B4D8               	btfsc	status,2,c
  1338  00058E  D7E0               	goto	l149
  1339  000590  0A01               	xorlw	1	; case 7
  1340  000592  B4D8               	btfsc	status,2,c
  1341  000594  D7E0               	goto	l150
  1342  000596  0A0F               	xorlw	15	; case 8
  1343  000598  B4D8               	btfsc	status,2,c
  1344  00059A  D7E0               	goto	l151
  1345  00059C  0A01               	xorlw	1	; case 9
  1346  00059E  B4D8               	btfsc	status,2,c
  1347  0005A0  D7E0               	goto	l152
  1348  0005A2  D7E3               	goto	l153
  1349  0005A4                     l146:
  1350                           
  1351                           ;pic18f_bootload.c: 210: return (len);
  1352                           
  1353                           ; BSR set to: 0
  1354  0005A4  5030               	movf	ProcessBootBuffer@len,w,c
  1355  0005A6  0012               	return	
  1356  0005A8                     __end_of_ProcessBootBuffer:
  1357                           	opt stack 0
  1358                           stkptr	equ	0xFFC
  1359                           pclatu	equ	0xFFB
  1360                           pclath	equ	0xFFA
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           prodh	equ	0xFF4
  1366                           prodl	equ	0xFF3
  1367                           intcon	equ	0xFF2
  1368                           postinc0	equ	0xFEE
  1369                           fsr0h	equ	0xFEA
  1370                           fsr0l	equ	0xFE9
  1371                           wreg	equ	0xFE8
  1372                           fsr1h	equ	0xFE2
  1373                           fsr1l	equ	0xFE1
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _Write_Flash *****************
  1380 ;; Defined at:
  1381 ;;		line 263 in file "mcc_generated_files/pic18f_bootload.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               1   45[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      unsigned char 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;Total ram usage:        7 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    3
  1402 ;; This function calls:
  1403 ;;		_StartWrite
  1404 ;; This function is called by:
  1405 ;;		_ProcessBootBuffer
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text8
  1410  0000CE                     __ptext8:
  1411                           	opt stack 0
  1412  0000CE                     _Write_Flash:
  1413                           	opt stack 23
  1414                           
  1415                           ;pic18f_bootload.c: 265: TBLPTRL = frame.address_L;
  1416                           
  1417                           ;incstack = 0
  1418  0000CE  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1419                           
  1420                           ;pic18f_bootload.c: 266: TBLPTRH = frame.address_H;
  1421  0000D2  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1422                           
  1423                           ;pic18f_bootload.c: 267: TBLPTRU = frame.address_U;
  1424  0000D6  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1425                           
  1426                           ;pic18f_bootload.c: 268: NVMCON1 = 0xA4;
  1427  0000DA  0EA4               	movlw	164
  1428  0000DC  6E81               	movwf	3969,c	;volatile
  1429                           
  1430                           ;pic18f_bootload.c: 269: if (TBLPTR < 0x76a)
  1431  0000DE  50F8               	movf	tblptru,w,c	;volatile
  1432  0000E0  E10B               	bnz	l1684
  1433  0000E2  0E6A               	movlw	106
  1434  0000E4  5CF6               	subwf	tblptrl,w,c	;volatile
  1435  0000E6  0E07               	movlw	7
  1436  0000E8  58F7               	subwfb	tblptrh,w,c	;volatile
  1437  0000EA  B0D8               	btfsc	status,0,c
  1438  0000EC  D005               	goto	l162
  1439                           
  1440                           ;pic18f_bootload.c: 270: {
  1441                           ;pic18f_bootload.c: 271: frame.data[0] = 0xFE;
  1442  0000EE  0EFE               	movlw	254
  1443  0000F0  0100               	movlb	0	; () banked
  1444  0000F2  6F69               	movwf	(_frame+9)& (0+255),b
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;pic18f_bootload.c: 272: return (10);
  1448  0000F4  0E0A               	movlw	10
  1449                           
  1450                           ; BSR set to: 0
  1451  0000F6  0012               	return	
  1452  0000F8                     l162:
  1453  0000F8                     l1684:
  1454                           
  1455                           ;pic18f_bootload.c: 273: }
  1456                           ;pic18f_bootload.c: 274: for (uint8_t i = 0; i < frame.data_length; i ++)
  1457  0000F8  0E00               	movlw	0
  1458  0000FA  6E2F               	movwf	Write_Flash@i,c
  1459  0000FC  D03A               	goto	l164
  1460  0000FE                     
  1461                           ;pic18f_bootload.c: 275: {
  1462                           ;pic18f_bootload.c: 276: TABLAT = frame.data[i];
  1463  0000FE  502F               	movf	Write_Flash@i,w,c
  1464  000100  0D01               	mullw	1
  1465  000102  0E09               	movlw	9
  1466  000104  26F3               	addwf	prodl,f,c
  1467  000106  0E00               	movlw	0
  1468  000108  22F4               	addwfc	prodh,f,c
  1469  00010A  0E60               	movlw	low _frame
  1470  00010C  24F3               	addwf	prodl,w,c
  1471  00010E  6ED9               	movwf	fsr2l,c
  1472  000110  0E00               	movlw	high _frame
  1473  000112  20F4               	addwfc	prodh,w,c
  1474  000114  6EDA               	movwf	fsr2h,c
  1475  000116  50DF               	movf	indf2,w,c
  1476  000118  6EF5               	movwf	tablat,c	;volatile
  1477                           
  1478                           ;pic18f_bootload.c: 277: if (TBLPTR >= 131072)
  1479  00011A  0E02               	movlw	2
  1480  00011C  5CF8               	subwf	tblptru,w,c	;volatile
  1481  00011E  A0D8               	btfss	status,0,c
  1482  000120  D005               	goto	l166
  1483                           
  1484                           ;pic18f_bootload.c: 278: {
  1485                           ;pic18f_bootload.c: 279: frame.data[0] = 0xFE;
  1486  000122  0EFE               	movlw	254
  1487  000124  0100               	movlb	0	; () banked
  1488  000126  6F69               	movwf	(_frame+9)& (0+255),b
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;pic18f_bootload.c: 280: return (10);
  1492  000128  0E0A               	movlw	10
  1493                           
  1494                           ; BSR set to: 0
  1495  00012A  0012               	return	
  1496  00012C                     l166:
  1497  00012C  000D               	tblwt		*+	;# 
  1498                           
  1499                           ;pic18f_bootload.c: 283: if (((TBLPTRL & (128 - 1)) == (128 - 1))
  1500                           ;pic18f_bootload.c: 284: || (i == frame.data_length - 1))
  1501  00012E  50F6               	movf	tblptrl,w,c	;volatile
  1502  000130  0B7F               	andlw	127
  1503  000132  0A7F               	xorlw	127
  1504  000134  B4D8               	btfsc	status,2,c
  1505  000136  D018               	goto	u770
  1506  000138  502F               	movf	Write_Flash@i,w,c
  1507  00013A  6E29               	movwf	??_Write_Flash& (0+255),c
  1508  00013C  6A2A               	clrf	(??_Write_Flash+1)& (0+255),c
  1509  00013E  0EFF               	movlw	255
  1510  000140  6E2B               	movwf	(??_Write_Flash+2)& (0+255),c
  1511  000142  0EFF               	movlw	255
  1512  000144  6E2C               	movwf	(??_Write_Flash+3)& (0+255),c
  1513  000146  EE20  F061         	lfsr	2,_frame+1
  1514  00014A  CFDE F02D          	movff	postinc2,??_Write_Flash+4
  1515  00014E  CFDD F02E          	movff	postdec2,??_Write_Flash+5
  1516  000152  502B               	movf	??_Write_Flash+2,w,c
  1517  000154  262D               	addwf	??_Write_Flash+4,f,c
  1518  000156  502C               	movf	??_Write_Flash+3,w,c
  1519  000158  222E               	addwfc	??_Write_Flash+5,f,c
  1520  00015A  5029               	movf	??_Write_Flash,w,c
  1521  00015C  182D               	xorwf	??_Write_Flash+4,w,c
  1522  00015E  E108               	bnz	l1702
  1523  000160  502A               	movf	??_Write_Flash+1,w,c
  1524  000162  182E               	xorwf	??_Write_Flash+5,w,c
  1525  000164  A4D8               	btfss	status,2,c
  1526  000166  D004               	goto	l167
  1527  000168                     u770:
  1528  000168  000A               	tblrd		*-	;# 
  1529                           
  1530                           ;pic18f_bootload.c: 287: StartWrite();
  1531  00016A  ECAF  F003         	call	_StartWrite	;wreg free
  1532  00016E  0009               	tblrd		*+	;# 
  1533  000170                     l167:
  1534  000170                     l1702:
  1535  000170  2A2F               	incf	Write_Flash@i,f,c
  1536  000172                     l164:
  1537  000172  502F               	movf	Write_Flash@i,w,c
  1538  000174  6E29               	movwf	??_Write_Flash& (0+255),c
  1539  000176  6A2A               	clrf	(??_Write_Flash+1)& (0+255),c
  1540  000178  0100               	movlb	0	; () banked
  1541  00017A  5161               	movf	(_frame+1)& (0+255),w,b
  1542  00017C  5C29               	subwf	??_Write_Flash,w,c
  1543  00017E  0100               	movlb	0	; () banked
  1544  000180  5162               	movf	(_frame+2)& (0+255),w,b
  1545  000182  582A               	subwfb	??_Write_Flash+1,w,c
  1546  000184  A0D8               	btfss	status,0,c
  1547  000186  D7BB               	goto	l165
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;pic18f_bootload.c: 289: }
  1551                           ;pic18f_bootload.c: 290: }
  1552                           ;pic18f_bootload.c: 291: frame.data[0] = 0x01;
  1553                           
  1554                           ; BSR set to: 0
  1555  000188  0E01               	movlw	1
  1556  00018A  0100               	movlb	0	; () banked
  1557  00018C  6F69               	movwf	(_frame+9)& (0+255),b
  1558                           
  1559                           ;pic18f_bootload.c: 292: EE_Key_1 = 0x00;
  1560  00018E  0E00               	movlw	0
  1561  000190  6E00               	movwf	0,c
  1562                           
  1563                           ;pic18f_bootload.c: 293: EE_Key_2 = 0x00;
  1564  000192  0E00               	movlw	0
  1565  000194  6E01               	movwf	1,c
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;pic18f_bootload.c: 294: return (10);
  1569  000196  0E0A               	movlw	10
  1570  000198  0012               	return	
  1571  00019A                     __end_of_Write_Flash:
  1572                           	opt stack 0
  1573                           stkptr	equ	0xFFC
  1574                           pclatu	equ	0xFFB
  1575                           pclath	equ	0xFFA
  1576                           tblptru	equ	0xFF8
  1577                           tblptrh	equ	0xFF7
  1578                           tblptrl	equ	0xFF6
  1579                           tablat	equ	0xFF5
  1580                           prodh	equ	0xFF4
  1581                           prodl	equ	0xFF3
  1582                           intcon	equ	0xFF2
  1583                           postinc0	equ	0xFEE
  1584                           fsr0h	equ	0xFEA
  1585                           fsr0l	equ	0xFE9
  1586                           wreg	equ	0xFE8
  1587                           fsr1h	equ	0xFE2
  1588                           fsr1l	equ	0xFE1
  1589                           indf2	equ	0xFDF
  1590                           postinc2	equ	0xFDE
  1591                           postdec2	equ	0xFDD
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function _Write_Config *****************
  1597 ;; Defined at:
  1598 ;;		line 363 in file "mcc_generated_files/pic18f_bootload.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  i               1   41[COMRAM] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      unsigned char 
  1605 ;; Registers used:
  1606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;Total ram usage:        3 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    3
  1619 ;; This function calls:
  1620 ;;		_StartWrite
  1621 ;; This function is called by:
  1622 ;;		_ProcessBootBuffer
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text9
  1627  000422                     __ptext9:
  1628                           	opt stack 0
  1629  000422                     _Write_Config:
  1630                           	opt stack 23
  1631                           
  1632                           ;pic18f_bootload.c: 365: TBLPTRL = frame.address_L;
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;incstack = 0
  1636  000422  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1637                           
  1638                           ;pic18f_bootload.c: 366: TBLPTRH = frame.address_H;
  1639  000426  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1640                           
  1641                           ;pic18f_bootload.c: 367: TBLPTRU = frame.address_U;
  1642  00042A  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1643                           
  1644                           ;pic18f_bootload.c: 368: if (TBLPTR < 0x76a)
  1645  00042E  50F8               	movf	tblptru,w,c	;volatile
  1646  000430  E10B               	bnz	l1782
  1647  000432  0E6A               	movlw	106
  1648  000434  5CF6               	subwf	tblptrl,w,c	;volatile
  1649  000436  0E07               	movlw	7
  1650  000438  58F7               	subwfb	tblptrh,w,c	;volatile
  1651  00043A  B0D8               	btfsc	status,0,c
  1652  00043C  D005               	goto	l188
  1653                           
  1654                           ;pic18f_bootload.c: 369: {
  1655                           ;pic18f_bootload.c: 370: frame.data[0] = 0xFE;
  1656  00043E  0EFE               	movlw	254
  1657  000440  0100               	movlb	0	; () banked
  1658  000442  6F69               	movwf	(_frame+9)& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;pic18f_bootload.c: 371: return (10);
  1662  000444  0E0A               	movlw	10
  1663                           
  1664                           ; BSR set to: 0
  1665  000446  0012               	return	
  1666  000448                     l188:
  1667  000448                     l1782:
  1668                           
  1669                           ;pic18f_bootload.c: 372: }
  1670                           ;pic18f_bootload.c: 373: if (TBLPTR > 0x20000F)
  1671  000448  0E10               	movlw	16
  1672  00044A  5CF6               	subwf	tblptrl,w,c	;volatile
  1673  00044C  0E00               	movlw	0
  1674  00044E  58F7               	subwfb	tblptrh,w,c	;volatile
  1675  000450  0E20               	movlw	32
  1676  000452  58F8               	subwfb	tblptru,w,c	;volatile
  1677  000454  A0D8               	btfss	status,0,c
  1678  000456  D002               	goto	l190
  1679                           
  1680                           ;pic18f_bootload.c: 374: NVMCON1 = 0xC4;
  1681  000458  0EC4               	movlw	196
  1682  00045A  D001               	goto	L9
  1683  00045C                     l190:
  1684                           
  1685                           ;pic18f_bootload.c: 375: else
  1686                           ;pic18f_bootload.c: 376: NVMCON1 = 0x84;
  1687  00045C  0E84               	movlw	132
  1688  00045E                     L9:
  1689  00045E  6E81               	movwf	3969,c	;volatile
  1690                           
  1691                           ;pic18f_bootload.c: 377: for (uint8_t i= 0; i < frame.data_length; i ++)
  1692  000460  0E00               	movlw	0
  1693  000462  6E2B               	movwf	Write_Config@i,c
  1694  000464  D013               	goto	l192
  1695  000466                     
  1696                           ;pic18f_bootload.c: 378: {
  1697                           ;pic18f_bootload.c: 379: TABLAT = frame.data[i];
  1698  000466  502B               	movf	Write_Config@i,w,c
  1699  000468  0D01               	mullw	1
  1700  00046A  0E09               	movlw	9
  1701  00046C  26F3               	addwf	prodl,f,c
  1702  00046E  0E00               	movlw	0
  1703  000470  22F4               	addwfc	prodh,f,c
  1704  000472  0E60               	movlw	low _frame
  1705  000474  24F3               	addwf	prodl,w,c
  1706  000476  6ED9               	movwf	fsr2l,c
  1707  000478  0E00               	movlw	high _frame
  1708  00047A  20F4               	addwfc	prodh,w,c
  1709  00047C  6EDA               	movwf	fsr2h,c
  1710  00047E  50DF               	movf	indf2,w,c
  1711  000480  6EF5               	movwf	tablat,c	;volatile
  1712  000482  000C               	tblwt		*	;# 
  1713                           
  1714                           ;pic18f_bootload.c: 381: StartWrite();
  1715  000484  ECAF  F003         	call	_StartWrite	;wreg free
  1716                           
  1717                           ;pic18f_bootload.c: 382: ++ TBLPTRL;
  1718  000488  2AF6               	incf	tblptrl,f,c	;volatile
  1719  00048A  2A2B               	incf	Write_Config@i,f,c
  1720  00048C                     l192:
  1721  00048C  502B               	movf	Write_Config@i,w,c
  1722  00048E  6E29               	movwf	??_Write_Config& (0+255),c
  1723  000490  6A2A               	clrf	(??_Write_Config+1)& (0+255),c
  1724  000492  0100               	movlb	0	; () banked
  1725  000494  5161               	movf	(_frame+1)& (0+255),w,b
  1726  000496  5C29               	subwf	??_Write_Config,w,c
  1727  000498  0100               	movlb	0	; () banked
  1728  00049A  5162               	movf	(_frame+2)& (0+255),w,b
  1729  00049C  582A               	subwfb	??_Write_Config+1,w,c
  1730  00049E  A0D8               	btfss	status,0,c
  1731  0004A0  D7E2               	goto	l193
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;pic18f_bootload.c: 383: }
  1735                           ;pic18f_bootload.c: 384: frame.data[0] = 0x01;
  1736                           
  1737                           ; BSR set to: 0
  1738  0004A2  0E01               	movlw	1
  1739  0004A4  0100               	movlb	0	; () banked
  1740  0004A6  6F69               	movwf	(_frame+9)& (0+255),b
  1741                           
  1742                           ;pic18f_bootload.c: 385: EE_Key_1 = 0x00;
  1743  0004A8  0E00               	movlw	0
  1744  0004AA  6E00               	movwf	0,c
  1745                           
  1746                           ;pic18f_bootload.c: 386: EE_Key_2 = 0x00;
  1747  0004AC  0E00               	movlw	0
  1748  0004AE  6E01               	movwf	1,c
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;pic18f_bootload.c: 387: return (10);
  1752  0004B0  0E0A               	movlw	10
  1753  0004B2  0012               	return	
  1754  0004B4                     __end_of_Write_Config:
  1755                           	opt stack 0
  1756                           stkptr	equ	0xFFC
  1757                           pclatu	equ	0xFFB
  1758                           pclath	equ	0xFFA
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           prodh	equ	0xFF4
  1764                           prodl	equ	0xFF3
  1765                           intcon	equ	0xFF2
  1766                           postinc0	equ	0xFEE
  1767                           fsr0h	equ	0xFEA
  1768                           fsr0l	equ	0xFE9
  1769                           wreg	equ	0xFE8
  1770                           fsr1h	equ	0xFE2
  1771                           fsr1l	equ	0xFE1
  1772                           indf2	equ	0xFDF
  1773                           postinc2	equ	0xFDE
  1774                           postdec2	equ	0xFDD
  1775                           fsr2h	equ	0xFDA
  1776                           fsr2l	equ	0xFD9
  1777                           status	equ	0xFD8
  1778                           
  1779 ;; *************** function _Read_Config *****************
  1780 ;; Defined at:
  1781 ;;		line 338 in file "mcc_generated_files/pic18f_bootload.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  i               1   41[COMRAM] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      unsigned char 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1798 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1799 ;;Total ram usage:        3 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    2
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_ProcessBootBuffer
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text10
  1810  0005A8                     __ptext10:
  1811                           	opt stack 0
  1812  0005A8                     _Read_Config:
  1813                           	opt stack 24
  1814                           
  1815                           ;pic18f_bootload.c: 340: TBLPTRL = frame.address_L;
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;incstack = 0
  1819  0005A8  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  1820                           
  1821                           ;pic18f_bootload.c: 341: TBLPTRH = frame.address_H;
  1822  0005AC  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  1823                           
  1824                           ;pic18f_bootload.c: 342: TBLPTRU = frame.address_U;
  1825  0005B0  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  1826                           
  1827                           ;pic18f_bootload.c: 343: NVMCON1 = 0xC0;
  1828  0005B4  0EC0               	movlw	192
  1829  0005B6  6E81               	movwf	3969,c	;volatile
  1830                           
  1831                           ;pic18f_bootload.c: 344: if (TBLPTR < 0x76a)
  1832  0005B8  50F8               	movf	tblptru,w,c	;volatile
  1833  0005BA  E10B               	bnz	l1760
  1834  0005BC  0E6A               	movlw	106
  1835  0005BE  5CF6               	subwf	tblptrl,w,c	;volatile
  1836  0005C0  0E07               	movlw	7
  1837  0005C2  58F7               	subwfb	tblptrh,w,c	;volatile
  1838  0005C4  B0D8               	btfsc	status,0,c
  1839  0005C6  D005               	goto	l181
  1840                           
  1841                           ;pic18f_bootload.c: 345: {
  1842                           ;pic18f_bootload.c: 346: frame.data[0] = 0xFE;
  1843  0005C8  0EFE               	movlw	254
  1844  0005CA  0100               	movlb	0	; () banked
  1845  0005CC  6F69               	movwf	(_frame+9)& (0+255),b
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;pic18f_bootload.c: 347: return (10);
  1849  0005CE  0E0A               	movlw	10
  1850                           
  1851                           ; BSR set to: 0
  1852  0005D0  0012               	return	
  1853  0005D2                     l181:
  1854  0005D2                     l1760:
  1855                           
  1856                           ;pic18f_bootload.c: 348: }
  1857                           ;pic18f_bootload.c: 349: for (uint8_t i = 0; i < frame.data_length; i++)
  1858  0005D2  0E00               	movlw	0
  1859  0005D4  6E2B               	movwf	Read_Config@i,c
  1860  0005D6  D010               	goto	l183
  1861  0005D8                     l184:
  1862                           
  1863                           ; BSR set to: 0
  1864  0005D8  0009               	tblrd		*+	;# 
  1865                           
  1866                           ;pic18f_bootload.c: 352: frame.data[i] = TABLAT;
  1867  0005DA  502B               	movf	Read_Config@i,w,c
  1868  0005DC  0D01               	mullw	1
  1869  0005DE  0E09               	movlw	9
  1870  0005E0  26F3               	addwf	prodl,f,c
  1871  0005E2  0E00               	movlw	0
  1872  0005E4  22F4               	addwfc	prodh,f,c
  1873  0005E6  0E60               	movlw	low _frame
  1874  0005E8  24F3               	addwf	prodl,w,c
  1875  0005EA  6ED9               	movwf	fsr2l,c
  1876  0005EC  0E00               	movlw	high _frame
  1877  0005EE  20F4               	addwfc	prodh,w,c
  1878  0005F0  6EDA               	movwf	fsr2h,c
  1879  0005F2  CFF5 FFDF          	movff	tablat,indf2	;volatile
  1880  0005F6  2A2B               	incf	Read_Config@i,f,c
  1881  0005F8                     l183:
  1882  0005F8  502B               	movf	Read_Config@i,w,c
  1883  0005FA  6E29               	movwf	??_Read_Config& (0+255),c
  1884  0005FC  6A2A               	clrf	(??_Read_Config+1)& (0+255),c
  1885  0005FE  0100               	movlb	0	; () banked
  1886  000600  5161               	movf	(_frame+1)& (0+255),w,b
  1887  000602  5C29               	subwf	??_Read_Config,w,c
  1888  000604  0100               	movlb	0	; () banked
  1889  000606  5162               	movf	(_frame+2)& (0+255),w,b
  1890  000608  582A               	subwfb	??_Read_Config+1,w,c
  1891  00060A  A0D8               	btfss	status,0,c
  1892  00060C  D7E5               	goto	l184
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;pic18f_bootload.c: 353: }
  1896                           ;pic18f_bootload.c: 354: return (9 + frame.data_length);
  1897                           
  1898                           ; BSR set to: 0
  1899  00060E  0100               	movlb	0	; () banked
  1900  000610  5161               	movf	(_frame+1)& (0+255),w,b
  1901  000612  0F09               	addlw	9
  1902  000614  0012               	return	
  1903  000616                     __end_of_Read_Config:
  1904                           	opt stack 0
  1905                           stkptr	equ	0xFFC
  1906                           pclatu	equ	0xFFB
  1907                           pclath	equ	0xFFA
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           prodh	equ	0xFF4
  1913                           prodl	equ	0xFF3
  1914                           intcon	equ	0xFF2
  1915                           postinc0	equ	0xFEE
  1916                           fsr0h	equ	0xFEA
  1917                           fsr0l	equ	0xFE9
  1918                           wreg	equ	0xFE8
  1919                           fsr1h	equ	0xFE2
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           postdec2	equ	0xFDD
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _Get_Version_Data *****************
  1929 ;; Defined at:
  1930 ;;		line 220 in file "mcc_generated_files/pic18f_bootload.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  i               1   39[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      unsigned char 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;Total ram usage:        1 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    2
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_ProcessBootBuffer
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text11
  1959  00038E                     __ptext11:
  1960                           	opt stack 0
  1961  00038E                     _Get_Version_Data:
  1962                           	opt stack 24
  1963                           
  1964                           ;pic18f_bootload.c: 222: frame.data[0] = 0x19;
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;incstack = 0
  1968  00038E  0E19               	movlw	25
  1969  000390  0100               	movlb	0	; () banked
  1970  000392  6F69               	movwf	(_frame+9)& (0+255),b
  1971                           
  1972                           ;pic18f_bootload.c: 223: frame.data[1] = 0x00;
  1973  000394  0E00               	movlw	0
  1974  000396  0100               	movlb	0	; () banked
  1975  000398  6F6A               	movwf	(_frame+10)& (0+255),b
  1976                           
  1977                           ;pic18f_bootload.c: 224: frame.data[2] = 0;
  1978  00039A  0E00               	movlw	0
  1979  00039C  0100               	movlb	0	; () banked
  1980  00039E  6F6B               	movwf	(_frame+11)& (0+255),b
  1981                           
  1982                           ;pic18f_bootload.c: 225: frame.data[3] = 1;
  1983  0003A0  0E01               	movlw	1
  1984  0003A2  0100               	movlb	0	; () banked
  1985  0003A4  6F6C               	movwf	(_frame+12)& (0+255),b
  1986                           
  1987                           ;pic18f_bootload.c: 226: frame.data[4] = 0;
  1988  0003A6  0E00               	movlw	0
  1989  0003A8  0100               	movlb	0	; () banked
  1990  0003AA  6F6D               	movwf	(_frame+13)& (0+255),b
  1991                           
  1992                           ;pic18f_bootload.c: 227: frame.data[5] = 0;
  1993  0003AC  0E00               	movlw	0
  1994  0003AE  0100               	movlb	0	; () banked
  1995  0003B0  6F6E               	movwf	(_frame+14)& (0+255),b
  1996                           
  1997                           ;pic18f_bootload.c: 228: TBLPTRU = 0x3F;
  1998  0003B2  0E3F               	movlw	63
  1999  0003B4  6EF8               	movwf	tblptru,c	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;pic18f_bootload.c: 229: TBLPTRH = 0xFF;
  2003  0003B6  68F7               	setf	tblptrh,c	;volatile
  2004                           
  2005                           ;pic18f_bootload.c: 230: TBLPTRL = 0xFE;
  2006  0003B8  0EFE               	movlw	254
  2007  0003BA  6EF6               	movwf	tblptrl,c	;volatile
  2008                           
  2009                           ; BSR set to: 0
  2010                           ;pic18f_bootload.c: 231: NVMCON1bits.NVMREG0 = 1;
  2011  0003BC  8C81               	bsf	3969,6,c	;volatile
  2012  0003BE  0009               	tblrd		*+	;# 
  2013                           
  2014                           ;pic18f_bootload.c: 233: frame.data[6] = TABLAT;
  2015  0003C0  CFF5 F06F          	movff	tablat,_frame+15	;volatile
  2016  0003C4  0009               	tblrd		*+	;# 
  2017                           
  2018                           ;pic18f_bootload.c: 235: frame.data[7] = TABLAT;
  2019  0003C6  CFF5 F070          	movff	tablat,_frame+16	;volatile
  2020                           
  2021                           ;pic18f_bootload.c: 236: frame.data[8] = 0;
  2022  0003CA  0E00               	movlw	0
  2023  0003CC  0100               	movlb	0	; () banked
  2024  0003CE  6F71               	movwf	(_frame+17)& (0+255),b
  2025                           
  2026                           ;pic18f_bootload.c: 237: frame.data[9] = 0;
  2027  0003D0  0E00               	movlw	0
  2028  0003D2  0100               	movlb	0	; () banked
  2029  0003D4  6F72               	movwf	(_frame+18)& (0+255),b
  2030                           
  2031                           ;pic18f_bootload.c: 239: frame.data[10] = 128;
  2032  0003D6  0E80               	movlw	128
  2033  0003D8  0100               	movlb	0	; () banked
  2034  0003DA  6F73               	movwf	(_frame+19)& (0+255),b
  2035                           
  2036                           ;pic18f_bootload.c: 240: frame.data[11] = 128;
  2037  0003DC  0E80               	movlw	128
  2038  0003DE  0100               	movlb	0	; () banked
  2039  0003E0  6F74               	movwf	(_frame+20)& (0+255),b
  2040                           
  2041                           ;pic18f_bootload.c: 242: TBLPTRU = 0x30;
  2042  0003E2  0E30               	movlw	48
  2043  0003E4  6EF8               	movwf	tblptru,c	;volatile
  2044                           
  2045                           ;pic18f_bootload.c: 243: TBLPTRH = 0x00;
  2046  0003E6  0E00               	movlw	0
  2047  0003E8  6EF7               	movwf	tblptrh,c	;volatile
  2048                           
  2049                           ;pic18f_bootload.c: 244: TBLPTRL = 0x00;
  2050  0003EA  0E00               	movlw	0
  2051  0003EC  6EF6               	movwf	tblptrl,c	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;pic18f_bootload.c: 245: NVMCON1bits.NVMREG0 = 1;
  2055  0003EE  8C81               	bsf	3969,6,c	;volatile
  2056                           
  2057                           ;pic18f_bootload.c: 246: for (uint8_t i= 12; i < 16; i++)
  2058  0003F0  0E0C               	movlw	12
  2059  0003F2  6E29               	movwf	Get_Version_Data@i,c
  2060  0003F4                     l1658:
  2061                           
  2062                           ; BSR set to: 0
  2063  0003F4  0E0F               	movlw	15
  2064  0003F6  6429               	cpfsgt	Get_Version_Data@i,c
  2065  0003F8  D001               	goto	l157
  2066  0003FA  D011               	goto	u730
  2067  0003FC                     l157:
  2068  0003FC  0009               	tblrd		*+	;# 
  2069                           
  2070                           ;pic18f_bootload.c: 249: frame.data[i] = TABLAT;
  2071  0003FE  5029               	movf	Get_Version_Data@i,w,c
  2072  000400  0D01               	mullw	1
  2073  000402  0E09               	movlw	9
  2074  000404  26F3               	addwf	prodl,f,c
  2075  000406  0E00               	movlw	0
  2076  000408  22F4               	addwfc	prodh,f,c
  2077  00040A  0E60               	movlw	low _frame
  2078  00040C  24F3               	addwf	prodl,w,c
  2079  00040E  6ED9               	movwf	fsr2l,c
  2080  000410  0E00               	movlw	high _frame
  2081  000412  20F4               	addwfc	prodh,w,c
  2082  000414  6EDA               	movwf	fsr2h,c
  2083  000416  CFF5 FFDF          	movff	tablat,indf2	;volatile
  2084  00041A  2A29               	incf	Get_Version_Data@i,f,c
  2085  00041C  D7EB               	goto	l1658
  2086  00041E                     u730:
  2087                           
  2088                           ;pic18f_bootload.c: 250: }
  2089                           ;pic18f_bootload.c: 252: return 25;
  2090  00041E  0E19               	movlw	25
  2091  000420  0012               	return	
  2092  000422                     __end_of_Get_Version_Data:
  2093                           	opt stack 0
  2094                           stkptr	equ	0xFFC
  2095                           pclatu	equ	0xFFB
  2096                           pclath	equ	0xFFA
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodh	equ	0xFF4
  2102                           prodl	equ	0xFF3
  2103                           intcon	equ	0xFF2
  2104                           postinc0	equ	0xFEE
  2105                           fsr0h	equ	0xFEA
  2106                           fsr0l	equ	0xFE9
  2107                           wreg	equ	0xFE8
  2108                           fsr1h	equ	0xFE2
  2109                           fsr1l	equ	0xFE1
  2110                           indf2	equ	0xFDF
  2111                           postinc2	equ	0xFDE
  2112                           postdec2	equ	0xFDD
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function _Erase_Flash *****************
  2118 ;; Defined at:
  2119 ;;		line 304 in file "mcc_generated_files/pic18f_bootload.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  i               2   39[COMRAM] unsigned int 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      unsigned char 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		_StartWrite
  2142 ;; This function is called by:
  2143 ;;		_ProcessBootBuffer
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text12
  2148  0004B4                     __ptext12:
  2149                           	opt stack 0
  2150  0004B4                     _Erase_Flash:
  2151                           	opt stack 23
  2152                           
  2153                           ;pic18f_bootload.c: 306: TBLPTRL = frame.address_L;
  2154                           
  2155                           ;incstack = 0
  2156  0004B4  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2157                           
  2158                           ;pic18f_bootload.c: 307: TBLPTRH = frame.address_H;
  2159  0004B8  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2160                           
  2161                           ;pic18f_bootload.c: 308: TBLPTRU = frame.address_U;
  2162  0004BC  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2163                           
  2164                           ;pic18f_bootload.c: 309: if (TBLPTR < 0x76a)
  2165  0004C0  50F8               	movf	tblptru,w,c	;volatile
  2166  0004C2  E10B               	bnz	l1722
  2167  0004C4  0E6A               	movlw	106
  2168  0004C6  5CF6               	subwf	tblptrl,w,c	;volatile
  2169  0004C8  0E07               	movlw	7
  2170  0004CA  58F7               	subwfb	tblptrh,w,c	;volatile
  2171  0004CC  B0D8               	btfsc	status,0,c
  2172  0004CE  D005               	goto	l173
  2173                           
  2174                           ;pic18f_bootload.c: 310: {
  2175                           ;pic18f_bootload.c: 311: frame.data[0] = 0xFE;
  2176  0004D0  0EFE               	movlw	254
  2177  0004D2  0100               	movlb	0	; () banked
  2178  0004D4  6F69               	movwf	(_frame+9)& (0+255),b
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;pic18f_bootload.c: 312: return (10);
  2182  0004D6  0E0A               	movlw	10
  2183                           
  2184                           ; BSR set to: 0
  2185  0004D8  0012               	return	
  2186  0004DA                     l173:
  2187  0004DA                     l1722:
  2188                           
  2189                           ;pic18f_bootload.c: 313: }
  2190                           ;pic18f_bootload.c: 314: for (uint16_t i=0; i < frame.data_length; i++)
  2191  0004DA  0E00               	movlw	0
  2192  0004DC  6E2A               	movwf	Erase_Flash@i+1,c
  2193  0004DE  0E00               	movlw	0
  2194  0004E0  6E29               	movwf	Erase_Flash@i,c
  2195  0004E2  D015               	goto	l175
  2196  0004E4                     
  2197                           ;pic18f_bootload.c: 315: {
  2198                           ;pic18f_bootload.c: 316: if (TBLPTR >= 131072)
  2199  0004E4  0E02               	movlw	2
  2200  0004E6  5CF8               	subwf	tblptru,w,c	;volatile
  2201  0004E8  A0D8               	btfss	status,0,c
  2202  0004EA  D005               	goto	l177
  2203                           
  2204                           ;pic18f_bootload.c: 317: {
  2205                           ;pic18f_bootload.c: 318: frame.data[0] = 0xFE;
  2206  0004EC  0EFE               	movlw	254
  2207  0004EE  0100               	movlb	0	; () banked
  2208  0004F0  6F69               	movwf	(_frame+9)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;pic18f_bootload.c: 319: return (10);
  2212  0004F2  0E0A               	movlw	10
  2213                           
  2214                           ; BSR set to: 0
  2215  0004F4  0012               	return	
  2216  0004F6                     l177:
  2217                           
  2218                           ;pic18f_bootload.c: 320: }
  2219                           ;pic18f_bootload.c: 321: NVMCON1 = 0x94;
  2220                           
  2221                           ; BSR set to: 0
  2222  0004F6  0E94               	movlw	148
  2223  0004F8  6E81               	movwf	3969,c	;volatile
  2224                           
  2225                           ;pic18f_bootload.c: 322: StartWrite();
  2226  0004FA  ECAF  F003         	call	_StartWrite	;wreg free
  2227                           
  2228                           ;pic18f_bootload.c: 323: TBLPTR += 128;
  2229  0004FE  0E80               	movlw	128
  2230  000500  26F6               	addwf	tblptrl,f,c	;volatile
  2231  000502  0E00               	movlw	0
  2232  000504  22F7               	addwfc	tblptrh,f,c	;volatile
  2233  000506  0E00               	movlw	0
  2234  000508  22F8               	addwfc	tblptru,f,c	;volatile
  2235  00050A  4A29               	infsnz	Erase_Flash@i,f,c
  2236  00050C  2A2A               	incf	Erase_Flash@i+1,f,c
  2237  00050E                     l175:
  2238  00050E  0100               	movlb	0	; () banked
  2239  000510  5161               	movf	(_frame+1)& (0+255),w,b
  2240  000512  5C29               	subwf	Erase_Flash@i,w,c
  2241  000514  0100               	movlb	0	; () banked
  2242  000516  5162               	movf	(_frame+2)& (0+255),w,b
  2243  000518  582A               	subwfb	Erase_Flash@i+1,w,c
  2244  00051A  A0D8               	btfss	status,0,c
  2245  00051C  D7E3               	goto	l176
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;pic18f_bootload.c: 324: }
  2249                           ;pic18f_bootload.c: 325: frame.data[0] = 0x01;
  2250                           
  2251                           ; BSR set to: 0
  2252  00051E  0E01               	movlw	1
  2253  000520  0100               	movlb	0	; () banked
  2254  000522  6F69               	movwf	(_frame+9)& (0+255),b
  2255                           
  2256                           ;pic18f_bootload.c: 326: frame.EE_key_1 = 0x00;
  2257  000524  0E00               	movlw	0
  2258  000526  0100               	movlb	0	; () banked
  2259  000528  6F63               	movwf	(_frame+3)& (0+255),b
  2260                           
  2261                           ;pic18f_bootload.c: 327: frame.EE_key_2 = 0x00;
  2262  00052A  0E00               	movlw	0
  2263  00052C  0100               	movlb	0	; () banked
  2264  00052E  6F64               	movwf	(_frame+4)& (0+255),b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;pic18f_bootload.c: 328: return (10);
  2268  000530  0E0A               	movlw	10
  2269  000532  0012               	return	
  2270  000534                     __end_of_Erase_Flash:
  2271                           	opt stack 0
  2272                           stkptr	equ	0xFFC
  2273                           pclatu	equ	0xFFB
  2274                           pclath	equ	0xFFA
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           prodh	equ	0xFF4
  2280                           prodl	equ	0xFF3
  2281                           intcon	equ	0xFF2
  2282                           postinc0	equ	0xFEE
  2283                           fsr0h	equ	0xFEA
  2284                           fsr0l	equ	0xFE9
  2285                           wreg	equ	0xFE8
  2286                           fsr1h	equ	0xFE2
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           postdec2	equ	0xFDD
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _StartWrite *****************
  2296 ;; Defined at:
  2297 ;;		line 421 in file "mcc_generated_files/pic18f_bootload.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		None
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_Write_Flash
  2322 ;;		_Erase_Flash
  2323 ;;		_Write_Config
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text13
  2328  00075E                     __ptext13:
  2329                           	opt stack 0
  2330  00075E                     _StartWrite:
  2331                           	opt stack 23
  2332                           
  2333                           ;pic18f_bootload.c: 423: NVMCON2 = EE_Key_1;
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;incstack = 0
  2337  00075E  C000 FF82          	movff	0,3970	;volatile
  2338                           
  2339                           ;pic18f_bootload.c: 424: NVMCON2 = EE_Key_2;
  2340  000762  C001 FF82          	movff	1,3970	;volatile
  2341                           
  2342                           ;pic18f_bootload.c: 425: NVMCON1bits.WR = 1;
  2343  000766  8281               	bsf	3969,1,c	;volatile
  2344                           
  2345                           ;pic18f_bootload.c: 426: return;
  2346  000768  0012               	return		;funcret
  2347  00076A                     __end_of_StartWrite:
  2348                           	opt stack 0
  2349                           stkptr	equ	0xFFC
  2350                           pclatu	equ	0xFFB
  2351                           pclath	equ	0xFFA
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           intcon	equ	0xFF2
  2359                           postinc0	equ	0xFEE
  2360                           fsr0h	equ	0xFEA
  2361                           fsr0l	equ	0xFE9
  2362                           wreg	equ	0xFE8
  2363                           fsr1h	equ	0xFE2
  2364                           fsr1l	equ	0xFE1
  2365                           indf2	equ	0xFDF
  2366                           postinc2	equ	0xFDE
  2367                           postdec2	equ	0xFDD
  2368                           fsr2h	equ	0xFDA
  2369                           fsr2l	equ	0xFD9
  2370                           status	equ	0xFD8
  2371                           
  2372 ;; *************** function _Calc_Checksum *****************
  2373 ;; Defined at:
  2374 ;;		line 398 in file "mcc_generated_files/pic18f_bootload.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  i               2   39[COMRAM] unsigned int 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;Total ram usage:        2 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    2
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_ProcessBootBuffer
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           	psect	text14
  2403  000616                     __ptext14:
  2404                           	opt stack 0
  2405  000616                     _Calc_Checksum:
  2406                           	opt stack 24
  2407                           
  2408                           ;pic18f_bootload.c: 400: TBLPTRL = frame.address_L;
  2409                           
  2410                           ;incstack = 0
  2411  000616  C065  FFF6         	movff	_frame+5,tblptrl	;volatile
  2412                           
  2413                           ;pic18f_bootload.c: 401: TBLPTRH = frame.address_H;
  2414  00061A  C066  FFF7         	movff	_frame+6,tblptrh	;volatile
  2415                           
  2416                           ;pic18f_bootload.c: 402: TBLPTRU = frame.address_U;
  2417  00061E  C067  FFF8         	movff	_frame+7,tblptru	;volatile
  2418                           
  2419                           ;pic18f_bootload.c: 403: NVMCON1 = 0x80;
  2420  000622  0E80               	movlw	128
  2421  000624  6E81               	movwf	3969,c	;volatile
  2422                           
  2423                           ;pic18f_bootload.c: 404: check_sum = 0;
  2424  000626  0E00               	movlw	0
  2425  000628  6E34               	movwf	_check_sum+1,c
  2426  00062A  0E00               	movlw	0
  2427  00062C  6E33               	movwf	_check_sum,c
  2428                           
  2429                           ;pic18f_bootload.c: 405: for (uint16_t i = 0;i < frame.data_length; i += 2)
  2430  00062E  0E00               	movlw	0
  2431  000630  6E2A               	movwf	Calc_Checksum@i+1,c
  2432  000632  0E00               	movlw	0
  2433  000634  6E29               	movwf	Calc_Checksum@i,c
  2434  000636  D00C               	goto	l197
  2435  000638                     l198:
  2436                           
  2437                           ; BSR set to: 0
  2438  000638  0009               	tblrd		*+	;# 
  2439                           
  2440                           ;pic18f_bootload.c: 408: check_sum += (uint16_t)TABLAT;
  2441  00063A  50F5               	movf	tablat,w,c	;volatile
  2442  00063C  2633               	addwf	_check_sum,f,c
  2443  00063E  0E00               	movlw	0
  2444  000640  2234               	addwfc	_check_sum+1,f,c
  2445  000642  0009               	tblrd		*+	;# 
  2446                           
  2447                           ;pic18f_bootload.c: 410: check_sum += (uint16_t)TABLAT << 8;
  2448  000644  50F5               	movf	tablat,w,c	;volatile
  2449  000646  2634               	addwf	_check_sum+1,f,c
  2450  000648  0E02               	movlw	2
  2451  00064A  2629               	addwf	Calc_Checksum@i,f,c
  2452  00064C  0E00               	movlw	0
  2453  00064E  222A               	addwfc	Calc_Checksum@i+1,f,c
  2454  000650                     l197:
  2455  000650  0100               	movlb	0	; () banked
  2456  000652  5161               	movf	(_frame+1)& (0+255),w,b
  2457  000654  5C29               	subwf	Calc_Checksum@i,w,c
  2458  000656  0100               	movlb	0	; () banked
  2459  000658  5162               	movf	(_frame+2)& (0+255),w,b
  2460  00065A  582A               	subwfb	Calc_Checksum@i+1,w,c
  2461  00065C  A0D8               	btfss	status,0,c
  2462  00065E  D7EC               	goto	l198
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;pic18f_bootload.c: 411: }
  2466                           ;pic18f_bootload.c: 412: frame.data[0] = (uint8_t) (check_sum & 0x00FF);
  2467  000660  C033  F069         	movff	_check_sum,_frame+9
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;pic18f_bootload.c: 413: frame.data[1] = (uint8_t)((check_sum & 0xFF00) >> 8);
  2471  000664  5034               	movf	_check_sum+1,w,c
  2472  000666  0100               	movlb	0	; () banked
  2473  000668  6F6A               	movwf	(_frame+10)& (0+255),b
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;pic18f_bootload.c: 414: return (11);
  2477  00066A  0E0B               	movlw	11
  2478  00066C  0012               	return	
  2479  00066E                     __end_of_Calc_Checksum:
  2480                           	opt stack 0
  2481                           stkptr	equ	0xFFC
  2482                           pclatu	equ	0xFFB
  2483                           pclath	equ	0xFFA
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           postinc0	equ	0xFEE
  2492                           fsr0h	equ	0xFEA
  2493                           fsr0l	equ	0xFE9
  2494                           wreg	equ	0xFE8
  2495                           fsr1h	equ	0xFE2
  2496                           fsr1l	equ	0xFE1
  2497                           indf2	equ	0xFDF
  2498                           postinc2	equ	0xFDE
  2499                           postdec2	equ	0xFDD
  2500                           fsr2h	equ	0xFDA
  2501                           fsr2l	equ	0xFD9
  2502                           status	equ	0xFD8
  2503                           
  2504 ;; *************** function _EUSART1_Write *****************
  2505 ;; Defined at:
  2506 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  txData          1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  txData          1   39[COMRAM] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;Total ram usage:        1 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    2
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_Run_Bootloader
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text15
  2535  000750                     __ptext15:
  2536                           	opt stack 0
  2537  000750                     _EUSART1_Write:
  2538                           	opt stack 25
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;incstack = 0
  2542                           ;EUSART1_Write@txData stored from wreg
  2543  000750  6E29               	movwf	EUSART1_Write@txData,c
  2544  000752                     
  2545                           ;eusart1.c: 99: {
  2546                           
  2547                           ;eusart1.c: 98: while(0 == PIR3bits.TX1IF)
  2548  000752  010E               	movlb	14	; () banked
  2549  000754  A9CD               	btfss	205,4,b	;volatile
  2550  000756  D7FD               	goto	l1862
  2551                           
  2552                           ; BSR set to: 14
  2553                           ;eusart1.c: 100: }
  2554                           ;eusart1.c: 102: TX1REG = txData;
  2555                           
  2556                           ; BSR set to: 14
  2557  000758  C029  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2558                           
  2559                           ; BSR set to: 14
  2560  00075C  0012               	return		;funcret
  2561  00075E                     __end_of_EUSART1_Write:
  2562                           	opt stack 0
  2563                           stkptr	equ	0xFFC
  2564                           pclatu	equ	0xFFB
  2565                           pclath	equ	0xFFA
  2566                           tblptru	equ	0xFF8
  2567                           tblptrh	equ	0xFF7
  2568                           tblptrl	equ	0xFF6
  2569                           tablat	equ	0xFF5
  2570                           prodh	equ	0xFF4
  2571                           prodl	equ	0xFF3
  2572                           intcon	equ	0xFF2
  2573                           postinc0	equ	0xFEE
  2574                           fsr0h	equ	0xFEA
  2575                           fsr0l	equ	0xFE9
  2576                           wreg	equ	0xFE8
  2577                           fsr1h	equ	0xFE2
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _EUSART1_Read *****************
  2587 ;; Defined at:
  2588 ;;		line 77 in file "mcc_generated_files/eusart1.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      unsigned char 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    2
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_Run_Bootloader
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text16
  2617  00073E                     __ptext16:
  2618                           	opt stack 0
  2619  00073E                     _EUSART1_Read:
  2620                           	opt stack 25
  2621                           
  2622                           ;eusart1.c: 81: {
  2623                           
  2624                           ;eusart1.c: 80: while(!PIR3bits.RC1IF)
  2625                           
  2626                           ; BSR set to: 14
  2627                           ;incstack = 0
  2628  00073E  010E               	movlb	14	; () banked
  2629  000740  ABCD               	btfss	205,5,b	;volatile
  2630  000742  D7FD               	goto	_EUSART1_Read
  2631                           
  2632                           ; BSR set to: 14
  2633                           ;eusart1.c: 82: }
  2634                           ;eusart1.c: 85: if(1 == RC1STAbits.OERR)
  2635  000744  A29D               	btfss	3997,1,c	;volatile
  2636  000746  D002               	goto	l321
  2637                           
  2638                           ; BSR set to: 14
  2639                           ;eusart1.c: 86: {
  2640                           ;eusart1.c: 89: RC1STAbits.SPEN = 0;
  2641  000748  9E9D               	bcf	3997,7,c	;volatile
  2642                           
  2643                           ;eusart1.c: 90: RC1STAbits.SPEN = 1;
  2644  00074A  8E9D               	bsf	3997,7,c	;volatile
  2645  00074C                     l321:
  2646                           
  2647                           ; BSR set to: 14
  2648                           ;eusart1.c: 91: }
  2649                           ;eusart1.c: 93: return RC1REG;
  2650                           
  2651                           ; BSR set to: 14
  2652  00074C  5099               	movf	3993,w,c	;volatile
  2653  00074E  0012               	return	
  2654  000750                     __end_of_EUSART1_Read:
  2655                           	opt stack 0
  2656                           stkptr	equ	0xFFC
  2657                           pclatu	equ	0xFFB
  2658                           pclath	equ	0xFFA
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           prodh	equ	0xFF4
  2664                           prodl	equ	0xFF3
  2665                           intcon	equ	0xFF2
  2666                           postinc0	equ	0xFEE
  2667                           fsr0h	equ	0xFEA
  2668                           fsr0l	equ	0xFE9
  2669                           wreg	equ	0xFE8
  2670                           fsr1h	equ	0xFE2
  2671                           fsr1l	equ	0xFE1
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           postdec2	equ	0xFDD
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _Check_Device_Reset *****************
  2680 ;; Defined at:
  2681 ;;		line 434 in file "mcc_generated_files/pic18f_bootload.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_Run_Bootloader
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text17
  2710  00066E                     __ptext17:
  2711                           	opt stack 0
  2712  00066E                     _Check_Device_Reset:
  2713                           	opt stack 25
  2714                           
  2715                           ;pic18f_bootload.c: 436: if (reset_pending == 1)
  2716                           
  2717                           ; BSR set to: 14
  2718                           ;incstack = 0
  2719  00066E  0435               	decf	_reset_pending,w,c
  2720  000670  A4D8               	btfss	status,2,c
  2721  000672  0012               	return	
  2722                           
  2723                           ;pic18f_bootload.c: 437: {
  2724                           ;pic18f_bootload.c: 441: TBLPTR = 131072 - 1;
  2725  000674  0EFF               	movlw	255
  2726  000676  6EF6               	movwf	tblptrl,c	;volatile
  2727  000678  0EFF               	movlw	255
  2728  00067A  6EF7               	movwf	tblptrh,c	;volatile
  2729  00067C  0E01               	movlw	1
  2730  00067E  6EF8               	movwf	tblptru,c	;volatile
  2731                           
  2732                           ;pic18f_bootload.c: 442: NVMCON1 = 0x84;
  2733  000680  0E84               	movlw	132
  2734  000682  6E81               	movwf	3969,c	;volatile
  2735                           
  2736                           ;pic18f_bootload.c: 443: TABLAT = 0x55;
  2737  000684  0E55               	movlw	85
  2738  000686  6EF5               	movwf	tablat,c	;volatile
  2739  000688  000C               	tblwt		*	;# 
  2740                           
  2741                           ;pic18f_bootload.c: 445: NVMCON2 = 0x55;
  2742  00068A  0E55               	movlw	85
  2743  00068C  6E82               	movwf	3970,c	;volatile
  2744                           
  2745                           ;pic18f_bootload.c: 446: NVMCON2 = 0xAA;
  2746  00068E  0EAA               	movlw	170
  2747  000690  6E82               	movwf	3970,c	;volatile
  2748                           
  2749                           ;pic18f_bootload.c: 447: NVMCON1bits.WR = 1;
  2750  000692  8281               	bsf	3969,1,c	;volatile
  2751  000694  00FF               	reset		;# 
  2752  000696  0012               	return	
  2753  000698                     __end_of_Check_Device_Reset:
  2754                           	opt stack 0
  2755                           stkptr	equ	0xFFC
  2756                           pclatu	equ	0xFFB
  2757                           pclath	equ	0xFFA
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           fsr0h	equ	0xFEA
  2767                           fsr0l	equ	0xFE9
  2768                           wreg	equ	0xFE8
  2769                           fsr1h	equ	0xFE2
  2770                           fsr1l	equ	0xFE1
  2771                           indf2	equ	0xFDF
  2772                           postinc2	equ	0xFDE
  2773                           postdec2	equ	0xFDD
  2774                           fsr2h	equ	0xFDA
  2775                           fsr2l	equ	0xFD9
  2776                           status	equ	0xFD8
  2777                           
  2778 ;; *************** function _Bootload_Required *****************
  2779 ;; Defined at:
  2780 ;;		line 154 in file "mcc_generated_files/pic18f_bootload.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      unsigned char 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    2
  2801 ;; This function calls:
  2802 ;;		Nothing
  2803 ;; This function is called by:
  2804 ;;		_BOOTLOADER_Initialize
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text18
  2809  0006BE                     __ptext18:
  2810                           	opt stack 0
  2811  0006BE                     _Bootload_Required:
  2812                           	opt stack 26
  2813                           
  2814                           ;pic18f_bootload.c: 164: TBLPTR = 131072 - 1;
  2815                           
  2816                           ;incstack = 0
  2817  0006BE  0EFF               	movlw	255
  2818  0006C0  6EF6               	movwf	tblptrl,c	;volatile
  2819  0006C2  0EFF               	movlw	255
  2820  0006C4  6EF7               	movwf	tblptrh,c	;volatile
  2821  0006C6  0E01               	movlw	1
  2822  0006C8  6EF8               	movwf	tblptru,c	;volatile
  2823                           
  2824                           ;pic18f_bootload.c: 165: NVMCON1 = 0x80;
  2825  0006CA  0E80               	movlw	128
  2826  0006CC  6E81               	movwf	3969,c	;volatile
  2827  0006CE  0009               	tblrd		*+	;# 
  2828                           
  2829                           ;pic18f_bootload.c: 167: if (((uint16_t)TABLAT) != 0x55)
  2830  0006D0  0E55               	movlw	85
  2831  0006D2  18F5               	xorwf	tablat,w,c	;volatile
  2832  0006D4  B4D8               	btfsc	status,2,c
  2833  0006D6  D002               	goto	l140
  2834                           
  2835                           ;pic18f_bootload.c: 168: {
  2836                           ;pic18f_bootload.c: 169: return (1);
  2837  0006D8  0E01               	movlw	1
  2838  0006DA  0012               	return	
  2839  0006DC                     l140:
  2840                           
  2841                           ;pic18f_bootload.c: 170: }
  2842                           ;pic18f_bootload.c: 171: return (0);
  2843  0006DC  0E00               	movlw	0
  2844  0006DE  0012               	return	
  2845  0006E0                     __end_of_Bootload_Required:
  2846                           	opt stack 0
  2847                           stkptr	equ	0xFFC
  2848                           pclatu	equ	0xFFB
  2849                           pclath	equ	0xFFA
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           postinc0	equ	0xFEE
  2858                           fsr0h	equ	0xFEA
  2859                           fsr0l	equ	0xFE9
  2860                           wreg	equ	0xFE8
  2861                           fsr1h	equ	0xFE2
  2862                           fsr1l	equ	0xFE1
  2863                           indf2	equ	0xFDF
  2864                           postinc2	equ	0xFDE
  2865                           postdec2	equ	0xFDD
  2866                           fsr2h	equ	0xFDA
  2867                           fsr2l	equ	0xFD9
  2868                           status	equ	0xFD8
  2869                           
  2870 ;; *************** function _service_isr_low *****************
  2871 ;; Defined at:
  2872 ;;		line 135 in file "mcc_generated_files/pic18f_bootload.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		None
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;Total ram usage:       21 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		Interrupt level 1
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	intcodelo
  2901  000018                     __pintcodelo:
  2902                           	opt stack 0
  2903  000018                     _service_isr_low:
  2904                           	opt stack 23
  2905                           
  2906                           ;incstack = 0
  2907  000018  8039               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2908  00001A  CFD8 F014          	movff	status,??_service_isr_low
  2909  00001E  CFE8 F015          	movff	wreg,??_service_isr_low+1
  2910  000022  CFE0 F016          	movff	bsr,??_service_isr_low+2
  2911  000026  CFFA F017          	movff	pclath,??_service_isr_low+3
  2912  00002A  CFFB F018          	movff	pclatu,??_service_isr_low+4
  2913  00002E  CFE9 F019          	movff	fsr0l,??_service_isr_low+5
  2914  000032  CFEA F01A          	movff	fsr0h,??_service_isr_low+6
  2915  000036  CFE1 F01B          	movff	fsr1l,??_service_isr_low+7
  2916  00003A  CFE2 F01C          	movff	fsr1h,??_service_isr_low+8
  2917  00003E  CFD9 F01D          	movff	fsr2l,??_service_isr_low+9
  2918  000042  CFDA F01E          	movff	fsr2h,??_service_isr_low+10
  2919  000046  CFF3 F01F          	movff	prodl,??_service_isr_low+11
  2920  00004A  CFF4 F020          	movff	prodh,??_service_isr_low+12
  2921  00004E  CFF6 F021          	movff	tblptrl,??_service_isr_low+13
  2922  000052  CFF7 F022          	movff	tblptrh,??_service_isr_low+14
  2923  000056  CFF8 F023          	movff	tblptru,??_service_isr_low+15
  2924  00005A  CFF5 F024          	movff	tablat,??_service_isr_low+16
  2925  00005E  C039  F025         	movff	btemp,??_service_isr_low+17
  2926  000062  C03A  F026         	movff	btemp+1,??_service_isr_low+18
  2927  000066  C03B  F027         	movff	btemp+2,??_service_isr_low+19
  2928  00006A  C03C  F028         	movff	btemp+3,??_service_isr_low+20
  2929  00006E  EFB9 F003          	goto	1906	;# 
  2930  000072  C028  F03C         	movff	??_service_isr_low+20,btemp+3
  2931  000076  C027  F03B         	movff	??_service_isr_low+19,btemp+2
  2932  00007A  C026  F03A         	movff	??_service_isr_low+18,btemp+1
  2933  00007E  C025  F039         	movff	??_service_isr_low+17,btemp
  2934  000082  C024  FFF5         	movff	??_service_isr_low+16,tablat
  2935  000086  C023  FFF8         	movff	??_service_isr_low+15,tblptru
  2936  00008A  C022  FFF7         	movff	??_service_isr_low+14,tblptrh
  2937  00008E  C021  FFF6         	movff	??_service_isr_low+13,tblptrl
  2938  000092  C020  FFF4         	movff	??_service_isr_low+12,prodh
  2939  000096  C01F  FFF3         	movff	??_service_isr_low+11,prodl
  2940  00009A  C01E  FFDA         	movff	??_service_isr_low+10,fsr2h
  2941  00009E  C01D  FFD9         	movff	??_service_isr_low+9,fsr2l
  2942  0000A2  C01C  FFE2         	movff	??_service_isr_low+8,fsr1h
  2943  0000A6  C01B  FFE1         	movff	??_service_isr_low+7,fsr1l
  2944  0000AA  C01A  FFEA         	movff	??_service_isr_low+6,fsr0h
  2945  0000AE  C019  FFE9         	movff	??_service_isr_low+5,fsr0l
  2946  0000B2  C018  FFFB         	movff	??_service_isr_low+4,pclatu
  2947  0000B6  C017  FFFA         	movff	??_service_isr_low+3,pclath
  2948  0000BA  C016  FFE0         	movff	??_service_isr_low+2,bsr
  2949  0000BE  C015  FFE8         	movff	??_service_isr_low+1,wreg
  2950  0000C2  C014  FFD8         	movff	??_service_isr_low,status
  2951  0000C6  9039               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2952  0000C8  0010               	retfie	
  2953  0000CA                     __end_of_service_isr_low:
  2954                           	opt stack 0
  2955                           stkptr	equ	0xFFC
  2956                           pclatu	equ	0xFFB
  2957                           pclath	equ	0xFFA
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           prodh	equ	0xFF4
  2963                           prodl	equ	0xFF3
  2964                           intcon	equ	0xFF2
  2965                           postinc0	equ	0xFEE
  2966                           fsr0h	equ	0xFEA
  2967                           fsr0l	equ	0xFE9
  2968                           wreg	equ	0xFE8
  2969                           fsr1h	equ	0xFE2
  2970                           fsr1l	equ	0xFE1
  2971                           bsr	equ	0xFE0
  2972                           indf2	equ	0xFDF
  2973                           postinc2	equ	0xFDE
  2974                           postdec2	equ	0xFDD
  2975                           fsr2h	equ	0xFDA
  2976                           fsr2l	equ	0xFD9
  2977                           status	equ	0xFD8
  2978                           
  2979 ;; *************** function _service_isr_high *****************
  2980 ;; Defined at:
  2981 ;;		line 129 in file "mcc_generated_files/pic18f_bootload.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		None
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;Total ram usage:       18 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		Interrupt level 2
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	intcode
  3009  000008                     __pintcode:
  3010                           	opt stack 0
  3011  000008                     _service_isr_high:
  3012                           	opt stack 23
  3013                           
  3014                           ;incstack = 0
  3015  000008  8239               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3016  00000A  EF31  F001         	goto	int_func
  3017                           stkptr	equ	0xFFC
  3018                           pclatu	equ	0xFFB
  3019                           pclath	equ	0xFFA
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           postinc0	equ	0xFEE
  3028                           fsr0h	equ	0xFEA
  3029                           fsr0l	equ	0xFE9
  3030                           wreg	equ	0xFE8
  3031                           fsr1h	equ	0xFE2
  3032                           fsr1l	equ	0xFE1
  3033                           bsr	equ	0xFE0
  3034                           indf2	equ	0xFDF
  3035                           postinc2	equ	0xFDE
  3036                           postdec2	equ	0xFDD
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8
  3040                           stkptr	equ	0xFFC
  3041                           pclatu	equ	0xFFB
  3042                           pclath	equ	0xFFA
  3043                           tblptru	equ	0xFF8
  3044                           tblptrh	equ	0xFF7
  3045                           tblptrl	equ	0xFF6
  3046                           tablat	equ	0xFF5
  3047                           prodh	equ	0xFF4
  3048                           prodl	equ	0xFF3
  3049                           intcon	equ	0xFF2
  3050                           postinc0	equ	0xFEE
  3051                           fsr0h	equ	0xFEA
  3052                           fsr0l	equ	0xFE9
  3053                           wreg	equ	0xFE8
  3054                           fsr1h	equ	0xFE2
  3055                           fsr1l	equ	0xFE1
  3056                           bsr	equ	0xFE0
  3057                           indf2	equ	0xFDF
  3058                           postinc2	equ	0xFDE
  3059                           postdec2	equ	0xFDD
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           
  3064                           	psect	rparam
  3065  0000                     stkptr	equ	0xFFC
  3066                           pclatu	equ	0xFFB
  3067                           pclath	equ	0xFFA
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           intcon	equ	0xFF2
  3075                           postinc0	equ	0xFEE
  3076                           fsr0h	equ	0xFEA
  3077                           fsr0l	equ	0xFE9
  3078                           wreg	equ	0xFE8
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           bsr	equ	0xFE0
  3082                           indf2	equ	0xFDF
  3083                           postinc2	equ	0xFDE
  3084                           postdec2	equ	0xFDD
  3085                           fsr2h	equ	0xFDA
  3086                           fsr2l	equ	0xFD9
  3087                           status	equ	0xFD8
  3088                           
  3089                           	psect	temp
  3090  000039                     btemp:
  3091                           	opt stack 0
  3092  000039                     	ds	1
  3093  0000                     int$flags	set	btemp
  3094  0000                     wtemp6	set	btemp+1
  3095                           stkptr	equ	0xFFC
  3096                           pclatu	equ	0xFFB
  3097                           pclath	equ	0xFFA
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           prodh	equ	0xFF4
  3103                           prodl	equ	0xFF3
  3104                           intcon	equ	0xFF2
  3105                           postinc0	equ	0xFEE
  3106                           fsr0h	equ	0xFEA
  3107                           fsr0l	equ	0xFE9
  3108                           wreg	equ	0xFE8
  3109                           fsr1h	equ	0xFE2
  3110                           fsr1l	equ	0xFE1
  3111                           bsr	equ	0xFE0
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      55
    BANK0           160      3      76
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Run_Bootloader->_ProcessBootBuffer
    _ProcessBootBuffer->_Write_Flash

Critical Paths under _service_isr_low in COMRAM

    None.

Critical Paths under _service_isr_high in COMRAM

    None.

Critical Paths under _main in BANK0

    _BOOTLOADER_Initialize->_Run_Bootloader

Critical Paths under _service_isr_low in BANK0

    None.

Critical Paths under _service_isr_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _service_isr_low in BANK1

    None.

Critical Paths under _service_isr_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _service_isr_low in BANK2

    None.

Critical Paths under _service_isr_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _service_isr_low in BANK3

    None.

Critical Paths under _service_isr_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _service_isr_low in BANK4

    None.

Critical Paths under _service_isr_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _service_isr_low in BANK5

    None.

Critical Paths under _service_isr_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _service_isr_low in BANK6

    None.

Critical Paths under _service_isr_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _service_isr_low in BANK7

    None.

Critical Paths under _service_isr_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _service_isr_low in BANK8

    None.

Critical Paths under _service_isr_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _service_isr_low in BANK9

    None.

Critical Paths under _service_isr_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _service_isr_low in BANK10

    None.

Critical Paths under _service_isr_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _service_isr_low in BANK11

    None.

Critical Paths under _service_isr_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _service_isr_low in BANK12

    None.

Critical Paths under _service_isr_high in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _service_isr_low in BANK13

    None.

Critical Paths under _service_isr_high in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _service_isr_low in BANK14

    None.

Critical Paths under _service_isr_high in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     784
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     784
              _BOOTLOADER_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BOOTLOADER_Initialize                                0     0      0     769
                  _Bootload_Required
                     _Run_Bootloader
 ---------------------------------------------------------------------------------
 (3) _Run_Bootloader                                       3     3      0     769
                                              0 BANK0      3     3      0
                 _Check_Device_Reset
                       _EUSART1_Read
                      _EUSART1_Write
                  _ProcessBootBuffer
 ---------------------------------------------------------------------------------
 (4) _ProcessBootBuffer                                    1     1      0     463
                                             46 COMRAM     1     1      0
                      _Calc_Checksum
                        _Erase_Flash
                   _Get_Version_Data
                        _Read_Config
                       _Write_Config
                        _Write_Flash
 ---------------------------------------------------------------------------------
 (5) _Write_Flash                                          7     7      0      99
                                             39 COMRAM     7     7      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Write_Config                                         3     3      0      68
                                             39 COMRAM     3     3      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (5) _Read_Config                                          3     3      0      68
                                             39 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _Get_Version_Data                                     1     1      0      99
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Erase_Flash                                          2     2      0      37
                                             39 COMRAM     2     2      0
                         _StartWrite
 ---------------------------------------------------------------------------------
 (6) _StartWrite                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Calc_Checksum                                        2     2      0      37
                                             39 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                             39 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Check_Device_Reset                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Bootload_Required                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _service_isr_low                                     21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _service_isr_high                                    18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _BOOTLOADER_Initialize
       _Bootload_Required
       _Run_Bootloader
         _Check_Device_Reset
         _EUSART1_Read
         _EUSART1_Write
         _ProcessBootBuffer
           _Calc_Checksum
           _Erase_Flash
             _StartWrite
           _Get_Version_Data
           _Read_Config
           _Write_Config
             _StartWrite
           _Write_Flash
             _StartWrite
     _EUSART1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 _service_isr_low (ROOT)

 _service_isr_high (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E86      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      4C       5       47.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      37       1       58.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83       6        0.0%
DATA                 0      0      83       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Nov 05 20:48:12 2017

                  ??_Erase_Flash 0029                      __CFG_CP$OFF 000000  
                             bsr 000FE0           __size_of_Calc_Checksum 0058  
                    __CFG_LVP$ON 000000                              l140 06DC  
                            l150 0556                              l151 055C  
                            l231 01A4                              l144 0574  
                            l152 0562                              l232 01AE  
                            l321 074C                              l153 056A  
                            l145 053E                              l241 0254  
                            l162 00F8                              l146 05A4  
                            l242 0238                              l147 0544  
                            l235 01C4                              l164 0172  
                            l148 054A                              l173 04DA  
                            l157 03FC                              l181 05D2  
                            l165 00FE                              l149 0550  
                            l237 0216                              l190 045C  
                            l166 012C                              l175 050E  
                            l183 05F8                              l167 0170  
                            l335 0012                              l176 04E4  
                            l184 05D8                              l192 048C  
                            l177 04F6                              l193 0466  
                            l188 0448                              l197 0650  
                            l198 0638             __size_of_Write_Flash 00CC  
                            _GIE 007F97                              u310 038A  
                   __CFG_CPD$OFF 000000                              u730 041E  
                            u770 0168                              u980 020E  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000F9E            _BOOTLOADER_Initialize 0716  
                   _BAUD1CONbits 000F9F                     __CFG_ZCD$OFF 000000  
                           l1702 0170                             l1722 04DA  
                           l1760 05D2                             l1658 03F4  
                           l1684 00F8                             l1862 0752  
                           l1782 0448                             _LATA 000F83  
                           _LATB 000F84            __size_of_Write_Config 0092  
                           _LATC 000F85                             _WPUA 000F10  
                           _WPUB 000F18                             _WPUC 000F20  
                           _WPUE 000F2D                    _EUSART1_Write 0750  
                  __CFG_FCMEN$ON 000000                             _main 000E  
                  ?_EUSART1_Read 0002                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           btemp 0039                             prodh 000FF4  
                           prodl 000FF3                             start 00CA  
                  __CFG_CSWEN$ON 000000                     ___param_bank 000000  
                  ??_Read_Config 0029                    __CFG_SCANE$ON 000000  
       __size_of_service_isr_low 00B2       __size_of_ProcessBootBuffer 0074  
 __size_of_OSCILLATOR_Initialize 0020    __end_of_OSCILLATOR_Initialize 0700  
                          ?_main 0002                    __CFG_WDTE$OFF 000000  
            __end_of_Erase_Flash 0534                   __CFG_DEBUG$OFF 000000  
                          _OSCEN 000EDC                            _TRISA 000F88  
                          _TRISB 000F89                            _TRISC 000F8A  
                   _Write_Config 0422                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
                  __CFG_WRT5$OFF 000000                    __CFG_WRT6$OFF 000000  
                  __CFG_WRT7$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                   __CFG_EBTR4$OFF 000000  
                 __CFG_EBTR5$OFF 000000                   __CFG_EBTR6$OFF 000000  
                 __CFG_EBTR7$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                            _frame 0060  
             __CFG_MCLRE$EXTMCLR 000000                   ?_EUSART1_Write 0002  
                          pclath 000FFA                            tablat 000FF5  
                  _Calc_Checksum 0616                   ??_EUSART1_Read 0029  
                          status 000FD8                            wtemp6 003A  
                __initialization 0698       __end_of_EUSART1_Initialize 0716  
                   __end_of_main 0014                           ??_main 0031  
                  __activetblptr 000002              __end_of_Read_Config 0616  
         ?_BOOTLOADER_Initialize 0002         __end_of_service_isr_high 02FA  
                         _ANSELA 000F11                           _ANSELB 000F19  
                         _ANSELC 000F21                   ?_Calc_Checksum 0002  
                         _RC1REG 000F99                           _RC1STA 000F9D  
                         _ODCONA 000F0F                           _ODCONB 000F17  
                         _ODCONC 000F1F                           _RC6PPS 000EFD  
                 __CFG_WDTCCS$SC 000000                           _TABLAT 000FF5  
                         _OSCFRQ 000EDE                           _TBLPTR 000FF6  
                         _TX1REG 000F9A                           _TX1STA 000F9E  
                         _STKPTR 000FFC        __size_of_Get_Version_Data 0094  
                 __CFG_PWRTE$OFF 000000                   __CFG_XINST$OFF 000000  
                    _Erase_Flash 04B4                   __CFG_STVREN$ON 000000  
                         clear_0 069E                           clear_1 06AA  
    __size_of_Check_Device_Reset 002A                ??_service_isr_low 0014  
                   Read_Config@i 002B                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                ??_EUSART1_Write 0029                       _StartWrite 075E  
              _SYSTEM_Initialize 072C                       __accesstop 0060  
        __end_of__initialization 06B0               ?_SYSTEM_Initialize 0002  
                  ___rparam_used 000001                   __pcstackCOMRAM 0002  
            ??_SYSTEM_Initialize 0031                      _Read_Config 05A8  
           __end_of_EUSART1_Read 0750                  ??_Calc_Checksum 0029  
      __end_of_SYSTEM_Initialize 073E                       __pbssBANK0 0060  
                   Write_Flash@i 002F                  __CFG_PPS1WAY$ON 000000  
                  ??_Write_Flash 0029                          _SP1BRGH 000F9C  
                        _SP1BRGL 000F9B                          _OSCCON1 000ED8  
                        _OSCCON3 000EDA                          _TBLPTRH 000FF7  
                        _TBLPTRL 000FF6                          _TBLPTRU 000FF8  
                        _OSCTUNE 000EDD                          _NVMCON1 000F81  
                        _NVMCON2 000F82                          _PPSLOCK 000EA0  
                    ?_StartWrite 0002          __size_of_Run_Bootloader 00C8  
               _Get_Version_Data 038E                          __Hparam 0000  
                        __Lparam 0000       __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                        __pcinit 0698                          __ramtop 0F00  
        ??_BOOTLOADER_Initialize 0031                          __ptext0 000E  
                        __ptext1 072C                          __ptext2 02FA  
                        __ptext3 06E0                          __ptext4 0700  
                        __ptext5 0716                          __ptext6 019A  
                        __ptext7 0534                          __ptext8 00CE  
                        __ptext9 0422                          _counter 0031  
          _OSCILLATOR_Initialize 06E0              __end_of_Write_Flash 019A  
             _EUSART1_Initialize 0700         ??_PIN_MANAGER_Initialize 0029  
                        _rx_data 0037                          _tx_data 0036  
     __size_of_SYSTEM_Initialize 0012                   __pintcode_body 0262  
           end_of_initialization 06B0                ?_service_isr_high 0002  
            ?_EUSART1_Initialize 0002               ??_service_isr_high 0002  
                  __Lmediumconst 0000                          int_func 0262  
                _service_isr_low 0018                          postdec2 000FDD  
                   ?_Erase_Flash 0002                          postinc0 000FEE  
                        postinc2 000FDE            __size_of_EUSART1_Read 0012  
           ??_EUSART1_Initialize 0029              __size_of_StartWrite 000C  
          __CFG_WDTCPS$WDTCPS_31 000000              EUSART1_Write@txData 0029  
               __CFG_FEXTOSC$OFF 000000                     _EUSART1_Read 073E  
                   ?_Read_Config 0002       __end_of_Check_Device_Reset 0698  
                    _Write_Flash 00CE           ?_OSCILLATOR_Initialize 0002  
            start_initialization 0698  __size_of_PIN_MANAGER_Initialize 0094  
          __end_of_EUSART1_Write 075E                   _Run_Bootloader 019A  
        __end_of_service_isr_low 00CA                 __CFG_LPBOREN$OFF 000000  
              _Bootload_Required 06BE               ?_Bootload_Required 0002  
            ??_Bootload_Required 0029                    ?_Write_Config 0002  
       __end_of_Get_Version_Data 0422                      __pbssCOMRAM 0031  
                  __pcstackBANK0 00A9                      _data_length 0038  
                   ??_StartWrite 0029            __end_of_Calc_Checksum 066E  
         __end_of_Run_Bootloader 0262                    Write_Config@i 002B  
                      _check_sum 0033        __end_of_Bootload_Required 06E0  
         _PIN_MANAGER_Initialize 02FA                        __pintcode 0008  
                    __pintcodelo 0018             __size_of_Erase_Flash 0080  
             __end_of_StartWrite 076A                   ??_Write_Config 0029  
                       _BAUD1CON 000F9F   __size_of_BOOTLOADER_Initialize 0016  
  __end_of_BOOTLOADER_Initialize 072C                  ?_Run_Bootloader 0002  
                       _EE_Key_1 000000                         _EE_Key_2 000001  
               ?_service_isr_low 0002                    _reset_pending 0035  
            __CFG_BORV$VBOR_2P45 000000                         _PIR3bits 000ECD  
                       _PIR7bits 000ED1        __size_of_service_isr_high 02F2  
           __size_of_Read_Config 006E         Run_Bootloader@msg_length 00AA  
           ProcessBootBuffer@len 0030       __size_of_Bootload_Required 0022  
                       __Hrparam 0000                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000          ??_OSCILLATOR_Initialize 0029  
                   ?_Write_Flash 0002      __size_of_EUSART1_Initialize 0016  
             _Check_Device_Reset 066E                         __ptext10 05A8  
                       __ptext11 038E                         __ptext12 04B4  
                       __ptext13 075E                         __ptext14 0616  
                       __ptext15 0750                         __ptext16 073E  
                       __ptext17 066E                         __ptext18 06BE  
            ?_Check_Device_Reset 0002                    __size_of_main 0006  
               Run_Bootloader@ch 00A9             __end_of_Write_Config 04B4  
           __CFG_WDTCWS$WDTCWS_7 000000                       _RC1STAbits 000F9D  
            Run_Bootloader@index 00AB                         int$flags 0039  
           ??_Check_Device_Reset 0029      PIN_MANAGER_Initialize@state 0029  
              _ProcessBootBuffer 0534                       _INTCONbits 000FF2  
              Get_Version_Data@i 0029               ?_ProcessBootBuffer 0002  
                    _NVMCON1bits 000F81                ?_Get_Version_Data 0002  
             ??_Get_Version_Data 0029                         intlevel1 0000  
            ??_ProcessBootBuffer 0030                         intlevel2 0000  
        ?_PIN_MANAGER_Initialize 0002                __CFG_CLKOUTEN$OFF 000000  
                    _PPSLOCKbits 000EA0                 _service_isr_high 0008  
      __end_of_ProcessBootBuffer 05A8           __size_of_EUSART1_Write 000E  
                     _RX1PPSbits 000EB5                     Erase_Flash@i 0029  
               ??_Run_Bootloader 0031   __end_of_PIN_MANAGER_Initialize 038E  
                 Calc_Checksum@i 0029  
